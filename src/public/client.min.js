!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=20)}([function(e,t,n){"use strict";e.exports=n(7)},function(e,t,n){e.exports=n(17)()},function(e,t,n){"use strict";var r=function(){};e.exports=r},function(e,t,n){"use strict";e.exports=function(e,t,n,r,o,i,a,l){if(!e){var u;if(void 0===t)u=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var c=[n,r,o,i,a,l],s=0;(u=new Error(t.replace(/%s/g,function(){return c[s++]}))).name="Invariant Violation"}throw u.framesToPop=1,u}}},function(e,t,n){"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=n(8)},function(e,t,n){"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/var r=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,i=Object.prototype.propertyIsEnumerable;e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map(function(e){return t[e]}).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach(function(e){r[e]=e}),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,t){for(var n,a,l=function(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}(e),u=1;u<arguments.length;u++){for(var c in n=Object(arguments[u]))o.call(n,c)&&(l[c]=n[c]);if(r){a=r(n);for(var s=0;s<a.length;s++)i.call(n,a[s])&&(l[a[s]]=n[a[s]])}}return l}},function(e,t,n){var r=n(19);e.exports=d,e.exports.parse=i,e.exports.compile=function(e,t){return l(i(e,t))},e.exports.tokensToFunction=l,e.exports.tokensToRegExp=p;var o=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function i(e,t){for(var n,r=[],i=0,a=0,l="",s=t&&t.delimiter||"/";null!=(n=o.exec(e));){var f=n[0],p=n[1],d=n.index;if(l+=e.slice(a,d),a=d+f.length,p)l+=p[1];else{var h=e[a],m=n[2],y=n[3],v=n[4],g=n[5],b=n[6],w=n[7];l&&(r.push(l),l="");var x=null!=m&&null!=h&&h!==m,k="+"===b||"*"===b,T="?"===b||"*"===b,E=n[2]||s,S=v||g;r.push({name:y||i++,prefix:m||"",delimiter:E,optional:T,repeat:k,partial:x,asterisk:!!w,pattern:S?c(S):w?".*":"[^"+u(E)+"]+?"})}}return a<e.length&&(l+=e.substr(a)),l&&r.push(l),r}function a(e){return encodeURI(e).replace(/[\/?#]/g,function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})}function l(e){for(var t=new Array(e.length),n=0;n<e.length;n++)"object"==typeof e[n]&&(t[n]=new RegExp("^(?:"+e[n].pattern+")$"));return function(n,o){for(var i="",l=n||{},u=(o||{}).pretty?a:encodeURIComponent,c=0;c<e.length;c++){var s=e[c];if("string"!=typeof s){var f,p=l[s.name];if(null==p){if(s.optional){s.partial&&(i+=s.prefix);continue}throw new TypeError('Expected "'+s.name+'" to be defined')}if(r(p)){if(!s.repeat)throw new TypeError('Expected "'+s.name+'" to not repeat, but received `'+JSON.stringify(p)+"`");if(0===p.length){if(s.optional)continue;throw new TypeError('Expected "'+s.name+'" to not be empty')}for(var d=0;d<p.length;d++){if(f=u(p[d]),!t[c].test(f))throw new TypeError('Expected all "'+s.name+'" to match "'+s.pattern+'", but received `'+JSON.stringify(f)+"`");i+=(0===d?s.prefix:s.delimiter)+f}}else{if(f=s.asterisk?encodeURI(p).replace(/[?#]/g,function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}):u(p),!t[c].test(f))throw new TypeError('Expected "'+s.name+'" to match "'+s.pattern+'", but received "'+f+'"');i+=s.prefix+f}}else i+=s}return i}}function u(e){return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function c(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function s(e,t){return e.keys=t,e}function f(e){return e.sensitive?"":"i"}function p(e,t,n){r(t)||(n=t||n,t=[]);for(var o=(n=n||{}).strict,i=!1!==n.end,a="",l=0;l<e.length;l++){var c=e[l];if("string"==typeof c)a+=u(c);else{var p=u(c.prefix),d="(?:"+c.pattern+")";t.push(c),c.repeat&&(d+="(?:"+p+d+")*"),a+=d=c.optional?c.partial?p+"("+d+")?":"(?:"+p+"("+d+"))?":p+"("+d+")"}}var h=u(n.delimiter||"/"),m=a.slice(-h.length)===h;return o||(a=(m?a.slice(0,-h.length):a)+"(?:"+h+"(?=$))?"),a+=i?"$":o&&m?"":"(?="+h+"|$)",s(new RegExp("^"+a,f(n)),t)}function d(e,t,n){return r(t)||(n=t||n,t=[]),n=n||{},e instanceof RegExp?function(e,t){var n=e.source.match(/\((?!\?)/g);if(n)for(var r=0;r<n.length;r++)t.push({name:r,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return s(e,t)}(e,t):r(e)?function(e,t,n){for(var r=[],o=0;o<e.length;o++)r.push(d(e[o],t,n).source);return s(new RegExp("(?:"+r.join("|")+")",f(n)),t)}(e,t,n):function(e,t,n){return p(i(e,n),t,n)}(e,t,n)}},function(e,t,n){"use strict";
/** @license React v16.8.6
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(5),o="function"==typeof Symbol&&Symbol.for,i=o?Symbol.for("react.element"):60103,a=o?Symbol.for("react.portal"):60106,l=o?Symbol.for("react.fragment"):60107,u=o?Symbol.for("react.strict_mode"):60108,c=o?Symbol.for("react.profiler"):60114,s=o?Symbol.for("react.provider"):60109,f=o?Symbol.for("react.context"):60110,p=o?Symbol.for("react.concurrent_mode"):60111,d=o?Symbol.for("react.forward_ref"):60112,h=o?Symbol.for("react.suspense"):60113,m=o?Symbol.for("react.memo"):60115,y=o?Symbol.for("react.lazy"):60116,v="function"==typeof Symbol&&Symbol.iterator;function g(e){for(var t=arguments.length-1,n="https://reactjs.org/docs/error-decoder.html?invariant="+e,r=0;r<t;r++)n+="&args[]="+encodeURIComponent(arguments[r+1]);!function(e,t,n,r,o,i,a,l){if(!e){if(e=void 0,void 0===t)e=Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var u=[n,r,o,i,a,l],c=0;(e=Error(t.replace(/%s/g,function(){return u[c++]}))).name="Invariant Violation"}throw e.framesToPop=1,e}}(!1,"Minified React error #"+e+"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",n)}var b={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},w={};function x(e,t,n){this.props=e,this.context=t,this.refs=w,this.updater=n||b}function k(){}function T(e,t,n){this.props=e,this.context=t,this.refs=w,this.updater=n||b}x.prototype.isReactComponent={},x.prototype.setState=function(e,t){"object"!=typeof e&&"function"!=typeof e&&null!=e&&g("85"),this.updater.enqueueSetState(this,e,t,"setState")},x.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},k.prototype=x.prototype;var E=T.prototype=new k;E.constructor=T,r(E,x.prototype),E.isPureReactComponent=!0;var S={current:null},_={current:null},C=Object.prototype.hasOwnProperty,P={key:!0,ref:!0,__self:!0,__source:!0};function O(e,t,n){var r=void 0,o={},a=null,l=null;if(null!=t)for(r in void 0!==t.ref&&(l=t.ref),void 0!==t.key&&(a=""+t.key),t)C.call(t,r)&&!P.hasOwnProperty(r)&&(o[r]=t[r]);var u=arguments.length-2;if(1===u)o.children=n;else if(1<u){for(var c=Array(u),s=0;s<u;s++)c[s]=arguments[s+2];o.children=c}if(e&&e.defaultProps)for(r in u=e.defaultProps)void 0===o[r]&&(o[r]=u[r]);return{$$typeof:i,type:e,key:a,ref:l,props:o,_owner:_.current}}function R(e){return"object"==typeof e&&null!==e&&e.$$typeof===i}var N=/\/+/g,j=[];function U(e,t,n,r){if(j.length){var o=j.pop();return o.result=e,o.keyPrefix=t,o.func=n,o.context=r,o.count=0,o}return{result:e,keyPrefix:t,func:n,context:r,count:0}}function M(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>j.length&&j.push(e)}function I(e,t,n){return null==e?0:function e(t,n,r,o){var l=typeof t;"undefined"!==l&&"boolean"!==l||(t=null);var u=!1;if(null===t)u=!0;else switch(l){case"string":case"number":u=!0;break;case"object":switch(t.$$typeof){case i:case a:u=!0}}if(u)return r(o,t,""===n?"."+z(t,0):n),1;if(u=0,n=""===n?".":n+":",Array.isArray(t))for(var c=0;c<t.length;c++){var s=n+z(l=t[c],c);u+=e(l,s,r,o)}else if(s=null===t||"object"!=typeof t?null:"function"==typeof(s=v&&t[v]||t["@@iterator"])?s:null,"function"==typeof s)for(t=s.call(t),c=0;!(l=t.next()).done;)u+=e(l=l.value,s=n+z(l,c++),r,o);else"object"===l&&g("31","[object Object]"==(r=""+t)?"object with keys {"+Object.keys(t).join(", ")+"}":r,"");return u}(e,"",t,n)}function z(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,function(e){return t[e]})}(e.key):t.toString(36)}function L(e,t){e.func.call(e.context,t,e.count++)}function A(e,t,n){var r=e.result,o=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?D(e,r,n,function(e){return e}):null!=e&&(R(e)&&(e=function(e,t){return{$$typeof:i,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(e,o+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(N,"$&/")+"/")+n)),r.push(e))}function D(e,t,n,r,o){var i="";null!=n&&(i=(""+n).replace(N,"$&/")+"/"),I(e,A,t=U(t,i,r,o)),M(t)}function F(){var e=S.current;return null===e&&g("321"),e}var W={Children:{map:function(e,t,n){if(null==e)return e;var r=[];return D(e,r,null,t,n),r},forEach:function(e,t,n){if(null==e)return e;I(e,L,t=U(null,null,t,n)),M(t)},count:function(e){return I(e,function(){return null},null)},toArray:function(e){var t=[];return D(e,t,null,function(e){return e}),t},only:function(e){return R(e)||g("143"),e}},createRef:function(){return{current:null}},Component:x,PureComponent:T,createContext:function(e,t){return void 0===t&&(t=null),(e={$$typeof:f,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:s,_context:e},e.Consumer=e},forwardRef:function(e){return{$$typeof:d,render:e}},lazy:function(e){return{$$typeof:y,_ctor:e,_status:-1,_result:null}},memo:function(e,t){return{$$typeof:m,type:e,compare:void 0===t?null:t}},useCallback:function(e,t){return F().useCallback(e,t)},useContext:function(e,t){return F().useContext(e,t)},useEffect:function(e,t){return F().useEffect(e,t)},useImperativeHandle:function(e,t,n){return F().useImperativeHandle(e,t,n)},useDebugValue:function(){},useLayoutEffect:function(e,t){return F().useLayoutEffect(e,t)},useMemo:function(e,t){return F().useMemo(e,t)},useReducer:function(e,t,n){return F().useReducer(e,t,n)},useRef:function(e){return F().useRef(e)},useState:function(e){return F().useState(e)},Fragment:l,StrictMode:u,Suspense:h,createElement:O,cloneElement:function(e,t,n){null==e&&g("267",e);var o=void 0,a=r({},e.props),l=e.key,u=e.ref,c=e._owner;if(null!=t){void 0!==t.ref&&(u=t.ref,c=_.current),void 0!==t.key&&(l=""+t.key);var s=void 0;for(o in e.type&&e.type.defaultProps&&(s=e.type.defaultProps),t)C.call(t,o)&&!P.hasOwnProperty(o)&&(a[o]=void 0===t[o]&&void 0!==s?s[o]:t[o])}if(1===(o=arguments.length-2))a.children=n;else if(1<o){s=Array(o);for(var f=0;f<o;f++)s[f]=arguments[f+2];a.children=s}return{$$typeof:i,type:e.type,key:l,ref:u,props:a,_owner:c}},createFactory:function(e){var t=O.bind(null,e);return t.type=e,t},isValidElement:R,version:"16.8.6",unstable_ConcurrentMode:p,unstable_Profiler:c,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentDispatcher:S,ReactCurrentOwner:_,assign:r}},B={default:W},V=B&&W||B;e.exports=V.default||V},function(e,t,n){"use strict";
/** @license React v16.8.6
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(0),o=n(5),i=n(9);function a(e){for(var t=arguments.length-1,n="https://reactjs.org/docs/error-decoder.html?invariant="+e,r=0;r<t;r++)n+="&args[]="+encodeURIComponent(arguments[r+1]);!function(e,t,n,r,o,i,a,l){if(!e){if(e=void 0,void 0===t)e=Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var u=[n,r,o,i,a,l],c=0;(e=Error(t.replace(/%s/g,function(){return u[c++]}))).name="Invariant Violation"}throw e.framesToPop=1,e}}(!1,"Minified React error #"+e+"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",n)}r||a("227");var l=!1,u=null,c=!1,s=null,f={onError:function(e){l=!0,u=e}};function p(e,t,n,r,o,i,a,c,s){l=!1,u=null,function(e,t,n,r,o,i,a,l,u){var c=Array.prototype.slice.call(arguments,3);try{t.apply(n,c)}catch(e){this.onError(e)}}.apply(f,arguments)}var d=null,h={};function m(){if(d)for(var e in h){var t=h[e],n=d.indexOf(e);if(-1<n||a("96",e),!v[n])for(var r in t.extractEvents||a("97",e),v[n]=t,n=t.eventTypes){var o=void 0,i=n[r],l=t,u=r;g.hasOwnProperty(u)&&a("99",u),g[u]=i;var c=i.phasedRegistrationNames;if(c){for(o in c)c.hasOwnProperty(o)&&y(c[o],l,u);o=!0}else i.registrationName?(y(i.registrationName,l,u),o=!0):o=!1;o||a("98",r,e)}}}function y(e,t,n){b[e]&&a("100",e),b[e]=t,w[e]=t.eventTypes[n].dependencies}var v=[],g={},b={},w={},x=null,k=null,T=null;function E(e,t,n){var r=e.type||"unknown-event";e.currentTarget=T(n),function(e,t,n,r,o,i,f,d,h){if(p.apply(this,arguments),l){if(l){var m=u;l=!1,u=null}else a("198"),m=void 0;c||(c=!0,s=m)}}(r,t,void 0,e),e.currentTarget=null}function S(e,t){return null==t&&a("30"),null==e?t:Array.isArray(e)?Array.isArray(t)?(e.push.apply(e,t),e):(e.push(t),e):Array.isArray(t)?[e].concat(t):[e,t]}function _(e,t,n){Array.isArray(e)?e.forEach(t,n):e&&t.call(n,e)}var C=null;function P(e){if(e){var t=e._dispatchListeners,n=e._dispatchInstances;if(Array.isArray(t))for(var r=0;r<t.length&&!e.isPropagationStopped();r++)E(e,t[r],n[r]);else t&&E(e,t,n);e._dispatchListeners=null,e._dispatchInstances=null,e.isPersistent()||e.constructor.release(e)}}var O={injectEventPluginOrder:function(e){d&&a("101"),d=Array.prototype.slice.call(e),m()},injectEventPluginsByName:function(e){var t,n=!1;for(t in e)if(e.hasOwnProperty(t)){var r=e[t];h.hasOwnProperty(t)&&h[t]===r||(h[t]&&a("102",t),h[t]=r,n=!0)}n&&m()}};function R(e,t){var n=e.stateNode;if(!n)return null;var r=x(n);if(!r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}return e?null:(n&&"function"!=typeof n&&a("231",t,typeof n),n)}function N(e){if(null!==e&&(C=S(C,e)),e=C,C=null,e&&(_(e,P),C&&a("95"),c))throw e=s,c=!1,s=null,e}var j=Math.random().toString(36).slice(2),U="__reactInternalInstance$"+j,M="__reactEventHandlers$"+j;function I(e){if(e[U])return e[U];for(;!e[U];){if(!e.parentNode)return null;e=e.parentNode}return 5===(e=e[U]).tag||6===e.tag?e:null}function z(e){return!(e=e[U])||5!==e.tag&&6!==e.tag?null:e}function L(e){if(5===e.tag||6===e.tag)return e.stateNode;a("33")}function A(e){return e[M]||null}function D(e){do{e=e.return}while(e&&5!==e.tag);return e||null}function F(e,t,n){(t=R(e,n.dispatchConfig.phasedRegistrationNames[t]))&&(n._dispatchListeners=S(n._dispatchListeners,t),n._dispatchInstances=S(n._dispatchInstances,e))}function W(e){if(e&&e.dispatchConfig.phasedRegistrationNames){for(var t=e._targetInst,n=[];t;)n.push(t),t=D(t);for(t=n.length;0<t--;)F(n[t],"captured",e);for(t=0;t<n.length;t++)F(n[t],"bubbled",e)}}function B(e,t,n){e&&n&&n.dispatchConfig.registrationName&&(t=R(e,n.dispatchConfig.registrationName))&&(n._dispatchListeners=S(n._dispatchListeners,t),n._dispatchInstances=S(n._dispatchInstances,e))}function V(e){e&&e.dispatchConfig.registrationName&&B(e._targetInst,null,e)}function $(e){_(e,W)}var H=!("undefined"==typeof window||!window.document||!window.document.createElement);function q(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var Q={animationend:q("Animation","AnimationEnd"),animationiteration:q("Animation","AnimationIteration"),animationstart:q("Animation","AnimationStart"),transitionend:q("Transition","TransitionEnd")},Y={},K={};function X(e){if(Y[e])return Y[e];if(!Q[e])return e;var t,n=Q[e];for(t in n)if(n.hasOwnProperty(t)&&t in K)return Y[e]=n[t];return e}H&&(K=document.createElement("div").style,"AnimationEvent"in window||(delete Q.animationend.animation,delete Q.animationiteration.animation,delete Q.animationstart.animation),"TransitionEvent"in window||delete Q.transitionend.transition);var G=X("animationend"),J=X("animationiteration"),Z=X("animationstart"),ee=X("transitionend"),te="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),ne=null,re=null,oe=null;function ie(){if(oe)return oe;var e,t,n=re,r=n.length,o="value"in ne?ne.value:ne.textContent,i=o.length;for(e=0;e<r&&n[e]===o[e];e++);var a=r-e;for(t=1;t<=a&&n[r-t]===o[i-t];t++);return oe=o.slice(e,1<t?1-t:void 0)}function ae(){return!0}function le(){return!1}function ue(e,t,n,r){for(var o in this.dispatchConfig=e,this._targetInst=t,this.nativeEvent=n,e=this.constructor.Interface)e.hasOwnProperty(o)&&((t=e[o])?this[o]=t(n):"target"===o?this.target=r:this[o]=n[o]);return this.isDefaultPrevented=(null!=n.defaultPrevented?n.defaultPrevented:!1===n.returnValue)?ae:le,this.isPropagationStopped=le,this}function ce(e,t,n,r){if(this.eventPool.length){var o=this.eventPool.pop();return this.call(o,e,t,n,r),o}return new this(e,t,n,r)}function se(e){e instanceof this||a("279"),e.destructor(),10>this.eventPool.length&&this.eventPool.push(e)}function fe(e){e.eventPool=[],e.getPooled=ce,e.release=se}o(ue.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=ae)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=ae)},persist:function(){this.isPersistent=ae},isPersistent:le,destructor:function(){var e,t=this.constructor.Interface;for(e in t)this[e]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null,this.isPropagationStopped=this.isDefaultPrevented=le,this._dispatchInstances=this._dispatchListeners=null}}),ue.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null},ue.extend=function(e){function t(){}function n(){return r.apply(this,arguments)}var r=this;t.prototype=r.prototype;var i=new t;return o(i,n.prototype),n.prototype=i,n.prototype.constructor=n,n.Interface=o({},r.Interface,e),n.extend=r.extend,fe(n),n},fe(ue);var pe=ue.extend({data:null}),de=ue.extend({data:null}),he=[9,13,27,32],me=H&&"CompositionEvent"in window,ye=null;H&&"documentMode"in document&&(ye=document.documentMode);var ve=H&&"TextEvent"in window&&!ye,ge=H&&(!me||ye&&8<ye&&11>=ye),be=String.fromCharCode(32),we={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},xe=!1;function ke(e,t){switch(e){case"keyup":return-1!==he.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"blur":return!0;default:return!1}}function Te(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var Ee=!1;var Se={eventTypes:we,extractEvents:function(e,t,n,r){var o=void 0,i=void 0;if(me)e:{switch(e){case"compositionstart":o=we.compositionStart;break e;case"compositionend":o=we.compositionEnd;break e;case"compositionupdate":o=we.compositionUpdate;break e}o=void 0}else Ee?ke(e,n)&&(o=we.compositionEnd):"keydown"===e&&229===n.keyCode&&(o=we.compositionStart);return o?(ge&&"ko"!==n.locale&&(Ee||o!==we.compositionStart?o===we.compositionEnd&&Ee&&(i=ie()):(re="value"in(ne=r)?ne.value:ne.textContent,Ee=!0)),o=pe.getPooled(o,t,n,r),i?o.data=i:null!==(i=Te(n))&&(o.data=i),$(o),i=o):i=null,(e=ve?function(e,t){switch(e){case"compositionend":return Te(t);case"keypress":return 32!==t.which?null:(xe=!0,be);case"textInput":return(e=t.data)===be&&xe?null:e;default:return null}}(e,n):function(e,t){if(Ee)return"compositionend"===e||!me&&ke(e,t)?(e=ie(),oe=re=ne=null,Ee=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return ge&&"ko"!==t.locale?null:t.data;default:return null}}(e,n))?((t=de.getPooled(we.beforeInput,t,n,r)).data=e,$(t)):t=null,null===i?t:null===t?i:[i,t]}},_e=null,Ce=null,Pe=null;function Oe(e){if(e=k(e)){"function"!=typeof _e&&a("280");var t=x(e.stateNode);_e(e.stateNode,e.type,t)}}function Re(e){Ce?Pe?Pe.push(e):Pe=[e]:Ce=e}function Ne(){if(Ce){var e=Ce,t=Pe;if(Pe=Ce=null,Oe(e),t)for(e=0;e<t.length;e++)Oe(t[e])}}function je(e,t){return e(t)}function Ue(e,t,n){return e(t,n)}function Me(){}var Ie=!1;function ze(e,t){if(Ie)return e(t);Ie=!0;try{return je(e,t)}finally{Ie=!1,(null!==Ce||null!==Pe)&&(Me(),Ne())}}var Le={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Ae(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Le[e.type]:"textarea"===t}function De(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}function Fe(e){if(!H)return!1;var t=(e="on"+e)in document;return t||((t=document.createElement("div")).setAttribute(e,"return;"),t="function"==typeof t[e]),t}function We(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function Be(e){e._valueTracker||(e._valueTracker=function(e){var t=We(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var o=n.get,i=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return o.call(this)},set:function(e){r=""+e,i.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function Ve(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=We(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}var $e=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;$e.hasOwnProperty("ReactCurrentDispatcher")||($e.ReactCurrentDispatcher={current:null});var He=/^(.*)[\\\/]/,qe="function"==typeof Symbol&&Symbol.for,Qe=qe?Symbol.for("react.element"):60103,Ye=qe?Symbol.for("react.portal"):60106,Ke=qe?Symbol.for("react.fragment"):60107,Xe=qe?Symbol.for("react.strict_mode"):60108,Ge=qe?Symbol.for("react.profiler"):60114,Je=qe?Symbol.for("react.provider"):60109,Ze=qe?Symbol.for("react.context"):60110,et=qe?Symbol.for("react.concurrent_mode"):60111,tt=qe?Symbol.for("react.forward_ref"):60112,nt=qe?Symbol.for("react.suspense"):60113,rt=qe?Symbol.for("react.memo"):60115,ot=qe?Symbol.for("react.lazy"):60116,it="function"==typeof Symbol&&Symbol.iterator;function at(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=it&&e[it]||e["@@iterator"])?e:null}function lt(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case et:return"ConcurrentMode";case Ke:return"Fragment";case Ye:return"Portal";case Ge:return"Profiler";case Xe:return"StrictMode";case nt:return"Suspense"}if("object"==typeof e)switch(e.$$typeof){case Ze:return"Context.Consumer";case Je:return"Context.Provider";case tt:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case rt:return lt(e.type);case ot:if(e=1===e._status?e._result:null)return lt(e)}return null}function ut(e){var t="";do{e:switch(e.tag){case 3:case 4:case 6:case 7:case 10:case 9:var n="";break e;default:var r=e._debugOwner,o=e._debugSource,i=lt(e.type);n=null,r&&(n=lt(r.type)),r=i,i="",o?i=" (at "+o.fileName.replace(He,"")+":"+o.lineNumber+")":n&&(i=" (created by "+n+")"),n="\n    in "+(r||"Unknown")+i}t+=n,e=e.return}while(e);return t}var ct=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,st=Object.prototype.hasOwnProperty,ft={},pt={};function dt(e,t,n,r,o){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=o,this.mustUseProperty=n,this.propertyName=e,this.type=t}var ht={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(e){ht[e]=new dt(e,0,!1,e,null)}),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(e){var t=e[0];ht[t]=new dt(t,1,!1,e[1],null)}),["contentEditable","draggable","spellCheck","value"].forEach(function(e){ht[e]=new dt(e,2,!1,e.toLowerCase(),null)}),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(e){ht[e]=new dt(e,2,!1,e,null)}),"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(e){ht[e]=new dt(e,3,!1,e.toLowerCase(),null)}),["checked","multiple","muted","selected"].forEach(function(e){ht[e]=new dt(e,3,!0,e,null)}),["capture","download"].forEach(function(e){ht[e]=new dt(e,4,!1,e,null)}),["cols","rows","size","span"].forEach(function(e){ht[e]=new dt(e,6,!1,e,null)}),["rowSpan","start"].forEach(function(e){ht[e]=new dt(e,5,!1,e.toLowerCase(),null)});var mt=/[\-:]([a-z])/g;function yt(e){return e[1].toUpperCase()}function vt(e,t,n,r){var o=ht.hasOwnProperty(t)?ht[t]:null;(null!==o?0===o.type:!r&&(2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1])))||(function(e,t,n,r){if(null==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,o,r)&&(n=null),r||null===o?function(e){return!!st.call(pt,e)||!st.call(ft,e)&&(ct.test(e)?pt[e]=!0:(ft[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):o.mustUseProperty?e[o.propertyName]=null===n?3!==o.type&&"":n:(t=o.attributeName,r=o.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(o=o.type)||4===o&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}function gt(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function bt(e,t){var n=t.checked;return o({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function wt(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=gt(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function xt(e,t){null!=(t=t.checked)&&vt(e,"checked",t,!1)}function kt(e,t){xt(e,t);var n=gt(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?Et(e,t.type,n):t.hasOwnProperty("defaultValue")&&Et(e,t.type,gt(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function Tt(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!e.defaultChecked,e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function Et(e,t,n){"number"===t&&e.ownerDocument.activeElement===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(e){var t=e.replace(mt,yt);ht[t]=new dt(t,1,!1,e,null)}),"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(e){var t=e.replace(mt,yt);ht[t]=new dt(t,1,!1,e,"http://www.w3.org/1999/xlink")}),["xml:base","xml:lang","xml:space"].forEach(function(e){var t=e.replace(mt,yt);ht[t]=new dt(t,1,!1,e,"http://www.w3.org/XML/1998/namespace")}),["tabIndex","crossOrigin"].forEach(function(e){ht[e]=new dt(e,1,!1,e.toLowerCase(),null)});var St={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function _t(e,t,n){return(e=ue.getPooled(St.change,e,t,n)).type="change",Re(n),$(e),e}var Ct=null,Pt=null;function Ot(e){N(e)}function Rt(e){if(Ve(L(e)))return e}function Nt(e,t){if("change"===e)return t}var jt=!1;function Ut(){Ct&&(Ct.detachEvent("onpropertychange",Mt),Pt=Ct=null)}function Mt(e){"value"===e.propertyName&&Rt(Pt)&&ze(Ot,e=_t(Pt,e,De(e)))}function It(e,t,n){"focus"===e?(Ut(),Pt=n,(Ct=t).attachEvent("onpropertychange",Mt)):"blur"===e&&Ut()}function zt(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Rt(Pt)}function Lt(e,t){if("click"===e)return Rt(t)}function At(e,t){if("input"===e||"change"===e)return Rt(t)}H&&(jt=Fe("input")&&(!document.documentMode||9<document.documentMode));var Dt={eventTypes:St,_isInputEventSupported:jt,extractEvents:function(e,t,n,r){var o=t?L(t):window,i=void 0,a=void 0,l=o.nodeName&&o.nodeName.toLowerCase();if("select"===l||"input"===l&&"file"===o.type?i=Nt:Ae(o)?jt?i=At:(i=zt,a=It):(l=o.nodeName)&&"input"===l.toLowerCase()&&("checkbox"===o.type||"radio"===o.type)&&(i=Lt),i&&(i=i(e,t)))return _t(i,n,r);a&&a(e,o,t),"blur"===e&&(e=o._wrapperState)&&e.controlled&&"number"===o.type&&Et(o,"number",o.value)}},Ft=ue.extend({view:null,detail:null}),Wt={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Bt(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Wt[e])&&!!t[e]}function Vt(){return Bt}var $t=0,Ht=0,qt=!1,Qt=!1,Yt=Ft.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Vt,button:null,buttons:null,relatedTarget:function(e){return e.relatedTarget||(e.fromElement===e.srcElement?e.toElement:e.fromElement)},movementX:function(e){if("movementX"in e)return e.movementX;var t=$t;return $t=e.screenX,qt?"mousemove"===e.type?e.screenX-t:0:(qt=!0,0)},movementY:function(e){if("movementY"in e)return e.movementY;var t=Ht;return Ht=e.screenY,Qt?"mousemove"===e.type?e.screenY-t:0:(Qt=!0,0)}}),Kt=Yt.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),Xt={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",dependencies:["pointerout","pointerover"]}},Gt={eventTypes:Xt,extractEvents:function(e,t,n,r){var o="mouseover"===e||"pointerover"===e,i="mouseout"===e||"pointerout"===e;if(o&&(n.relatedTarget||n.fromElement)||!i&&!o)return null;if(o=r.window===r?r:(o=r.ownerDocument)?o.defaultView||o.parentWindow:window,i?(i=t,t=(t=n.relatedTarget||n.toElement)?I(t):null):i=null,i===t)return null;var a=void 0,l=void 0,u=void 0,c=void 0;"mouseout"===e||"mouseover"===e?(a=Yt,l=Xt.mouseLeave,u=Xt.mouseEnter,c="mouse"):"pointerout"!==e&&"pointerover"!==e||(a=Kt,l=Xt.pointerLeave,u=Xt.pointerEnter,c="pointer");var s=null==i?o:L(i);if(o=null==t?o:L(t),(e=a.getPooled(l,i,n,r)).type=c+"leave",e.target=s,e.relatedTarget=o,(n=a.getPooled(u,t,n,r)).type=c+"enter",n.target=o,n.relatedTarget=s,r=t,i&&r)e:{for(o=r,c=0,a=t=i;a;a=D(a))c++;for(a=0,u=o;u;u=D(u))a++;for(;0<c-a;)t=D(t),c--;for(;0<a-c;)o=D(o),a--;for(;c--;){if(t===o||t===o.alternate)break e;t=D(t),o=D(o)}t=null}else t=null;for(o=t,t=[];i&&i!==o&&(null===(c=i.alternate)||c!==o);)t.push(i),i=D(i);for(i=[];r&&r!==o&&(null===(c=r.alternate)||c!==o);)i.push(r),r=D(r);for(r=0;r<t.length;r++)B(t[r],"bubbled",e);for(r=i.length;0<r--;)B(i[r],"captured",n);return[e,n]}};function Jt(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t}var Zt=Object.prototype.hasOwnProperty;function en(e,t){if(Jt(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++)if(!Zt.call(t,n[r])||!Jt(e[n[r]],t[n[r]]))return!1;return!0}function tn(e){var t=e;if(e.alternate)for(;t.return;)t=t.return;else{if(0!=(2&t.effectTag))return 1;for(;t.return;)if(0!=(2&(t=t.return).effectTag))return 1}return 3===t.tag?2:3}function nn(e){2!==tn(e)&&a("188")}function rn(e){if(!(e=function(e){var t=e.alternate;if(!t)return 3===(t=tn(e))&&a("188"),1===t?null:e;for(var n=e,r=t;;){var o=n.return,i=o?o.alternate:null;if(!o||!i)break;if(o.child===i.child){for(var l=o.child;l;){if(l===n)return nn(o),e;if(l===r)return nn(o),t;l=l.sibling}a("188")}if(n.return!==r.return)n=o,r=i;else{l=!1;for(var u=o.child;u;){if(u===n){l=!0,n=o,r=i;break}if(u===r){l=!0,r=o,n=i;break}u=u.sibling}if(!l){for(u=i.child;u;){if(u===n){l=!0,n=i,r=o;break}if(u===r){l=!0,r=i,n=o;break}u=u.sibling}l||a("189")}}n.alternate!==r&&a("190")}return 3!==n.tag&&a("188"),n.stateNode.current===n?e:t}(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}var on=ue.extend({animationName:null,elapsedTime:null,pseudoElement:null}),an=ue.extend({clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),ln=Ft.extend({relatedTarget:null});function un(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}var cn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},sn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},fn=Ft.extend({key:function(e){if(e.key){var t=cn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=un(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?sn[e.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Vt,charCode:function(e){return"keypress"===e.type?un(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?un(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),pn=Yt.extend({dataTransfer:null}),dn=Ft.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Vt}),hn=ue.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),mn=Yt.extend({deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:null,deltaMode:null}),yn=[["abort","abort"],[G,"animationEnd"],[J,"animationIteration"],[Z,"animationStart"],["canplay","canPlay"],["canplaythrough","canPlayThrough"],["drag","drag"],["dragenter","dragEnter"],["dragexit","dragExit"],["dragleave","dragLeave"],["dragover","dragOver"],["durationchange","durationChange"],["emptied","emptied"],["encrypted","encrypted"],["ended","ended"],["error","error"],["gotpointercapture","gotPointerCapture"],["load","load"],["loadeddata","loadedData"],["loadedmetadata","loadedMetadata"],["loadstart","loadStart"],["lostpointercapture","lostPointerCapture"],["mousemove","mouseMove"],["mouseout","mouseOut"],["mouseover","mouseOver"],["playing","playing"],["pointermove","pointerMove"],["pointerout","pointerOut"],["pointerover","pointerOver"],["progress","progress"],["scroll","scroll"],["seeking","seeking"],["stalled","stalled"],["suspend","suspend"],["timeupdate","timeUpdate"],["toggle","toggle"],["touchmove","touchMove"],[ee,"transitionEnd"],["waiting","waiting"],["wheel","wheel"]],vn={},gn={};function bn(e,t){var n=e[0],r="on"+((e=e[1])[0].toUpperCase()+e.slice(1));t={phasedRegistrationNames:{bubbled:r,captured:r+"Capture"},dependencies:[n],isInteractive:t},vn[e]=t,gn[n]=t}[["blur","blur"],["cancel","cancel"],["click","click"],["close","close"],["contextmenu","contextMenu"],["copy","copy"],["cut","cut"],["auxclick","auxClick"],["dblclick","doubleClick"],["dragend","dragEnd"],["dragstart","dragStart"],["drop","drop"],["focus","focus"],["input","input"],["invalid","invalid"],["keydown","keyDown"],["keypress","keyPress"],["keyup","keyUp"],["mousedown","mouseDown"],["mouseup","mouseUp"],["paste","paste"],["pause","pause"],["play","play"],["pointercancel","pointerCancel"],["pointerdown","pointerDown"],["pointerup","pointerUp"],["ratechange","rateChange"],["reset","reset"],["seeked","seeked"],["submit","submit"],["touchcancel","touchCancel"],["touchend","touchEnd"],["touchstart","touchStart"],["volumechange","volumeChange"]].forEach(function(e){bn(e,!0)}),yn.forEach(function(e){bn(e,!1)});var wn={eventTypes:vn,isInteractiveTopLevelEventType:function(e){return void 0!==(e=gn[e])&&!0===e.isInteractive},extractEvents:function(e,t,n,r){var o=gn[e];if(!o)return null;switch(e){case"keypress":if(0===un(n))return null;case"keydown":case"keyup":e=fn;break;case"blur":case"focus":e=ln;break;case"click":if(2===n.button)return null;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":e=Yt;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":e=pn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":e=dn;break;case G:case J:case Z:e=on;break;case ee:e=hn;break;case"scroll":e=Ft;break;case"wheel":e=mn;break;case"copy":case"cut":case"paste":e=an;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":e=Kt;break;default:e=ue}return $(t=e.getPooled(o,t,n,r)),t}},xn=wn.isInteractiveTopLevelEventType,kn=[];function Tn(e){var t=e.targetInst,n=t;do{if(!n){e.ancestors.push(n);break}var r;for(r=n;r.return;)r=r.return;if(!(r=3!==r.tag?null:r.stateNode.containerInfo))break;e.ancestors.push(n),n=I(r)}while(n);for(n=0;n<e.ancestors.length;n++){t=e.ancestors[n];var o=De(e.nativeEvent);r=e.topLevelType;for(var i=e.nativeEvent,a=null,l=0;l<v.length;l++){var u=v[l];u&&(u=u.extractEvents(r,t,i,o))&&(a=S(a,u))}N(a)}}var En=!0;function Sn(e,t){if(!t)return null;var n=(xn(e)?Cn:Pn).bind(null,e);t.addEventListener(e,n,!1)}function _n(e,t){if(!t)return null;var n=(xn(e)?Cn:Pn).bind(null,e);t.addEventListener(e,n,!0)}function Cn(e,t){Ue(Pn,e,t)}function Pn(e,t){if(En){var n=De(t);if(null===(n=I(n))||"number"!=typeof n.tag||2===tn(n)||(n=null),kn.length){var r=kn.pop();r.topLevelType=e,r.nativeEvent=t,r.targetInst=n,e=r}else e={topLevelType:e,nativeEvent:t,targetInst:n,ancestors:[]};try{ze(Tn,e)}finally{e.topLevelType=null,e.nativeEvent=null,e.targetInst=null,e.ancestors.length=0,10>kn.length&&kn.push(e)}}}var On={},Rn=0,Nn="_reactListenersID"+(""+Math.random()).slice(2);function jn(e){return Object.prototype.hasOwnProperty.call(e,Nn)||(e[Nn]=Rn++,On[e[Nn]]={}),On[e[Nn]]}function Un(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function Mn(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function In(e,t){var n,r=Mn(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=Mn(r)}}function zn(){for(var e=window,t=Un();t instanceof e.HTMLIFrameElement;){try{var n="string"==typeof t.contentWindow.location.href}catch(e){n=!1}if(!n)break;t=Un((e=t.contentWindow).document)}return t}function Ln(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}function An(e){var t=zn(),n=e.focusedElem,r=e.selectionRange;if(t!==n&&n&&n.ownerDocument&&function e(t,n){return!(!t||!n)&&(t===n||(!t||3!==t.nodeType)&&(n&&3===n.nodeType?e(t,n.parentNode):"contains"in t?t.contains(n):!!t.compareDocumentPosition&&!!(16&t.compareDocumentPosition(n))))}(n.ownerDocument.documentElement,n)){if(null!==r&&Ln(n))if(t=r.start,void 0===(e=r.end)&&(e=t),"selectionStart"in n)n.selectionStart=t,n.selectionEnd=Math.min(e,n.value.length);else if((e=(t=n.ownerDocument||document)&&t.defaultView||window).getSelection){e=e.getSelection();var o=n.textContent.length,i=Math.min(r.start,o);r=void 0===r.end?i:Math.min(r.end,o),!e.extend&&i>r&&(o=r,r=i,i=o),o=In(n,i);var a=In(n,r);o&&a&&(1!==e.rangeCount||e.anchorNode!==o.node||e.anchorOffset!==o.offset||e.focusNode!==a.node||e.focusOffset!==a.offset)&&((t=t.createRange()).setStart(o.node,o.offset),e.removeAllRanges(),i>r?(e.addRange(t),e.extend(a.node,a.offset)):(t.setEnd(a.node,a.offset),e.addRange(t)))}for(t=[],e=n;e=e.parentNode;)1===e.nodeType&&t.push({element:e,left:e.scrollLeft,top:e.scrollTop});for("function"==typeof n.focus&&n.focus(),n=0;n<t.length;n++)(e=t[n]).element.scrollLeft=e.left,e.element.scrollTop=e.top}}var Dn=H&&"documentMode"in document&&11>=document.documentMode,Fn={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ")}},Wn=null,Bn=null,Vn=null,$n=!1;function Hn(e,t){var n=t.window===t?t.document:9===t.nodeType?t:t.ownerDocument;return $n||null==Wn||Wn!==Un(n)?null:("selectionStart"in(n=Wn)&&Ln(n)?n={start:n.selectionStart,end:n.selectionEnd}:n={anchorNode:(n=(n.ownerDocument&&n.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset},Vn&&en(Vn,n)?null:(Vn=n,(e=ue.getPooled(Fn.select,Bn,e,t)).type="select",e.target=Wn,$(e),e))}var qn={eventTypes:Fn,extractEvents:function(e,t,n,r){var o,i=r.window===r?r.document:9===r.nodeType?r:r.ownerDocument;if(!(o=!i)){e:{i=jn(i),o=w.onSelect;for(var a=0;a<o.length;a++){var l=o[a];if(!i.hasOwnProperty(l)||!i[l]){i=!1;break e}}i=!0}o=!i}if(o)return null;switch(i=t?L(t):window,e){case"focus":(Ae(i)||"true"===i.contentEditable)&&(Wn=i,Bn=t,Vn=null);break;case"blur":Vn=Bn=Wn=null;break;case"mousedown":$n=!0;break;case"contextmenu":case"mouseup":case"dragend":return $n=!1,Hn(n,r);case"selectionchange":if(Dn)break;case"keydown":case"keyup":return Hn(n,r)}return null}};function Qn(e,t){return e=o({children:void 0},t),(t=function(e){var t="";return r.Children.forEach(e,function(e){null!=e&&(t+=e)}),t}(t.children))&&(e.children=t),e}function Yn(e,t,n,r){if(e=e.options,t){t={};for(var o=0;o<n.length;o++)t["$"+n[o]]=!0;for(n=0;n<e.length;n++)o=t.hasOwnProperty("$"+e[n].value),e[n].selected!==o&&(e[n].selected=o),o&&r&&(e[n].defaultSelected=!0)}else{for(n=""+gt(n),t=null,o=0;o<e.length;o++){if(e[o].value===n)return e[o].selected=!0,void(r&&(e[o].defaultSelected=!0));null!==t||e[o].disabled||(t=e[o])}null!==t&&(t.selected=!0)}}function Kn(e,t){return null!=t.dangerouslySetInnerHTML&&a("91"),o({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function Xn(e,t){var n=t.value;null==n&&(n=t.defaultValue,null!=(t=t.children)&&(null!=n&&a("92"),Array.isArray(t)&&(1>=t.length||a("93"),t=t[0]),n=t),null==n&&(n="")),e._wrapperState={initialValue:gt(n)}}function Gn(e,t){var n=gt(t.value),r=gt(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function Jn(e){var t=e.textContent;t===e._wrapperState.initialValue&&(e.value=t)}O.injectEventPluginOrder("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),x=A,k=z,T=L,O.injectEventPluginsByName({SimpleEventPlugin:wn,EnterLeaveEventPlugin:Gt,ChangeEventPlugin:Dt,SelectEventPlugin:qn,BeforeInputEventPlugin:Se});var Zn={html:"http://www.w3.org/1999/xhtml",mathml:"http://www.w3.org/1998/Math/MathML",svg:"http://www.w3.org/2000/svg"};function er(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function tr(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?er(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var nr,rr=void 0,or=(nr=function(e,t){if(e.namespaceURI!==Zn.svg||"innerHTML"in e)e.innerHTML=t;else{for((rr=rr||document.createElement("div")).innerHTML="<svg>"+t+"</svg>",t=rr.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,r){MSApp.execUnsafeLocalFunction(function(){return nr(e,t)})}:nr);function ir(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var ar={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},lr=["Webkit","ms","Moz","O"];function ur(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||ar.hasOwnProperty(e)&&ar[e]?(""+t).trim():t+"px"}function cr(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),o=ur(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,o):e[n]=o}}Object.keys(ar).forEach(function(e){lr.forEach(function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),ar[t]=ar[e]})});var sr=o({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function fr(e,t){t&&(sr[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML)&&a("137",e,""),null!=t.dangerouslySetInnerHTML&&(null!=t.children&&a("60"),"object"==typeof t.dangerouslySetInnerHTML&&"__html"in t.dangerouslySetInnerHTML||a("61")),null!=t.style&&"object"!=typeof t.style&&a("62",""))}function pr(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}function dr(e,t){var n=jn(e=9===e.nodeType||11===e.nodeType?e:e.ownerDocument);t=w[t];for(var r=0;r<t.length;r++){var o=t[r];if(!n.hasOwnProperty(o)||!n[o]){switch(o){case"scroll":_n("scroll",e);break;case"focus":case"blur":_n("focus",e),_n("blur",e),n.blur=!0,n.focus=!0;break;case"cancel":case"close":Fe(o)&&_n(o,e);break;case"invalid":case"submit":case"reset":break;default:-1===te.indexOf(o)&&Sn(o,e)}n[o]=!0}}}function hr(){}var mr=null,yr=null;function vr(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function gr(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var br="function"==typeof setTimeout?setTimeout:void 0,wr="function"==typeof clearTimeout?clearTimeout:void 0,xr=i.unstable_scheduleCallback,kr=i.unstable_cancelCallback;function Tr(e){for(e=e.nextSibling;e&&1!==e.nodeType&&3!==e.nodeType;)e=e.nextSibling;return e}function Er(e){for(e=e.firstChild;e&&1!==e.nodeType&&3!==e.nodeType;)e=e.nextSibling;return e}new Set;var Sr=[],_r=-1;function Cr(e){0>_r||(e.current=Sr[_r],Sr[_r]=null,_r--)}function Pr(e,t){Sr[++_r]=e.current,e.current=t}var Or={},Rr={current:Or},Nr={current:!1},jr=Or;function Ur(e,t){var n=e.type.contextTypes;if(!n)return Or;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var o,i={};for(o in n)i[o]=t[o];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=i),i}function Mr(e){return null!=(e=e.childContextTypes)}function Ir(e){Cr(Nr),Cr(Rr)}function zr(e){Cr(Nr),Cr(Rr)}function Lr(e,t,n){Rr.current!==Or&&a("168"),Pr(Rr,t),Pr(Nr,n)}function Ar(e,t,n){var r=e.stateNode;if(e=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var i in r=r.getChildContext())i in e||a("108",lt(t)||"Unknown",i);return o({},n,r)}function Dr(e){var t=e.stateNode;return t=t&&t.__reactInternalMemoizedMergedChildContext||Or,jr=Rr.current,Pr(Rr,t),Pr(Nr,Nr.current),!0}function Fr(e,t,n){var r=e.stateNode;r||a("169"),n?(t=Ar(e,t,jr),r.__reactInternalMemoizedMergedChildContext=t,Cr(Nr),Cr(Rr),Pr(Rr,t)):Cr(Nr),Pr(Nr,n)}var Wr=null,Br=null;function Vr(e){return function(t){try{return e(t)}catch(e){}}}function $r(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.contextDependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.effectTag=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childExpirationTime=this.expirationTime=0,this.alternate=null}function Hr(e,t,n,r){return new $r(e,t,n,r)}function qr(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Qr(e,t){var n=e.alternate;return null===n?((n=Hr(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.effectTag=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childExpirationTime=e.childExpirationTime,n.expirationTime=e.expirationTime,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,n.contextDependencies=e.contextDependencies,n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Yr(e,t,n,r,o,i){var l=2;if(r=e,"function"==typeof e)qr(e)&&(l=1);else if("string"==typeof e)l=5;else e:switch(e){case Ke:return Kr(n.children,o,i,t);case et:return Xr(n,3|o,i,t);case Xe:return Xr(n,2|o,i,t);case Ge:return(e=Hr(12,n,t,4|o)).elementType=Ge,e.type=Ge,e.expirationTime=i,e;case nt:return(e=Hr(13,n,t,o)).elementType=nt,e.type=nt,e.expirationTime=i,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case Je:l=10;break e;case Ze:l=9;break e;case tt:l=11;break e;case rt:l=14;break e;case ot:l=16,r=null;break e}a("130",null==e?e:typeof e,"")}return(t=Hr(l,n,t,o)).elementType=e,t.type=r,t.expirationTime=i,t}function Kr(e,t,n,r){return(e=Hr(7,e,r,t)).expirationTime=n,e}function Xr(e,t,n,r){return e=Hr(8,e,r,t),t=0==(1&t)?Xe:et,e.elementType=t,e.type=t,e.expirationTime=n,e}function Gr(e,t,n){return(e=Hr(6,e,null,t)).expirationTime=n,e}function Jr(e,t,n){return(t=Hr(4,null!==e.children?e.children:[],e.key,t)).expirationTime=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Zr(e,t){e.didError=!1;var n=e.earliestPendingTime;0===n?e.earliestPendingTime=e.latestPendingTime=t:n<t?e.earliestPendingTime=t:e.latestPendingTime>t&&(e.latestPendingTime=t),no(t,e)}function eo(e,t){e.didError=!1,e.latestPingedTime>=t&&(e.latestPingedTime=0);var n=e.earliestPendingTime,r=e.latestPendingTime;n===t?e.earliestPendingTime=r===t?e.latestPendingTime=0:r:r===t&&(e.latestPendingTime=n),n=e.earliestSuspendedTime,r=e.latestSuspendedTime,0===n?e.earliestSuspendedTime=e.latestSuspendedTime=t:n<t?e.earliestSuspendedTime=t:r>t&&(e.latestSuspendedTime=t),no(t,e)}function to(e,t){var n=e.earliestPendingTime;return n>t&&(t=n),(e=e.earliestSuspendedTime)>t&&(t=e),t}function no(e,t){var n=t.earliestSuspendedTime,r=t.latestSuspendedTime,o=t.earliestPendingTime,i=t.latestPingedTime;0===(o=0!==o?o:i)&&(0===e||r<e)&&(o=r),0!==(e=o)&&n>e&&(e=n),t.nextExpirationTimeToWorkOn=o,t.expirationTime=e}function ro(e,t){if(e&&e.defaultProps)for(var n in t=o({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}var oo=(new r.Component).refs;function io(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:o({},t,n),e.memoizedState=n,null!==(r=e.updateQueue)&&0===e.expirationTime&&(r.baseState=n)}var ao={isMounted:function(e){return!!(e=e._reactInternalFiber)&&2===tn(e)},enqueueSetState:function(e,t,n){e=e._reactInternalFiber;var r=kl(),o=Xi(r=Ka(r,e));o.payload=t,null!=n&&(o.callback=n),Va(),Ji(e,o),Ja(e,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternalFiber;var r=kl(),o=Xi(r=Ka(r,e));o.tag=$i,o.payload=t,null!=n&&(o.callback=n),Va(),Ji(e,o),Ja(e,r)},enqueueForceUpdate:function(e,t){e=e._reactInternalFiber;var n=kl(),r=Xi(n=Ka(n,e));r.tag=Hi,null!=t&&(r.callback=t),Va(),Ji(e,r),Ja(e,n)}};function lo(e,t,n,r,o,i,a){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,i,a):!t.prototype||!t.prototype.isPureReactComponent||(!en(n,r)||!en(o,i))}function uo(e,t,n){var r=!1,o=Or,i=t.contextType;return"object"==typeof i&&null!==i?i=Bi(i):(o=Mr(t)?jr:Rr.current,i=(r=null!=(r=t.contextTypes))?Ur(e,o):Or),t=new t(n,i),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=ao,e.stateNode=t,t._reactInternalFiber=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=o,e.__reactInternalMemoizedMaskedChildContext=i),t}function co(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&ao.enqueueReplaceState(t,t.state,null)}function so(e,t,n,r){var o=e.stateNode;o.props=n,o.state=e.memoizedState,o.refs=oo;var i=t.contextType;"object"==typeof i&&null!==i?o.context=Bi(i):(i=Mr(t)?jr:Rr.current,o.context=Ur(e,i)),null!==(i=e.updateQueue)&&(na(e,i,n,o,r),o.state=e.memoizedState),"function"==typeof(i=t.getDerivedStateFromProps)&&(io(e,t,i,n),o.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof o.getSnapshotBeforeUpdate||"function"!=typeof o.UNSAFE_componentWillMount&&"function"!=typeof o.componentWillMount||(t=o.state,"function"==typeof o.componentWillMount&&o.componentWillMount(),"function"==typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount(),t!==o.state&&ao.enqueueReplaceState(o,o.state,null),null!==(i=e.updateQueue)&&(na(e,i,n,o,r),o.state=e.memoizedState)),"function"==typeof o.componentDidMount&&(e.effectTag|=4)}var fo=Array.isArray;function po(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){n=n._owner;var r=void 0;n&&(1!==n.tag&&a("309"),r=n.stateNode),r||a("147",e);var o=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===o?t.ref:((t=function(e){var t=r.refs;t===oo&&(t=r.refs={}),null===e?delete t[o]:t[o]=e})._stringRef=o,t)}"string"!=typeof e&&a("284"),n._owner||a("290",e)}return e}function ho(e,t){"textarea"!==e.type&&a("31","[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t,"")}function mo(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.effectTag=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function o(e,t,n){return(e=Qr(e,t)).index=0,e.sibling=null,e}function i(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.effectTag=2,n):r:(t.effectTag=2,n):n}function l(t){return e&&null===t.alternate&&(t.effectTag=2),t}function u(e,t,n,r){return null===t||6!==t.tag?((t=Gr(n,e.mode,r)).return=e,t):((t=o(t,n)).return=e,t)}function c(e,t,n,r){return null!==t&&t.elementType===n.type?((r=o(t,n.props)).ref=po(e,t,n),r.return=e,r):((r=Yr(n.type,n.key,n.props,null,e.mode,r)).ref=po(e,t,n),r.return=e,r)}function s(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Jr(n,e.mode,r)).return=e,t):((t=o(t,n.children||[])).return=e,t)}function f(e,t,n,r,i){return null===t||7!==t.tag?((t=Kr(n,e.mode,r,i)).return=e,t):((t=o(t,n)).return=e,t)}function p(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=Gr(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case Qe:return(n=Yr(t.type,t.key,t.props,null,e.mode,n)).ref=po(e,null,t),n.return=e,n;case Ye:return(t=Jr(t,e.mode,n)).return=e,t}if(fo(t)||at(t))return(t=Kr(t,e.mode,n,null)).return=e,t;ho(e,t)}return null}function d(e,t,n,r){var o=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==o?null:u(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case Qe:return n.key===o?n.type===Ke?f(e,t,n.props.children,r,o):c(e,t,n,r):null;case Ye:return n.key===o?s(e,t,n,r):null}if(fo(n)||at(n))return null!==o?null:f(e,t,n,r,null);ho(e,n)}return null}function h(e,t,n,r,o){if("string"==typeof r||"number"==typeof r)return u(t,e=e.get(n)||null,""+r,o);if("object"==typeof r&&null!==r){switch(r.$$typeof){case Qe:return e=e.get(null===r.key?n:r.key)||null,r.type===Ke?f(t,e,r.props.children,o,r.key):c(t,e,r,o);case Ye:return s(t,e=e.get(null===r.key?n:r.key)||null,r,o)}if(fo(r)||at(r))return f(t,e=e.get(n)||null,r,o,null);ho(t,r)}return null}function m(o,a,l,u){for(var c=null,s=null,f=a,m=a=0,y=null;null!==f&&m<l.length;m++){f.index>m?(y=f,f=null):y=f.sibling;var v=d(o,f,l[m],u);if(null===v){null===f&&(f=y);break}e&&f&&null===v.alternate&&t(o,f),a=i(v,a,m),null===s?c=v:s.sibling=v,s=v,f=y}if(m===l.length)return n(o,f),c;if(null===f){for(;m<l.length;m++)(f=p(o,l[m],u))&&(a=i(f,a,m),null===s?c=f:s.sibling=f,s=f);return c}for(f=r(o,f);m<l.length;m++)(y=h(f,o,m,l[m],u))&&(e&&null!==y.alternate&&f.delete(null===y.key?m:y.key),a=i(y,a,m),null===s?c=y:s.sibling=y,s=y);return e&&f.forEach(function(e){return t(o,e)}),c}function y(o,l,u,c){var s=at(u);"function"!=typeof s&&a("150"),null==(u=s.call(u))&&a("151");for(var f=s=null,m=l,y=l=0,v=null,g=u.next();null!==m&&!g.done;y++,g=u.next()){m.index>y?(v=m,m=null):v=m.sibling;var b=d(o,m,g.value,c);if(null===b){m||(m=v);break}e&&m&&null===b.alternate&&t(o,m),l=i(b,l,y),null===f?s=b:f.sibling=b,f=b,m=v}if(g.done)return n(o,m),s;if(null===m){for(;!g.done;y++,g=u.next())null!==(g=p(o,g.value,c))&&(l=i(g,l,y),null===f?s=g:f.sibling=g,f=g);return s}for(m=r(o,m);!g.done;y++,g=u.next())null!==(g=h(m,o,y,g.value,c))&&(e&&null!==g.alternate&&m.delete(null===g.key?y:g.key),l=i(g,l,y),null===f?s=g:f.sibling=g,f=g);return e&&m.forEach(function(e){return t(o,e)}),s}return function(e,r,i,u){var c="object"==typeof i&&null!==i&&i.type===Ke&&null===i.key;c&&(i=i.props.children);var s="object"==typeof i&&null!==i;if(s)switch(i.$$typeof){case Qe:e:{for(s=i.key,c=r;null!==c;){if(c.key===s){if(7===c.tag?i.type===Ke:c.elementType===i.type){n(e,c.sibling),(r=o(c,i.type===Ke?i.props.children:i.props)).ref=po(e,c,i),r.return=e,e=r;break e}n(e,c);break}t(e,c),c=c.sibling}i.type===Ke?((r=Kr(i.props.children,e.mode,u,i.key)).return=e,e=r):((u=Yr(i.type,i.key,i.props,null,e.mode,u)).ref=po(e,r,i),u.return=e,e=u)}return l(e);case Ye:e:{for(c=i.key;null!==r;){if(r.key===c){if(4===r.tag&&r.stateNode.containerInfo===i.containerInfo&&r.stateNode.implementation===i.implementation){n(e,r.sibling),(r=o(r,i.children||[])).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=Jr(i,e.mode,u)).return=e,e=r}return l(e)}if("string"==typeof i||"number"==typeof i)return i=""+i,null!==r&&6===r.tag?(n(e,r.sibling),(r=o(r,i)).return=e,e=r):(n(e,r),(r=Gr(i,e.mode,u)).return=e,e=r),l(e);if(fo(i))return m(e,r,i,u);if(at(i))return y(e,r,i,u);if(s&&ho(e,i),void 0===i&&!c)switch(e.tag){case 1:case 0:a("152",(u=e.type).displayName||u.name||"Component")}return n(e,r)}}var yo=mo(!0),vo=mo(!1),go={},bo={current:go},wo={current:go},xo={current:go};function ko(e){return e===go&&a("174"),e}function To(e,t){Pr(xo,t),Pr(wo,e),Pr(bo,go);var n=t.nodeType;switch(n){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:tr(null,"");break;default:t=tr(t=(n=8===n?t.parentNode:t).namespaceURI||null,n=n.tagName)}Cr(bo),Pr(bo,t)}function Eo(e){Cr(bo),Cr(wo),Cr(xo)}function So(e){ko(xo.current);var t=ko(bo.current),n=tr(t,e.type);t!==n&&(Pr(wo,e),Pr(bo,n))}function _o(e){wo.current===e&&(Cr(bo),Cr(wo))}var Co=0,Po=2,Oo=4,Ro=8,No=16,jo=32,Uo=64,Mo=128,Io=$e.ReactCurrentDispatcher,zo=0,Lo=null,Ao=null,Do=null,Fo=null,Wo=null,Bo=null,Vo=0,$o=null,Ho=0,qo=!1,Qo=null,Yo=0;function Ko(){a("321")}function Xo(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!Jt(e[n],t[n]))return!1;return!0}function Go(e,t,n,r,o,i){if(zo=i,Lo=t,Do=null!==e?e.memoizedState:null,Io.current=null===Do?si:fi,t=n(r,o),qo){do{qo=!1,Yo+=1,Do=null!==e?e.memoizedState:null,Bo=Fo,$o=Wo=Ao=null,Io.current=fi,t=n(r,o)}while(qo);Qo=null,Yo=0}return Io.current=ci,(e=Lo).memoizedState=Fo,e.expirationTime=Vo,e.updateQueue=$o,e.effectTag|=Ho,e=null!==Ao&&null!==Ao.next,zo=0,Bo=Wo=Fo=Do=Ao=Lo=null,Vo=0,$o=null,Ho=0,e&&a("300"),t}function Jo(){Io.current=ci,zo=0,Bo=Wo=Fo=Do=Ao=Lo=null,Vo=0,$o=null,Ho=0,qo=!1,Qo=null,Yo=0}function Zo(){var e={memoizedState:null,baseState:null,queue:null,baseUpdate:null,next:null};return null===Wo?Fo=Wo=e:Wo=Wo.next=e,Wo}function ei(){if(null!==Bo)Bo=(Wo=Bo).next,Do=null!==(Ao=Do)?Ao.next:null;else{null===Do&&a("310");var e={memoizedState:(Ao=Do).memoizedState,baseState:Ao.baseState,queue:Ao.queue,baseUpdate:Ao.baseUpdate,next:null};Wo=null===Wo?Fo=e:Wo.next=e,Do=Ao.next}return Wo}function ti(e,t){return"function"==typeof t?t(e):t}function ni(e){var t=ei(),n=t.queue;if(null===n&&a("311"),n.lastRenderedReducer=e,0<Yo){var r=n.dispatch;if(null!==Qo){var o=Qo.get(n);if(void 0!==o){Qo.delete(n);var i=t.memoizedState;do{i=e(i,o.action),o=o.next}while(null!==o);return Jt(i,t.memoizedState)||(ki=!0),t.memoizedState=i,t.baseUpdate===n.last&&(t.baseState=i),n.lastRenderedState=i,[i,r]}}return[t.memoizedState,r]}r=n.last;var l=t.baseUpdate;if(i=t.baseState,null!==l?(null!==r&&(r.next=null),r=l.next):r=null!==r?r.next:null,null!==r){var u=o=null,c=r,s=!1;do{var f=c.expirationTime;f<zo?(s||(s=!0,u=l,o=i),f>Vo&&(Vo=f)):i=c.eagerReducer===e?c.eagerState:e(i,c.action),l=c,c=c.next}while(null!==c&&c!==r);s||(u=l,o=i),Jt(i,t.memoizedState)||(ki=!0),t.memoizedState=i,t.baseUpdate=u,t.baseState=o,n.lastRenderedState=i}return[t.memoizedState,n.dispatch]}function ri(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===$o?($o={lastEffect:null}).lastEffect=e.next=e:null===(t=$o.lastEffect)?$o.lastEffect=e.next=e:(n=t.next,t.next=e,e.next=n,$o.lastEffect=e),e}function oi(e,t,n,r){var o=Zo();Ho|=e,o.memoizedState=ri(t,n,void 0,void 0===r?null:r)}function ii(e,t,n,r){var o=ei();r=void 0===r?null:r;var i=void 0;if(null!==Ao){var a=Ao.memoizedState;if(i=a.destroy,null!==r&&Xo(r,a.deps))return void ri(Co,n,i,r)}Ho|=e,o.memoizedState=ri(t,n,i,r)}function ai(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function li(){}function ui(e,t,n){25>Yo||a("301");var r=e.alternate;if(e===Lo||null!==r&&r===Lo)if(qo=!0,e={expirationTime:zo,action:n,eagerReducer:null,eagerState:null,next:null},null===Qo&&(Qo=new Map),void 0===(n=Qo.get(t)))Qo.set(t,e);else{for(t=n;null!==t.next;)t=t.next;t.next=e}else{Va();var o=kl(),i={expirationTime:o=Ka(o,e),action:n,eagerReducer:null,eagerState:null,next:null},l=t.last;if(null===l)i.next=i;else{var u=l.next;null!==u&&(i.next=u),l.next=i}if(t.last=i,0===e.expirationTime&&(null===r||0===r.expirationTime)&&null!==(r=t.lastRenderedReducer))try{var c=t.lastRenderedState,s=r(c,n);if(i.eagerReducer=r,i.eagerState=s,Jt(s,c))return}catch(e){}Ja(e,o)}}var ci={readContext:Bi,useCallback:Ko,useContext:Ko,useEffect:Ko,useImperativeHandle:Ko,useLayoutEffect:Ko,useMemo:Ko,useReducer:Ko,useRef:Ko,useState:Ko,useDebugValue:Ko},si={readContext:Bi,useCallback:function(e,t){return Zo().memoizedState=[e,void 0===t?null:t],e},useContext:Bi,useEffect:function(e,t){return oi(516,Mo|Uo,e,t)},useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,oi(4,Oo|jo,ai.bind(null,t,e),n)},useLayoutEffect:function(e,t){return oi(4,Oo|jo,e,t)},useMemo:function(e,t){var n=Zo();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=Zo();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e=(e=r.queue={last:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:t}).dispatch=ui.bind(null,Lo,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},Zo().memoizedState=e},useState:function(e){var t=Zo();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=(e=t.queue={last:null,dispatch:null,lastRenderedReducer:ti,lastRenderedState:e}).dispatch=ui.bind(null,Lo,e),[t.memoizedState,e]},useDebugValue:li},fi={readContext:Bi,useCallback:function(e,t){var n=ei();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&Xo(t,r[1])?r[0]:(n.memoizedState=[e,t],e)},useContext:Bi,useEffect:function(e,t){return ii(516,Mo|Uo,e,t)},useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,ii(4,Oo|jo,ai.bind(null,t,e),n)},useLayoutEffect:function(e,t){return ii(4,Oo|jo,e,t)},useMemo:function(e,t){var n=ei();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&Xo(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)},useReducer:ni,useRef:function(){return ei().memoizedState},useState:function(e){return ni(ti)},useDebugValue:li},pi=null,di=null,hi=!1;function mi(e,t){var n=Hr(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=t,n.return=e,n.effectTag=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function yi(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);case 13:default:return!1}}function vi(e){if(hi){var t=di;if(t){var n=t;if(!yi(e,t)){if(!(t=Tr(n))||!yi(e,t))return e.effectTag|=2,hi=!1,void(pi=e);mi(pi,n)}pi=e,di=Er(t)}else e.effectTag|=2,hi=!1,pi=e}}function gi(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&18!==e.tag;)e=e.return;pi=e}function bi(e){if(e!==pi)return!1;if(!hi)return gi(e),hi=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!gr(t,e.memoizedProps))for(t=di;t;)mi(e,t),t=Tr(t);return gi(e),di=pi?Tr(e.stateNode):null,!0}function wi(){di=pi=null,hi=!1}var xi=$e.ReactCurrentOwner,ki=!1;function Ti(e,t,n,r){t.child=null===e?vo(t,null,n,r):yo(t,e.child,n,r)}function Ei(e,t,n,r,o){n=n.render;var i=t.ref;return Wi(t,o),r=Go(e,t,n,r,i,o),null===e||ki?(t.effectTag|=1,Ti(e,t,r,o),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=o&&(e.expirationTime=0),Ui(e,t,o))}function Si(e,t,n,r,o,i){if(null===e){var a=n.type;return"function"!=typeof a||qr(a)||void 0!==a.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Yr(n.type,null,r,null,t.mode,i)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=a,_i(e,t,a,r,o,i))}return a=e.child,o<i&&(o=a.memoizedProps,(n=null!==(n=n.compare)?n:en)(o,r)&&e.ref===t.ref)?Ui(e,t,i):(t.effectTag|=1,(e=Qr(a,r)).ref=t.ref,e.return=t,t.child=e)}function _i(e,t,n,r,o,i){return null!==e&&en(e.memoizedProps,r)&&e.ref===t.ref&&(ki=!1,o<i)?Ui(e,t,i):Pi(e,t,n,r,i)}function Ci(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.effectTag|=128)}function Pi(e,t,n,r,o){var i=Mr(n)?jr:Rr.current;return i=Ur(t,i),Wi(t,o),n=Go(e,t,n,r,i,o),null===e||ki?(t.effectTag|=1,Ti(e,t,n,o),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=o&&(e.expirationTime=0),Ui(e,t,o))}function Oi(e,t,n,r,o){if(Mr(n)){var i=!0;Dr(t)}else i=!1;if(Wi(t,o),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),uo(t,n,r),so(t,n,r,o),r=!0;else if(null===e){var a=t.stateNode,l=t.memoizedProps;a.props=l;var u=a.context,c=n.contextType;"object"==typeof c&&null!==c?c=Bi(c):c=Ur(t,c=Mr(n)?jr:Rr.current);var s=n.getDerivedStateFromProps,f="function"==typeof s||"function"==typeof a.getSnapshotBeforeUpdate;f||"function"!=typeof a.UNSAFE_componentWillReceiveProps&&"function"!=typeof a.componentWillReceiveProps||(l!==r||u!==c)&&co(t,a,r,c),Qi=!1;var p=t.memoizedState;u=a.state=p;var d=t.updateQueue;null!==d&&(na(t,d,r,a,o),u=t.memoizedState),l!==r||p!==u||Nr.current||Qi?("function"==typeof s&&(io(t,n,s,r),u=t.memoizedState),(l=Qi||lo(t,n,l,r,p,u,c))?(f||"function"!=typeof a.UNSAFE_componentWillMount&&"function"!=typeof a.componentWillMount||("function"==typeof a.componentWillMount&&a.componentWillMount(),"function"==typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount()),"function"==typeof a.componentDidMount&&(t.effectTag|=4)):("function"==typeof a.componentDidMount&&(t.effectTag|=4),t.memoizedProps=r,t.memoizedState=u),a.props=r,a.state=u,a.context=c,r=l):("function"==typeof a.componentDidMount&&(t.effectTag|=4),r=!1)}else a=t.stateNode,l=t.memoizedProps,a.props=t.type===t.elementType?l:ro(t.type,l),u=a.context,"object"==typeof(c=n.contextType)&&null!==c?c=Bi(c):c=Ur(t,c=Mr(n)?jr:Rr.current),(f="function"==typeof(s=n.getDerivedStateFromProps)||"function"==typeof a.getSnapshotBeforeUpdate)||"function"!=typeof a.UNSAFE_componentWillReceiveProps&&"function"!=typeof a.componentWillReceiveProps||(l!==r||u!==c)&&co(t,a,r,c),Qi=!1,u=t.memoizedState,p=a.state=u,null!==(d=t.updateQueue)&&(na(t,d,r,a,o),p=t.memoizedState),l!==r||u!==p||Nr.current||Qi?("function"==typeof s&&(io(t,n,s,r),p=t.memoizedState),(s=Qi||lo(t,n,l,r,u,p,c))?(f||"function"!=typeof a.UNSAFE_componentWillUpdate&&"function"!=typeof a.componentWillUpdate||("function"==typeof a.componentWillUpdate&&a.componentWillUpdate(r,p,c),"function"==typeof a.UNSAFE_componentWillUpdate&&a.UNSAFE_componentWillUpdate(r,p,c)),"function"==typeof a.componentDidUpdate&&(t.effectTag|=4),"function"==typeof a.getSnapshotBeforeUpdate&&(t.effectTag|=256)):("function"!=typeof a.componentDidUpdate||l===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=4),"function"!=typeof a.getSnapshotBeforeUpdate||l===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=256),t.memoizedProps=r,t.memoizedState=p),a.props=r,a.state=p,a.context=c,r=s):("function"!=typeof a.componentDidUpdate||l===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=4),"function"!=typeof a.getSnapshotBeforeUpdate||l===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=256),r=!1);return Ri(e,t,n,r,i,o)}function Ri(e,t,n,r,o,i){Ci(e,t);var a=0!=(64&t.effectTag);if(!r&&!a)return o&&Fr(t,n,!1),Ui(e,t,i);r=t.stateNode,xi.current=t;var l=a&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.effectTag|=1,null!==e&&a?(t.child=yo(t,e.child,null,i),t.child=yo(t,null,l,i)):Ti(e,t,l,i),t.memoizedState=r.state,o&&Fr(t,n,!0),t.child}function Ni(e){var t=e.stateNode;t.pendingContext?Lr(0,t.pendingContext,t.pendingContext!==t.context):t.context&&Lr(0,t.context,!1),To(e,t.containerInfo)}function ji(e,t,n){var r=t.mode,o=t.pendingProps,i=t.memoizedState;if(0==(64&t.effectTag)){i=null;var a=!1}else i={timedOutAt:null!==i?i.timedOutAt:0},a=!0,t.effectTag&=-65;if(null===e)if(a){var l=o.fallback;e=Kr(null,r,0,null),0==(1&t.mode)&&(e.child=null!==t.memoizedState?t.child.child:t.child),r=Kr(l,r,n,null),e.sibling=r,(n=e).return=r.return=t}else n=r=vo(t,null,o.children,n);else null!==e.memoizedState?(l=(r=e.child).sibling,a?(n=o.fallback,o=Qr(r,r.pendingProps),0==(1&t.mode)&&((a=null!==t.memoizedState?t.child.child:t.child)!==r.child&&(o.child=a)),r=o.sibling=Qr(l,n,l.expirationTime),n=o,o.childExpirationTime=0,n.return=r.return=t):n=r=yo(t,r.child,o.children,n)):(l=e.child,a?(a=o.fallback,(o=Kr(null,r,0,null)).child=l,0==(1&t.mode)&&(o.child=null!==t.memoizedState?t.child.child:t.child),(r=o.sibling=Kr(a,r,n,null)).effectTag|=2,n=o,o.childExpirationTime=0,n.return=r.return=t):r=n=yo(t,l,o.children,n)),t.stateNode=e.stateNode;return t.memoizedState=i,t.child=n,r}function Ui(e,t,n){if(null!==e&&(t.contextDependencies=e.contextDependencies),t.childExpirationTime<n)return null;if(null!==e&&t.child!==e.child&&a("153"),null!==t.child){for(n=Qr(e=t.child,e.pendingProps,e.expirationTime),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Qr(e,e.pendingProps,e.expirationTime)).return=t;n.sibling=null}return t.child}function Mi(e,t,n){var r=t.expirationTime;if(null!==e){if(e.memoizedProps!==t.pendingProps||Nr.current)ki=!0;else if(r<n){switch(ki=!1,t.tag){case 3:Ni(t),wi();break;case 5:So(t);break;case 1:Mr(t.type)&&Dr(t);break;case 4:To(t,t.stateNode.containerInfo);break;case 10:Di(t,t.memoizedProps.value);break;case 13:if(null!==t.memoizedState)return 0!==(r=t.child.childExpirationTime)&&r>=n?ji(e,t,n):null!==(t=Ui(e,t,n))?t.sibling:null}return Ui(e,t,n)}}else ki=!1;switch(t.expirationTime=0,t.tag){case 2:r=t.elementType,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps;var o=Ur(t,Rr.current);if(Wi(t,n),o=Go(null,t,r,e,o,n),t.effectTag|=1,"object"==typeof o&&null!==o&&"function"==typeof o.render&&void 0===o.$$typeof){if(t.tag=1,Jo(),Mr(r)){var i=!0;Dr(t)}else i=!1;t.memoizedState=null!==o.state&&void 0!==o.state?o.state:null;var l=r.getDerivedStateFromProps;"function"==typeof l&&io(t,r,l,e),o.updater=ao,t.stateNode=o,o._reactInternalFiber=t,so(t,r,e,n),t=Ri(null,t,r,!0,i,n)}else t.tag=0,Ti(null,t,o,n),t=t.child;return t;case 16:switch(o=t.elementType,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),i=t.pendingProps,e=function(e){var t=e._result;switch(e._status){case 1:return t;case 2:case 0:throw t;default:switch(e._status=0,(t=(t=e._ctor)()).then(function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)},function(t){0===e._status&&(e._status=2,e._result=t)}),e._status){case 1:return e._result;case 2:throw e._result}throw e._result=t,t}}(o),t.type=e,o=t.tag=function(e){if("function"==typeof e)return qr(e)?1:0;if(null!=e){if((e=e.$$typeof)===tt)return 11;if(e===rt)return 14}return 2}(e),i=ro(e,i),l=void 0,o){case 0:l=Pi(null,t,e,i,n);break;case 1:l=Oi(null,t,e,i,n);break;case 11:l=Ei(null,t,e,i,n);break;case 14:l=Si(null,t,e,ro(e.type,i),r,n);break;default:a("306",e,"")}return l;case 0:return r=t.type,o=t.pendingProps,Pi(e,t,r,o=t.elementType===r?o:ro(r,o),n);case 1:return r=t.type,o=t.pendingProps,Oi(e,t,r,o=t.elementType===r?o:ro(r,o),n);case 3:return Ni(t),null===(r=t.updateQueue)&&a("282"),o=null!==(o=t.memoizedState)?o.element:null,na(t,r,t.pendingProps,null,n),(r=t.memoizedState.element)===o?(wi(),t=Ui(e,t,n)):(o=t.stateNode,(o=(null===e||null===e.child)&&o.hydrate)&&(di=Er(t.stateNode.containerInfo),pi=t,o=hi=!0),o?(t.effectTag|=2,t.child=vo(t,null,r,n)):(Ti(e,t,r,n),wi()),t=t.child),t;case 5:return So(t),null===e&&vi(t),r=t.type,o=t.pendingProps,i=null!==e?e.memoizedProps:null,l=o.children,gr(r,o)?l=null:null!==i&&gr(r,i)&&(t.effectTag|=16),Ci(e,t),1!==n&&1&t.mode&&o.hidden?(t.expirationTime=t.childExpirationTime=1,t=null):(Ti(e,t,l,n),t=t.child),t;case 6:return null===e&&vi(t),null;case 13:return ji(e,t,n);case 4:return To(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=yo(t,null,r,n):Ti(e,t,r,n),t.child;case 11:return r=t.type,o=t.pendingProps,Ei(e,t,r,o=t.elementType===r?o:ro(r,o),n);case 7:return Ti(e,t,t.pendingProps,n),t.child;case 8:case 12:return Ti(e,t,t.pendingProps.children,n),t.child;case 10:e:{if(r=t.type._context,o=t.pendingProps,l=t.memoizedProps,Di(t,i=o.value),null!==l){var u=l.value;if(0===(i=Jt(u,i)?0:0|("function"==typeof r._calculateChangedBits?r._calculateChangedBits(u,i):1073741823))){if(l.children===o.children&&!Nr.current){t=Ui(e,t,n);break e}}else for(null!==(u=t.child)&&(u.return=t);null!==u;){var c=u.contextDependencies;if(null!==c){l=u.child;for(var s=c.first;null!==s;){if(s.context===r&&0!=(s.observedBits&i)){1===u.tag&&((s=Xi(n)).tag=Hi,Ji(u,s)),u.expirationTime<n&&(u.expirationTime=n),null!==(s=u.alternate)&&s.expirationTime<n&&(s.expirationTime=n),s=n;for(var f=u.return;null!==f;){var p=f.alternate;if(f.childExpirationTime<s)f.childExpirationTime=s,null!==p&&p.childExpirationTime<s&&(p.childExpirationTime=s);else{if(!(null!==p&&p.childExpirationTime<s))break;p.childExpirationTime=s}f=f.return}c.expirationTime<n&&(c.expirationTime=n);break}s=s.next}}else l=10===u.tag&&u.type===t.type?null:u.child;if(null!==l)l.return=u;else for(l=u;null!==l;){if(l===t){l=null;break}if(null!==(u=l.sibling)){u.return=l.return,l=u;break}l=l.return}u=l}}Ti(e,t,o.children,n),t=t.child}return t;case 9:return o=t.type,r=(i=t.pendingProps).children,Wi(t,n),r=r(o=Bi(o,i.unstable_observedBits)),t.effectTag|=1,Ti(e,t,r,n),t.child;case 14:return i=ro(o=t.type,t.pendingProps),Si(e,t,o,i=ro(o.type,i),r,n);case 15:return _i(e,t,t.type,t.pendingProps,r,n);case 17:return r=t.type,o=t.pendingProps,o=t.elementType===r?o:ro(r,o),null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),t.tag=1,Mr(r)?(e=!0,Dr(t)):e=!1,Wi(t,n),uo(t,r,o),so(t,r,o,n),Ri(null,t,r,!0,e,n)}a("156")}var Ii={current:null},zi=null,Li=null,Ai=null;function Di(e,t){var n=e.type._context;Pr(Ii,n._currentValue),n._currentValue=t}function Fi(e){var t=Ii.current;Cr(Ii),e.type._context._currentValue=t}function Wi(e,t){zi=e,Ai=Li=null;var n=e.contextDependencies;null!==n&&n.expirationTime>=t&&(ki=!0),e.contextDependencies=null}function Bi(e,t){return Ai!==e&&!1!==t&&0!==t&&("number"==typeof t&&1073741823!==t||(Ai=e,t=1073741823),t={context:e,observedBits:t,next:null},null===Li?(null===zi&&a("308"),Li=t,zi.contextDependencies={first:t,expirationTime:0}):Li=Li.next=t),e._currentValue}var Vi=0,$i=1,Hi=2,qi=3,Qi=!1;function Yi(e){return{baseState:e,firstUpdate:null,lastUpdate:null,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function Ki(e){return{baseState:e.baseState,firstUpdate:e.firstUpdate,lastUpdate:e.lastUpdate,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function Xi(e){return{expirationTime:e,tag:Vi,payload:null,callback:null,next:null,nextEffect:null}}function Gi(e,t){null===e.lastUpdate?e.firstUpdate=e.lastUpdate=t:(e.lastUpdate.next=t,e.lastUpdate=t)}function Ji(e,t){var n=e.alternate;if(null===n){var r=e.updateQueue,o=null;null===r&&(r=e.updateQueue=Yi(e.memoizedState))}else r=e.updateQueue,o=n.updateQueue,null===r?null===o?(r=e.updateQueue=Yi(e.memoizedState),o=n.updateQueue=Yi(n.memoizedState)):r=e.updateQueue=Ki(o):null===o&&(o=n.updateQueue=Ki(r));null===o||r===o?Gi(r,t):null===r.lastUpdate||null===o.lastUpdate?(Gi(r,t),Gi(o,t)):(Gi(r,t),o.lastUpdate=t)}function Zi(e,t){var n=e.updateQueue;null===(n=null===n?e.updateQueue=Yi(e.memoizedState):ea(e,n)).lastCapturedUpdate?n.firstCapturedUpdate=n.lastCapturedUpdate=t:(n.lastCapturedUpdate.next=t,n.lastCapturedUpdate=t)}function ea(e,t){var n=e.alternate;return null!==n&&t===n.updateQueue&&(t=e.updateQueue=Ki(t)),t}function ta(e,t,n,r,i,a){switch(n.tag){case $i:return"function"==typeof(e=n.payload)?e.call(a,r,i):e;case qi:e.effectTag=-2049&e.effectTag|64;case Vi:if(null==(i="function"==typeof(e=n.payload)?e.call(a,r,i):e))break;return o({},r,i);case Hi:Qi=!0}return r}function na(e,t,n,r,o){Qi=!1;for(var i=(t=ea(e,t)).baseState,a=null,l=0,u=t.firstUpdate,c=i;null!==u;){var s=u.expirationTime;s<o?(null===a&&(a=u,i=c),l<s&&(l=s)):(c=ta(e,0,u,c,n,r),null!==u.callback&&(e.effectTag|=32,u.nextEffect=null,null===t.lastEffect?t.firstEffect=t.lastEffect=u:(t.lastEffect.nextEffect=u,t.lastEffect=u))),u=u.next}for(s=null,u=t.firstCapturedUpdate;null!==u;){var f=u.expirationTime;f<o?(null===s&&(s=u,null===a&&(i=c)),l<f&&(l=f)):(c=ta(e,0,u,c,n,r),null!==u.callback&&(e.effectTag|=32,u.nextEffect=null,null===t.lastCapturedEffect?t.firstCapturedEffect=t.lastCapturedEffect=u:(t.lastCapturedEffect.nextEffect=u,t.lastCapturedEffect=u))),u=u.next}null===a&&(t.lastUpdate=null),null===s?t.lastCapturedUpdate=null:e.effectTag|=32,null===a&&null===s&&(i=c),t.baseState=i,t.firstUpdate=a,t.firstCapturedUpdate=s,e.expirationTime=l,e.memoizedState=c}function ra(e,t,n){null!==t.firstCapturedUpdate&&(null!==t.lastUpdate&&(t.lastUpdate.next=t.firstCapturedUpdate,t.lastUpdate=t.lastCapturedUpdate),t.firstCapturedUpdate=t.lastCapturedUpdate=null),oa(t.firstEffect,n),t.firstEffect=t.lastEffect=null,oa(t.firstCapturedEffect,n),t.firstCapturedEffect=t.lastCapturedEffect=null}function oa(e,t){for(;null!==e;){var n=e.callback;if(null!==n){e.callback=null;var r=t;"function"!=typeof n&&a("191",n),n.call(r)}e=e.nextEffect}}function ia(e,t){return{value:e,source:t,stack:ut(t)}}function aa(e){e.effectTag|=4}var la=void 0,ua=void 0,ca=void 0,sa=void 0;la=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},ua=function(){},ca=function(e,t,n,r,i){var a=e.memoizedProps;if(a!==r){var l=t.stateNode;switch(ko(bo.current),e=null,n){case"input":a=bt(l,a),r=bt(l,r),e=[];break;case"option":a=Qn(l,a),r=Qn(l,r),e=[];break;case"select":a=o({},a,{value:void 0}),r=o({},r,{value:void 0}),e=[];break;case"textarea":a=Kn(l,a),r=Kn(l,r),e=[];break;default:"function"!=typeof a.onClick&&"function"==typeof r.onClick&&(l.onclick=hr)}fr(n,r),l=n=void 0;var u=null;for(n in a)if(!r.hasOwnProperty(n)&&a.hasOwnProperty(n)&&null!=a[n])if("style"===n){var c=a[n];for(l in c)c.hasOwnProperty(l)&&(u||(u={}),u[l]="")}else"dangerouslySetInnerHTML"!==n&&"children"!==n&&"suppressContentEditableWarning"!==n&&"suppressHydrationWarning"!==n&&"autoFocus"!==n&&(b.hasOwnProperty(n)?e||(e=[]):(e=e||[]).push(n,null));for(n in r){var s=r[n];if(c=null!=a?a[n]:void 0,r.hasOwnProperty(n)&&s!==c&&(null!=s||null!=c))if("style"===n)if(c){for(l in c)!c.hasOwnProperty(l)||s&&s.hasOwnProperty(l)||(u||(u={}),u[l]="");for(l in s)s.hasOwnProperty(l)&&c[l]!==s[l]&&(u||(u={}),u[l]=s[l])}else u||(e||(e=[]),e.push(n,u)),u=s;else"dangerouslySetInnerHTML"===n?(s=s?s.__html:void 0,c=c?c.__html:void 0,null!=s&&c!==s&&(e=e||[]).push(n,""+s)):"children"===n?c===s||"string"!=typeof s&&"number"!=typeof s||(e=e||[]).push(n,""+s):"suppressContentEditableWarning"!==n&&"suppressHydrationWarning"!==n&&(b.hasOwnProperty(n)?(null!=s&&dr(i,n),e||c===s||(e=[])):(e=e||[]).push(n,s))}u&&(e=e||[]).push("style",u),i=e,(t.updateQueue=i)&&aa(t)}},sa=function(e,t,n,r){n!==r&&aa(t)};var fa="function"==typeof WeakSet?WeakSet:Set;function pa(e,t){var n=t.source,r=t.stack;null===r&&null!==n&&(r=ut(n)),null!==n&&lt(n.type),t=t.value,null!==e&&1===e.tag&&lt(e.type);try{console.error(t)}catch(e){setTimeout(function(){throw e})}}function da(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){Ya(e,t)}else t.current=null}function ha(e,t,n){if(null!==(n=null!==(n=n.updateQueue)?n.lastEffect:null)){var r=n=n.next;do{if((r.tag&e)!==Co){var o=r.destroy;r.destroy=void 0,void 0!==o&&o()}(r.tag&t)!==Co&&(o=r.create,r.destroy=o()),r=r.next}while(r!==n)}}function ma(e){switch("function"==typeof Br&&Br(e),e.tag){case 0:case 11:case 14:case 15:var t=e.updateQueue;if(null!==t&&null!==(t=t.lastEffect)){var n=t=t.next;do{var r=n.destroy;if(void 0!==r){var o=e;try{r()}catch(e){Ya(o,e)}}n=n.next}while(n!==t)}break;case 1:if(da(e),"function"==typeof(t=e.stateNode).componentWillUnmount)try{t.props=e.memoizedProps,t.state=e.memoizedState,t.componentWillUnmount()}catch(t){Ya(e,t)}break;case 5:da(e);break;case 4:ga(e)}}function ya(e){return 5===e.tag||3===e.tag||4===e.tag}function va(e){e:{for(var t=e.return;null!==t;){if(ya(t)){var n=t;break e}t=t.return}a("160"),n=void 0}var r=t=void 0;switch(n.tag){case 5:t=n.stateNode,r=!1;break;case 3:case 4:t=n.stateNode.containerInfo,r=!0;break;default:a("161")}16&n.effectTag&&(ir(t,""),n.effectTag&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||ya(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(2&n.effectTag)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.effectTag)){n=n.stateNode;break e}}for(var o=e;;){if(5===o.tag||6===o.tag)if(n)if(r){var i=t,l=o.stateNode,u=n;8===i.nodeType?i.parentNode.insertBefore(l,u):i.insertBefore(l,u)}else t.insertBefore(o.stateNode,n);else r?(l=t,u=o.stateNode,8===l.nodeType?(i=l.parentNode).insertBefore(u,l):(i=l).appendChild(u),null!=(l=l._reactRootContainer)||null!==i.onclick||(i.onclick=hr)):t.appendChild(o.stateNode);else if(4!==o.tag&&null!==o.child){o.child.return=o,o=o.child;continue}if(o===e)break;for(;null===o.sibling;){if(null===o.return||o.return===e)return;o=o.return}o.sibling.return=o.return,o=o.sibling}}function ga(e){for(var t=e,n=!1,r=void 0,o=void 0;;){if(!n){n=t.return;e:for(;;){switch(null===n&&a("160"),n.tag){case 5:r=n.stateNode,o=!1;break e;case 3:case 4:r=n.stateNode.containerInfo,o=!0;break e}n=n.return}n=!0}if(5===t.tag||6===t.tag){e:for(var i=t,l=i;;)if(ma(l),null!==l.child&&4!==l.tag)l.child.return=l,l=l.child;else{if(l===i)break;for(;null===l.sibling;){if(null===l.return||l.return===i)break e;l=l.return}l.sibling.return=l.return,l=l.sibling}o?(i=r,l=t.stateNode,8===i.nodeType?i.parentNode.removeChild(l):i.removeChild(l)):r.removeChild(t.stateNode)}else if(4===t.tag){if(null!==t.child){r=t.stateNode.containerInfo,o=!0,t.child.return=t,t=t.child;continue}}else if(ma(t),null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return;4===(t=t.return).tag&&(n=!1)}t.sibling.return=t.return,t=t.sibling}}function ba(e,t){switch(t.tag){case 0:case 11:case 14:case 15:ha(Oo,Ro,t);break;case 1:break;case 5:var n=t.stateNode;if(null!=n){var r=t.memoizedProps;e=null!==e?e.memoizedProps:r;var o=t.type,i=t.updateQueue;t.updateQueue=null,null!==i&&function(e,t,n,r,o){e[M]=o,"input"===n&&"radio"===o.type&&null!=o.name&&xt(e,o),pr(n,r),r=pr(n,o);for(var i=0;i<t.length;i+=2){var a=t[i],l=t[i+1];"style"===a?cr(e,l):"dangerouslySetInnerHTML"===a?or(e,l):"children"===a?ir(e,l):vt(e,a,l,r)}switch(n){case"input":kt(e,o);break;case"textarea":Gn(e,o);break;case"select":t=e._wrapperState.wasMultiple,e._wrapperState.wasMultiple=!!o.multiple,null!=(n=o.value)?Yn(e,!!o.multiple,n,!1):t!==!!o.multiple&&(null!=o.defaultValue?Yn(e,!!o.multiple,o.defaultValue,!0):Yn(e,!!o.multiple,o.multiple?[]:"",!1))}}(n,i,o,e,r)}break;case 6:null===t.stateNode&&a("162"),t.stateNode.nodeValue=t.memoizedProps;break;case 3:case 12:break;case 13:if(n=t.memoizedState,r=void 0,e=t,null===n?r=!1:(r=!0,e=t.child,0===n.timedOutAt&&(n.timedOutAt=kl())),null!==e&&function(e,t){for(var n=e;;){if(5===n.tag){var r=n.stateNode;if(t)r.style.display="none";else{r=n.stateNode;var o=n.memoizedProps.style;o=null!=o&&o.hasOwnProperty("display")?o.display:null,r.style.display=ur("display",o)}}else if(6===n.tag)n.stateNode.nodeValue=t?"":n.memoizedProps;else{if(13===n.tag&&null!==n.memoizedState){(r=n.child.sibling).return=n,n=r;continue}if(null!==n.child){n.child.return=n,n=n.child;continue}}if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return;n=n.return}n.sibling.return=n.return,n=n.sibling}}(e,r),null!==(n=t.updateQueue)){t.updateQueue=null;var l=t.stateNode;null===l&&(l=t.stateNode=new fa),n.forEach(function(e){var n=function(e,t){var n=e.stateNode;null!==n&&n.delete(t),t=Ka(t=kl(),e),null!==(e=Ga(e,t))&&(Zr(e,t),0!==(t=e.expirationTime)&&Tl(e,t))}.bind(null,t,e);l.has(e)||(l.add(e),e.then(n,n))})}break;case 17:break;default:a("163")}}var wa="function"==typeof WeakMap?WeakMap:Map;function xa(e,t,n){(n=Xi(n)).tag=qi,n.payload={element:null};var r=t.value;return n.callback=function(){jl(r),pa(e,t)},n}function ka(e,t,n){(n=Xi(n)).tag=qi;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var o=t.value;n.payload=function(){return r(o)}}var i=e.stateNode;return null!==i&&"function"==typeof i.componentDidCatch&&(n.callback=function(){"function"!=typeof r&&(null===Aa?Aa=new Set([this]):Aa.add(this));var n=t.value,o=t.stack;pa(e,t),this.componentDidCatch(n,{componentStack:null!==o?o:""})}),n}function Ta(e){switch(e.tag){case 1:Mr(e.type)&&Ir();var t=e.effectTag;return 2048&t?(e.effectTag=-2049&t|64,e):null;case 3:return Eo(),zr(),0!=(64&(t=e.effectTag))&&a("285"),e.effectTag=-2049&t|64,e;case 5:return _o(e),null;case 13:return 2048&(t=e.effectTag)?(e.effectTag=-2049&t|64,e):null;case 18:return null;case 4:return Eo(),null;case 10:return Fi(e),null;default:return null}}var Ea=$e.ReactCurrentDispatcher,Sa=$e.ReactCurrentOwner,_a=1073741822,Ca=!1,Pa=null,Oa=null,Ra=0,Na=-1,ja=!1,Ua=null,Ma=!1,Ia=null,za=null,La=null,Aa=null;function Da(){if(null!==Pa)for(var e=Pa.return;null!==e;){var t=e;switch(t.tag){case 1:var n=t.type.childContextTypes;null!=n&&Ir();break;case 3:Eo(),zr();break;case 5:_o(t);break;case 4:Eo();break;case 10:Fi(t)}e=e.return}Oa=null,Ra=0,Na=-1,ja=!1,Pa=null}function Fa(){for(;null!==Ua;){var e=Ua.effectTag;if(16&e&&ir(Ua.stateNode,""),128&e){var t=Ua.alternate;null!==t&&(null!==(t=t.ref)&&("function"==typeof t?t(null):t.current=null))}switch(14&e){case 2:va(Ua),Ua.effectTag&=-3;break;case 6:va(Ua),Ua.effectTag&=-3,ba(Ua.alternate,Ua);break;case 4:ba(Ua.alternate,Ua);break;case 8:ga(e=Ua),e.return=null,e.child=null,e.memoizedState=null,e.updateQueue=null,null!==(e=e.alternate)&&(e.return=null,e.child=null,e.memoizedState=null,e.updateQueue=null)}Ua=Ua.nextEffect}}function Wa(){for(;null!==Ua;){if(256&Ua.effectTag)e:{var e=Ua.alternate,t=Ua;switch(t.tag){case 0:case 11:case 15:ha(Po,Co,t);break e;case 1:if(256&t.effectTag&&null!==e){var n=e.memoizedProps,r=e.memoizedState;t=(e=t.stateNode).getSnapshotBeforeUpdate(t.elementType===t.type?n:ro(t.type,n),r),e.__reactInternalSnapshotBeforeUpdate=t}break e;case 3:case 5:case 6:case 4:case 17:break e;default:a("163")}}Ua=Ua.nextEffect}}function Ba(e,t){for(;null!==Ua;){var n=Ua.effectTag;if(36&n){var r=Ua.alternate,o=Ua,i=t;switch(o.tag){case 0:case 11:case 15:ha(No,jo,o);break;case 1:var l=o.stateNode;if(4&o.effectTag)if(null===r)l.componentDidMount();else{var u=o.elementType===o.type?r.memoizedProps:ro(o.type,r.memoizedProps);l.componentDidUpdate(u,r.memoizedState,l.__reactInternalSnapshotBeforeUpdate)}null!==(r=o.updateQueue)&&ra(0,r,l);break;case 3:if(null!==(r=o.updateQueue)){if(l=null,null!==o.child)switch(o.child.tag){case 5:l=o.child.stateNode;break;case 1:l=o.child.stateNode}ra(0,r,l)}break;case 5:i=o.stateNode,null===r&&4&o.effectTag&&vr(o.type,o.memoizedProps)&&i.focus();break;case 6:case 4:case 12:case 13:case 17:break;default:a("163")}}128&n&&(null!==(o=Ua.ref)&&(i=Ua.stateNode,"function"==typeof o?o(i):o.current=i)),512&n&&(Ia=e),Ua=Ua.nextEffect}}function Va(){null!==za&&kr(za),null!==La&&La()}function $a(e,t){Ma=Ca=!0,e.current===t&&a("177");var n=e.pendingCommitExpirationTime;0===n&&a("261"),e.pendingCommitExpirationTime=0;var r=t.expirationTime,o=t.childExpirationTime;for(function(e,t){if(e.didError=!1,0===t)e.earliestPendingTime=0,e.latestPendingTime=0,e.earliestSuspendedTime=0,e.latestSuspendedTime=0,e.latestPingedTime=0;else{t<e.latestPingedTime&&(e.latestPingedTime=0);var n=e.latestPendingTime;0!==n&&(n>t?e.earliestPendingTime=e.latestPendingTime=0:e.earliestPendingTime>t&&(e.earliestPendingTime=e.latestPendingTime)),0===(n=e.earliestSuspendedTime)?Zr(e,t):t<e.latestSuspendedTime?(e.earliestSuspendedTime=0,e.latestSuspendedTime=0,e.latestPingedTime=0,Zr(e,t)):t>n&&Zr(e,t)}no(0,e)}(e,o>r?o:r),Sa.current=null,r=void 0,1<t.effectTag?null!==t.lastEffect?(t.lastEffect.nextEffect=t,r=t.firstEffect):r=t:r=t.firstEffect,mr=En,yr=function(){var e=zn();if(Ln(e)){if("selectionStart"in e)var t={start:e.selectionStart,end:e.selectionEnd};else e:{var n=(t=(t=e.ownerDocument)&&t.defaultView||window).getSelection&&t.getSelection();if(n&&0!==n.rangeCount){t=n.anchorNode;var r=n.anchorOffset,o=n.focusNode;n=n.focusOffset;try{t.nodeType,o.nodeType}catch(e){t=null;break e}var i=0,a=-1,l=-1,u=0,c=0,s=e,f=null;t:for(;;){for(var p;s!==t||0!==r&&3!==s.nodeType||(a=i+r),s!==o||0!==n&&3!==s.nodeType||(l=i+n),3===s.nodeType&&(i+=s.nodeValue.length),null!==(p=s.firstChild);)f=s,s=p;for(;;){if(s===e)break t;if(f===t&&++u===r&&(a=i),f===o&&++c===n&&(l=i),null!==(p=s.nextSibling))break;f=(s=f).parentNode}s=p}t=-1===a||-1===l?null:{start:a,end:l}}else t=null}t=t||{start:0,end:0}}else t=null;return{focusedElem:e,selectionRange:t}}(),En=!1,Ua=r;null!==Ua;){o=!1;var l=void 0;try{Wa()}catch(e){o=!0,l=e}o&&(null===Ua&&a("178"),Ya(Ua,l),null!==Ua&&(Ua=Ua.nextEffect))}for(Ua=r;null!==Ua;){o=!1,l=void 0;try{Fa()}catch(e){o=!0,l=e}o&&(null===Ua&&a("178"),Ya(Ua,l),null!==Ua&&(Ua=Ua.nextEffect))}for(An(yr),yr=null,En=!!mr,mr=null,e.current=t,Ua=r;null!==Ua;){o=!1,l=void 0;try{Ba(e,n)}catch(e){o=!0,l=e}o&&(null===Ua&&a("178"),Ya(Ua,l),null!==Ua&&(Ua=Ua.nextEffect))}if(null!==r&&null!==Ia){var u=function(e,t){La=za=Ia=null;var n=ol;ol=!0;do{if(512&t.effectTag){var r=!1,o=void 0;try{var i=t;ha(Mo,Co,i),ha(Co,Uo,i)}catch(e){r=!0,o=e}r&&Ya(t,o)}t=t.nextEffect}while(null!==t);ol=n,0!==(n=e.expirationTime)&&Tl(e,n),sl||ol||Pl(1073741823,!1)}.bind(null,e,r);za=i.unstable_runWithPriority(i.unstable_NormalPriority,function(){return xr(u)}),La=u}Ca=Ma=!1,"function"==typeof Wr&&Wr(t.stateNode),n=t.expirationTime,0===(t=(t=t.childExpirationTime)>n?t:n)&&(Aa=null),function(e,t){e.expirationTime=t,e.finishedWork=null}(e,t)}function Ha(e){for(;;){var t=e.alternate,n=e.return,r=e.sibling;if(0==(1024&e.effectTag)){Pa=e;e:{var i=t,l=Ra,u=(t=e).pendingProps;switch(t.tag){case 2:case 16:break;case 15:case 0:break;case 1:Mr(t.type)&&Ir();break;case 3:Eo(),zr(),(u=t.stateNode).pendingContext&&(u.context=u.pendingContext,u.pendingContext=null),null!==i&&null!==i.child||(bi(t),t.effectTag&=-3),ua(t);break;case 5:_o(t);var c=ko(xo.current);if(l=t.type,null!==i&&null!=t.stateNode)ca(i,t,l,u,c),i.ref!==t.ref&&(t.effectTag|=128);else if(u){var s=ko(bo.current);if(bi(t)){i=(u=t).stateNode;var f=u.type,p=u.memoizedProps,d=c;switch(i[U]=u,i[M]=p,l=void 0,c=f){case"iframe":case"object":Sn("load",i);break;case"video":case"audio":for(f=0;f<te.length;f++)Sn(te[f],i);break;case"source":Sn("error",i);break;case"img":case"image":case"link":Sn("error",i),Sn("load",i);break;case"form":Sn("reset",i),Sn("submit",i);break;case"details":Sn("toggle",i);break;case"input":wt(i,p),Sn("invalid",i),dr(d,"onChange");break;case"select":i._wrapperState={wasMultiple:!!p.multiple},Sn("invalid",i),dr(d,"onChange");break;case"textarea":Xn(i,p),Sn("invalid",i),dr(d,"onChange")}for(l in fr(c,p),f=null,p)p.hasOwnProperty(l)&&(s=p[l],"children"===l?"string"==typeof s?i.textContent!==s&&(f=["children",s]):"number"==typeof s&&i.textContent!==""+s&&(f=["children",""+s]):b.hasOwnProperty(l)&&null!=s&&dr(d,l));switch(c){case"input":Be(i),Tt(i,p,!0);break;case"textarea":Be(i),Jn(i);break;case"select":case"option":break;default:"function"==typeof p.onClick&&(i.onclick=hr)}l=f,u.updateQueue=l,(u=null!==l)&&aa(t)}else{p=t,d=l,i=u,f=9===c.nodeType?c:c.ownerDocument,s===Zn.html&&(s=er(d)),s===Zn.html?"script"===d?((i=f.createElement("div")).innerHTML="<script><\/script>",f=i.removeChild(i.firstChild)):"string"==typeof i.is?f=f.createElement(d,{is:i.is}):(f=f.createElement(d),"select"===d&&(d=f,i.multiple?d.multiple=!0:i.size&&(d.size=i.size))):f=f.createElementNS(s,d),(i=f)[U]=p,i[M]=u,la(i,t,!1,!1),d=i;var h=c,m=pr(f=l,p=u);switch(f){case"iframe":case"object":Sn("load",d),c=p;break;case"video":case"audio":for(c=0;c<te.length;c++)Sn(te[c],d);c=p;break;case"source":Sn("error",d),c=p;break;case"img":case"image":case"link":Sn("error",d),Sn("load",d),c=p;break;case"form":Sn("reset",d),Sn("submit",d),c=p;break;case"details":Sn("toggle",d),c=p;break;case"input":wt(d,p),c=bt(d,p),Sn("invalid",d),dr(h,"onChange");break;case"option":c=Qn(d,p);break;case"select":d._wrapperState={wasMultiple:!!p.multiple},c=o({},p,{value:void 0}),Sn("invalid",d),dr(h,"onChange");break;case"textarea":Xn(d,p),c=Kn(d,p),Sn("invalid",d),dr(h,"onChange");break;default:c=p}fr(f,c),s=void 0;var y=f,v=d,g=c;for(s in g)if(g.hasOwnProperty(s)){var w=g[s];"style"===s?cr(v,w):"dangerouslySetInnerHTML"===s?null!=(w=w?w.__html:void 0)&&or(v,w):"children"===s?"string"==typeof w?("textarea"!==y||""!==w)&&ir(v,w):"number"==typeof w&&ir(v,""+w):"suppressContentEditableWarning"!==s&&"suppressHydrationWarning"!==s&&"autoFocus"!==s&&(b.hasOwnProperty(s)?null!=w&&dr(h,s):null!=w&&vt(v,s,w,m))}switch(f){case"input":Be(d),Tt(d,p,!1);break;case"textarea":Be(d),Jn(d);break;case"option":null!=p.value&&d.setAttribute("value",""+gt(p.value));break;case"select":(c=d).multiple=!!p.multiple,null!=(d=p.value)?Yn(c,!!p.multiple,d,!1):null!=p.defaultValue&&Yn(c,!!p.multiple,p.defaultValue,!0);break;default:"function"==typeof c.onClick&&(d.onclick=hr)}(u=vr(l,u))&&aa(t),t.stateNode=i}null!==t.ref&&(t.effectTag|=128)}else null===t.stateNode&&a("166");break;case 6:i&&null!=t.stateNode?sa(i,t,i.memoizedProps,u):("string"!=typeof u&&(null===t.stateNode&&a("166")),i=ko(xo.current),ko(bo.current),bi(t)?(l=(u=t).stateNode,i=u.memoizedProps,l[U]=u,(u=l.nodeValue!==i)&&aa(t)):(l=t,(u=(9===i.nodeType?i:i.ownerDocument).createTextNode(u))[U]=t,l.stateNode=u));break;case 11:break;case 13:if(u=t.memoizedState,0!=(64&t.effectTag)){t.expirationTime=l,Pa=t;break e}u=null!==u,l=null!==i&&null!==i.memoizedState,null!==i&&!u&&l&&(null!==(i=i.child.sibling)&&(null!==(c=t.firstEffect)?(t.firstEffect=i,i.nextEffect=c):(t.firstEffect=t.lastEffect=i,i.nextEffect=null),i.effectTag=8)),(u||l)&&(t.effectTag|=4);break;case 7:case 8:case 12:break;case 4:Eo(),ua(t);break;case 10:Fi(t);break;case 9:case 14:break;case 17:Mr(t.type)&&Ir();break;case 18:break;default:a("156")}Pa=null}if(t=e,1===Ra||1!==t.childExpirationTime){for(u=0,l=t.child;null!==l;)(i=l.expirationTime)>u&&(u=i),(c=l.childExpirationTime)>u&&(u=c),l=l.sibling;t.childExpirationTime=u}if(null!==Pa)return Pa;null!==n&&0==(1024&n.effectTag)&&(null===n.firstEffect&&(n.firstEffect=e.firstEffect),null!==e.lastEffect&&(null!==n.lastEffect&&(n.lastEffect.nextEffect=e.firstEffect),n.lastEffect=e.lastEffect),1<e.effectTag&&(null!==n.lastEffect?n.lastEffect.nextEffect=e:n.firstEffect=e,n.lastEffect=e))}else{if(null!==(e=Ta(e)))return e.effectTag&=1023,e;null!==n&&(n.firstEffect=n.lastEffect=null,n.effectTag|=1024)}if(null!==r)return r;if(null===n)break;e=n}return null}function qa(e){var t=Mi(e.alternate,e,Ra);return e.memoizedProps=e.pendingProps,null===t&&(t=Ha(e)),Sa.current=null,t}function Qa(e,t){Ca&&a("243"),Va(),Ca=!0;var n=Ea.current;Ea.current=ci;var r=e.nextExpirationTimeToWorkOn;r===Ra&&e===Oa&&null!==Pa||(Da(),Ra=r,Pa=Qr((Oa=e).current,null),e.pendingCommitExpirationTime=0);for(var o=!1;;){try{if(t)for(;null!==Pa&&!_l();)Pa=qa(Pa);else for(;null!==Pa;)Pa=qa(Pa)}catch(t){if(Ai=Li=zi=null,Jo(),null===Pa)o=!0,jl(t);else{null===Pa&&a("271");var i=Pa,l=i.return;if(null!==l){e:{var u=e,c=l,s=i,f=t;if(l=Ra,s.effectTag|=1024,s.firstEffect=s.lastEffect=null,null!==f&&"object"==typeof f&&"function"==typeof f.then){var p=f;f=c;var d=-1,h=-1;do{if(13===f.tag){var m=f.alternate;if(null!==m&&null!==(m=m.memoizedState)){h=10*(1073741822-m.timedOutAt);break}"number"==typeof(m=f.pendingProps.maxDuration)&&(0>=m?d=0:(-1===d||m<d)&&(d=m))}f=f.return}while(null!==f);f=c;do{if((m=13===f.tag)&&(m=void 0!==f.memoizedProps.fallback&&null===f.memoizedState),m){if(null===(c=f.updateQueue)?((c=new Set).add(p),f.updateQueue=c):c.add(p),0==(1&f.mode)){f.effectTag|=64,s.effectTag&=-1957,1===s.tag&&(null===s.alternate?s.tag=17:((l=Xi(1073741823)).tag=Hi,Ji(s,l))),s.expirationTime=1073741823;break e}c=l;var y=(s=u).pingCache;null===y?(y=s.pingCache=new wa,m=new Set,y.set(p,m)):void 0===(m=y.get(p))&&(m=new Set,y.set(p,m)),m.has(c)||(m.add(c),s=Xa.bind(null,s,p,c),p.then(s,s)),-1===d?u=1073741823:(-1===h&&(h=10*(1073741822-to(u,l))-5e3),u=h+d),0<=u&&Na<u&&(Na=u),f.effectTag|=2048,f.expirationTime=l;break e}f=f.return}while(null!==f);f=Error((lt(s.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display."+ut(s))}ja=!0,f=ia(f,s),u=c;do{switch(u.tag){case 3:u.effectTag|=2048,u.expirationTime=l,Zi(u,l=xa(u,f,l));break e;case 1:if(d=f,h=u.type,s=u.stateNode,0==(64&u.effectTag)&&("function"==typeof h.getDerivedStateFromError||null!==s&&"function"==typeof s.componentDidCatch&&(null===Aa||!Aa.has(s)))){u.effectTag|=2048,u.expirationTime=l,Zi(u,l=ka(u,d,l));break e}}u=u.return}while(null!==u)}Pa=Ha(i);continue}o=!0,jl(t)}}break}if(Ca=!1,Ea.current=n,Ai=Li=zi=null,Jo(),o)Oa=null,e.finishedWork=null;else if(null!==Pa)e.finishedWork=null;else{if(null===(n=e.current.alternate)&&a("281"),Oa=null,ja){if(o=e.latestPendingTime,i=e.latestSuspendedTime,l=e.latestPingedTime,0!==o&&o<r||0!==i&&i<r||0!==l&&l<r)return eo(e,r),void xl(e,n,r,e.expirationTime,-1);if(!e.didError&&t)return e.didError=!0,r=e.nextExpirationTimeToWorkOn=r,t=e.expirationTime=1073741823,void xl(e,n,r,t,-1)}t&&-1!==Na?(eo(e,r),(t=10*(1073741822-to(e,r)))<Na&&(Na=t),t=10*(1073741822-kl()),t=Na-t,xl(e,n,r,e.expirationTime,0>t?0:t)):(e.pendingCommitExpirationTime=r,e.finishedWork=n)}}function Ya(e,t){for(var n=e.return;null!==n;){switch(n.tag){case 1:var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===Aa||!Aa.has(r)))return Ji(n,e=ka(n,e=ia(t,e),1073741823)),void Ja(n,1073741823);break;case 3:return Ji(n,e=xa(n,e=ia(t,e),1073741823)),void Ja(n,1073741823)}n=n.return}3===e.tag&&(Ji(e,n=xa(e,n=ia(t,e),1073741823)),Ja(e,1073741823))}function Ka(e,t){var n=i.unstable_getCurrentPriorityLevel(),r=void 0;if(0==(1&t.mode))r=1073741823;else if(Ca&&!Ma)r=Ra;else{switch(n){case i.unstable_ImmediatePriority:r=1073741823;break;case i.unstable_UserBlockingPriority:r=1073741822-10*(1+((1073741822-e+15)/10|0));break;case i.unstable_NormalPriority:r=1073741822-25*(1+((1073741822-e+500)/25|0));break;case i.unstable_LowPriority:case i.unstable_IdlePriority:r=1;break;default:a("313")}null!==Oa&&r===Ra&&--r}return n===i.unstable_UserBlockingPriority&&(0===ll||r<ll)&&(ll=r),r}function Xa(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),null!==Oa&&Ra===n?Oa=null:(t=e.earliestSuspendedTime,r=e.latestSuspendedTime,0!==t&&n<=t&&n>=r&&(e.didError=!1,(0===(t=e.latestPingedTime)||t>n)&&(e.latestPingedTime=n),no(n,e),0!==(n=e.expirationTime)&&Tl(e,n)))}function Ga(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t);var r=e.return,o=null;if(null===r&&3===e.tag)o=e.stateNode;else for(;null!==r;){if(n=r.alternate,r.childExpirationTime<t&&(r.childExpirationTime=t),null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t),null===r.return&&3===r.tag){o=r.stateNode;break}r=r.return}return o}function Ja(e,t){null!==(e=Ga(e,t))&&(!Ca&&0!==Ra&&t>Ra&&Da(),Zr(e,t),Ca&&!Ma&&Oa===e||Tl(e,e.expirationTime),vl>yl&&(vl=0,a("185")))}function Za(e,t,n,r,o){return i.unstable_runWithPriority(i.unstable_ImmediatePriority,function(){return e(t,n,r,o)})}var el=null,tl=null,nl=0,rl=void 0,ol=!1,il=null,al=0,ll=0,ul=!1,cl=null,sl=!1,fl=!1,pl=null,dl=i.unstable_now(),hl=1073741822-(dl/10|0),ml=hl,yl=50,vl=0,gl=null;function bl(){hl=1073741822-((i.unstable_now()-dl)/10|0)}function wl(e,t){if(0!==nl){if(t<nl)return;null!==rl&&i.unstable_cancelCallback(rl)}nl=t,e=i.unstable_now()-dl,rl=i.unstable_scheduleCallback(Cl,{timeout:10*(1073741822-t)-e})}function xl(e,t,n,r,o){e.expirationTime=r,0!==o||_l()?0<o&&(e.timeoutHandle=br(function(e,t,n){e.pendingCommitExpirationTime=n,e.finishedWork=t,bl(),ml=hl,Ol(e,n)}.bind(null,e,t,n),o)):(e.pendingCommitExpirationTime=n,e.finishedWork=t)}function kl(){return ol?ml:(El(),0!==al&&1!==al||(bl(),ml=hl),ml)}function Tl(e,t){null===e.nextScheduledRoot?(e.expirationTime=t,null===tl?(el=tl=e,e.nextScheduledRoot=e):(tl=tl.nextScheduledRoot=e).nextScheduledRoot=el):t>e.expirationTime&&(e.expirationTime=t),ol||(sl?fl&&(il=e,al=1073741823,Rl(e,1073741823,!1)):1073741823===t?Pl(1073741823,!1):wl(e,t))}function El(){var e=0,t=null;if(null!==tl)for(var n=tl,r=el;null!==r;){var o=r.expirationTime;if(0===o){if((null===n||null===tl)&&a("244"),r===r.nextScheduledRoot){el=tl=r.nextScheduledRoot=null;break}if(r===el)el=o=r.nextScheduledRoot,tl.nextScheduledRoot=o,r.nextScheduledRoot=null;else{if(r===tl){(tl=n).nextScheduledRoot=el,r.nextScheduledRoot=null;break}n.nextScheduledRoot=r.nextScheduledRoot,r.nextScheduledRoot=null}r=n.nextScheduledRoot}else{if(o>e&&(e=o,t=r),r===tl)break;if(1073741823===e)break;n=r,r=r.nextScheduledRoot}}il=t,al=e}var Sl=!1;function _l(){return!!Sl||!!i.unstable_shouldYield()&&(Sl=!0)}function Cl(){try{if(!_l()&&null!==el){bl();var e=el;do{var t=e.expirationTime;0!==t&&hl<=t&&(e.nextExpirationTimeToWorkOn=hl),e=e.nextScheduledRoot}while(e!==el)}Pl(0,!0)}finally{Sl=!1}}function Pl(e,t){if(El(),t)for(bl(),ml=hl;null!==il&&0!==al&&e<=al&&!(Sl&&hl>al);)Rl(il,al,hl>al),El(),bl(),ml=hl;else for(;null!==il&&0!==al&&e<=al;)Rl(il,al,!1),El();if(t&&(nl=0,rl=null),0!==al&&wl(il,al),vl=0,gl=null,null!==pl)for(e=pl,pl=null,t=0;t<e.length;t++){var n=e[t];try{n._onComplete()}catch(e){ul||(ul=!0,cl=e)}}if(ul)throw e=cl,cl=null,ul=!1,e}function Ol(e,t){ol&&a("253"),il=e,al=t,Rl(e,t,!1),Pl(1073741823,!1)}function Rl(e,t,n){if(ol&&a("245"),ol=!0,n){var r=e.finishedWork;null!==r?Nl(e,r,t):(e.finishedWork=null,-1!==(r=e.timeoutHandle)&&(e.timeoutHandle=-1,wr(r)),Qa(e,n),null!==(r=e.finishedWork)&&(_l()?e.finishedWork=r:Nl(e,r,t)))}else null!==(r=e.finishedWork)?Nl(e,r,t):(e.finishedWork=null,-1!==(r=e.timeoutHandle)&&(e.timeoutHandle=-1,wr(r)),Qa(e,n),null!==(r=e.finishedWork)&&Nl(e,r,t));ol=!1}function Nl(e,t,n){var r=e.firstBatch;if(null!==r&&r._expirationTime>=n&&(null===pl?pl=[r]:pl.push(r),r._defer))return e.finishedWork=t,void(e.expirationTime=0);e.finishedWork=null,e===gl?vl++:(gl=e,vl=0),i.unstable_runWithPriority(i.unstable_ImmediatePriority,function(){$a(e,t)})}function jl(e){null===il&&a("246"),il.expirationTime=0,ul||(ul=!0,cl=e)}function Ul(e,t){var n=sl;sl=!0;try{return e(t)}finally{(sl=n)||ol||Pl(1073741823,!1)}}function Ml(e,t){if(sl&&!fl){fl=!0;try{return e(t)}finally{fl=!1}}return e(t)}function Il(e,t,n){sl||ol||0===ll||(Pl(ll,!1),ll=0);var r=sl;sl=!0;try{return i.unstable_runWithPriority(i.unstable_UserBlockingPriority,function(){return e(t,n)})}finally{(sl=r)||ol||Pl(1073741823,!1)}}function zl(e,t,n,r,o){var i=t.current;e:if(n){t:{2===tn(n=n._reactInternalFiber)&&1===n.tag||a("170");var l=n;do{switch(l.tag){case 3:l=l.stateNode.context;break t;case 1:if(Mr(l.type)){l=l.stateNode.__reactInternalMemoizedMergedChildContext;break t}}l=l.return}while(null!==l);a("171"),l=void 0}if(1===n.tag){var u=n.type;if(Mr(u)){n=Ar(n,u,l);break e}}n=l}else n=Or;return null===t.context?t.context=n:t.pendingContext=n,t=o,(o=Xi(r)).payload={element:e},null!==(t=void 0===t?null:t)&&(o.callback=t),Va(),Ji(i,o),Ja(i,r),r}function Ll(e,t,n,r){var o=t.current;return zl(e,t,n,o=Ka(kl(),o),r)}function Al(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function Dl(e){var t=1073741822-25*(1+((1073741822-kl()+500)/25|0));t>=_a&&(t=_a-1),this._expirationTime=_a=t,this._root=e,this._callbacks=this._next=null,this._hasChildren=this._didComplete=!1,this._children=null,this._defer=!0}function Fl(){this._callbacks=null,this._didCommit=!1,this._onCommit=this._onCommit.bind(this)}function Wl(e,t,n){e={current:t=Hr(3,null,null,t?3:0),containerInfo:e,pendingChildren:null,pingCache:null,earliestPendingTime:0,latestPendingTime:0,earliestSuspendedTime:0,latestSuspendedTime:0,latestPingedTime:0,didError:!1,pendingCommitExpirationTime:0,finishedWork:null,timeoutHandle:-1,context:null,pendingContext:null,hydrate:n,nextExpirationTimeToWorkOn:0,expirationTime:0,firstBatch:null,nextScheduledRoot:null},this._internalRoot=t.stateNode=e}function Bl(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Vl(e,t,n,r,o){var i=n._reactRootContainer;if(i){if("function"==typeof o){var a=o;o=function(){var e=Al(i._internalRoot);a.call(e)}}null!=e?i.legacy_renderSubtreeIntoContainer(e,t,o):i.render(t,o)}else{if(i=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new Wl(e,!1,t)}(n,r),"function"==typeof o){var l=o;o=function(){var e=Al(i._internalRoot);l.call(e)}}Ml(function(){null!=e?i.legacy_renderSubtreeIntoContainer(e,t,o):i.render(t,o)})}return Al(i._internalRoot)}function $l(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;return Bl(t)||a("200"),function(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:Ye,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}(e,t,null,n)}_e=function(e,t,n){switch(t){case"input":if(kt(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var o=A(r);o||a("90"),Ve(r),kt(r,o)}}}break;case"textarea":Gn(e,n);break;case"select":null!=(t=n.value)&&Yn(e,!!n.multiple,t,!1)}},Dl.prototype.render=function(e){this._defer||a("250"),this._hasChildren=!0,this._children=e;var t=this._root._internalRoot,n=this._expirationTime,r=new Fl;return zl(e,t,null,n,r._onCommit),r},Dl.prototype.then=function(e){if(this._didComplete)e();else{var t=this._callbacks;null===t&&(t=this._callbacks=[]),t.push(e)}},Dl.prototype.commit=function(){var e=this._root._internalRoot,t=e.firstBatch;if(this._defer&&null!==t||a("251"),this._hasChildren){var n=this._expirationTime;if(t!==this){this._hasChildren&&(n=this._expirationTime=t._expirationTime,this.render(this._children));for(var r=null,o=t;o!==this;)r=o,o=o._next;null===r&&a("251"),r._next=o._next,this._next=t,e.firstBatch=this}this._defer=!1,Ol(e,n),t=this._next,this._next=null,null!==(t=e.firstBatch=t)&&t._hasChildren&&t.render(t._children)}else this._next=null,this._defer=!1},Dl.prototype._onComplete=function(){if(!this._didComplete){this._didComplete=!0;var e=this._callbacks;if(null!==e)for(var t=0;t<e.length;t++)(0,e[t])()}},Fl.prototype.then=function(e){if(this._didCommit)e();else{var t=this._callbacks;null===t&&(t=this._callbacks=[]),t.push(e)}},Fl.prototype._onCommit=function(){if(!this._didCommit){this._didCommit=!0;var e=this._callbacks;if(null!==e)for(var t=0;t<e.length;t++){var n=e[t];"function"!=typeof n&&a("191",n),n()}}},Wl.prototype.render=function(e,t){var n=this._internalRoot,r=new Fl;return null!==(t=void 0===t?null:t)&&r.then(t),Ll(e,n,null,r._onCommit),r},Wl.prototype.unmount=function(e){var t=this._internalRoot,n=new Fl;return null!==(e=void 0===e?null:e)&&n.then(e),Ll(null,t,null,n._onCommit),n},Wl.prototype.legacy_renderSubtreeIntoContainer=function(e,t,n){var r=this._internalRoot,o=new Fl;return null!==(n=void 0===n?null:n)&&o.then(n),Ll(t,r,e,o._onCommit),o},Wl.prototype.createBatch=function(){var e=new Dl(this),t=e._expirationTime,n=this._internalRoot,r=n.firstBatch;if(null===r)n.firstBatch=e,e._next=null;else{for(n=null;null!==r&&r._expirationTime>=t;)n=r,r=r._next;e._next=r,null!==n&&(n._next=e)}return e},je=Ul,Ue=Il,Me=function(){ol||0===ll||(Pl(ll,!1),ll=0)};var Hl={createPortal:$l,findDOMNode:function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternalFiber;return void 0===t&&("function"==typeof e.render?a("188"):a("268",Object.keys(e))),e=null===(e=rn(t))?null:e.stateNode},hydrate:function(e,t,n){return Bl(t)||a("200"),Vl(null,e,t,!0,n)},render:function(e,t,n){return Bl(t)||a("200"),Vl(null,e,t,!1,n)},unstable_renderSubtreeIntoContainer:function(e,t,n,r){return Bl(n)||a("200"),(null==e||void 0===e._reactInternalFiber)&&a("38"),Vl(e,t,n,!1,r)},unmountComponentAtNode:function(e){return Bl(e)||a("40"),!!e._reactRootContainer&&(Ml(function(){Vl(null,null,e,!1,function(){e._reactRootContainer=null})}),!0)},unstable_createPortal:function(){return $l.apply(void 0,arguments)},unstable_batchedUpdates:Ul,unstable_interactiveUpdates:Il,flushSync:function(e,t){ol&&a("187");var n=sl;sl=!0;try{return Za(e,t)}finally{sl=n,Pl(1073741823,!1)}},unstable_createRoot:function(e,t){return Bl(e)||a("299","unstable_createRoot"),new Wl(e,!0,null!=t&&!0===t.hydrate)},unstable_flushControlled:function(e){var t=sl;sl=!0;try{Za(e)}finally{(sl=t)||ol||Pl(1073741823,!1)}},__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{Events:[z,L,A,O.injectEventPluginsByName,g,$,function(e){_(e,V)},Re,Ne,Pn,N]}};!function(e){var t=e.findFiberByHostInstance;(function(e){if("undefined"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var t=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(t.isDisabled||!t.supportsFiber)return!0;try{var n=t.inject(e);Wr=Vr(function(e){return t.onCommitFiberRoot(n,e)}),Br=Vr(function(e){return t.onCommitFiberUnmount(n,e)})}catch(e){}})(o({},e,{overrideProps:null,currentDispatcherRef:$e.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=rn(e))?null:e.stateNode},findFiberByHostInstance:function(e){return t?t(e):null}}))}({findFiberByHostInstance:I,bundleType:0,version:"16.8.6",rendererPackageName:"react-dom"});var ql={default:Hl},Ql=ql&&Hl||ql;e.exports=Ql.default||Ql},function(e,t,n){"use strict";e.exports=n(10)},function(e,t,n){"use strict";(function(e){
/** @license React v0.13.6
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
Object.defineProperty(t,"__esModule",{value:!0});var n=null,r=!1,o=3,i=-1,a=-1,l=!1,u=!1;function c(){if(!l){var e=n.expirationTime;u?T():u=!0,k(p,e)}}function s(){var e=n,t=n.next;if(n===t)n=null;else{var r=n.previous;n=r.next=t,t.previous=r}e.next=e.previous=null,r=e.callback,t=e.expirationTime,e=e.priorityLevel;var i=o,l=a;o=e,a=t;try{var u=r()}finally{o=i,a=l}if("function"==typeof u)if(u={callback:u,priorityLevel:e,expirationTime:t,next:null,previous:null},null===n)n=u.next=u.previous=u;else{r=null,e=n;do{if(e.expirationTime>=t){r=e;break}e=e.next}while(e!==n);null===r?r=n:r===n&&(n=u,c()),(t=r.previous).next=r.previous=u,u.next=r,u.previous=t}}function f(){if(-1===i&&null!==n&&1===n.priorityLevel){l=!0;try{do{s()}while(null!==n&&1===n.priorityLevel)}finally{l=!1,null!==n?c():u=!1}}}function p(e){l=!0;var o=r;r=e;try{if(e)for(;null!==n;){var i=t.unstable_now();if(!(n.expirationTime<=i))break;do{s()}while(null!==n&&n.expirationTime<=i)}else if(null!==n)do{s()}while(null!==n&&!E())}finally{l=!1,r=o,null!==n?c():u=!1,f()}}var d,h,m=Date,y="function"==typeof setTimeout?setTimeout:void 0,v="function"==typeof clearTimeout?clearTimeout:void 0,g="function"==typeof requestAnimationFrame?requestAnimationFrame:void 0,b="function"==typeof cancelAnimationFrame?cancelAnimationFrame:void 0;function w(e){d=g(function(t){v(h),e(t)}),h=y(function(){b(d),e(t.unstable_now())},100)}if("object"==typeof performance&&"function"==typeof performance.now){var x=performance;t.unstable_now=function(){return x.now()}}else t.unstable_now=function(){return m.now()};var k,T,E,S=null;if("undefined"!=typeof window?S=window:void 0!==e&&(S=e),S&&S._schedMock){var _=S._schedMock;k=_[0],T=_[1],E=_[2],t.unstable_now=_[3]}else if("undefined"==typeof window||"function"!=typeof MessageChannel){var C=null,P=function(e){if(null!==C)try{C(e)}finally{C=null}};k=function(e){null!==C?setTimeout(k,0,e):(C=e,setTimeout(P,0,!1))},T=function(){C=null},E=function(){return!1}}else{"undefined"!=typeof console&&("function"!=typeof g&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"),"function"!=typeof b&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"));var O=null,R=!1,N=-1,j=!1,U=!1,M=0,I=33,z=33;E=function(){return M<=t.unstable_now()};var L=new MessageChannel,A=L.port2;L.port1.onmessage=function(){R=!1;var e=O,n=N;O=null,N=-1;var r=t.unstable_now(),o=!1;if(0>=M-r){if(!(-1!==n&&n<=r))return j||(j=!0,w(D)),O=e,void(N=n);o=!0}if(null!==e){U=!0;try{e(o)}finally{U=!1}}};var D=function(e){if(null!==O){w(D);var t=e-M+z;t<z&&I<z?(8>t&&(t=8),z=t<I?I:t):I=t,M=e+z,R||(R=!0,A.postMessage(void 0))}else j=!1};k=function(e,t){O=e,N=t,U||0>t?A.postMessage(void 0):j||(j=!0,w(D))},T=function(){O=null,R=!1,N=-1}}t.unstable_ImmediatePriority=1,t.unstable_UserBlockingPriority=2,t.unstable_NormalPriority=3,t.unstable_IdlePriority=5,t.unstable_LowPriority=4,t.unstable_runWithPriority=function(e,n){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var r=o,a=i;o=e,i=t.unstable_now();try{return n()}finally{o=r,i=a,f()}},t.unstable_next=function(e){switch(o){case 1:case 2:case 3:var n=3;break;default:n=o}var r=o,a=i;o=n,i=t.unstable_now();try{return e()}finally{o=r,i=a,f()}},t.unstable_scheduleCallback=function(e,r){var a=-1!==i?i:t.unstable_now();if("object"==typeof r&&null!==r&&"number"==typeof r.timeout)r=a+r.timeout;else switch(o){case 1:r=a+-1;break;case 2:r=a+250;break;case 5:r=a+1073741823;break;case 4:r=a+1e4;break;default:r=a+5e3}if(e={callback:e,priorityLevel:o,expirationTime:r,next:null,previous:null},null===n)n=e.next=e.previous=e,c();else{a=null;var l=n;do{if(l.expirationTime>r){a=l;break}l=l.next}while(l!==n);null===a?a=n:a===n&&(n=e,c()),(r=a.previous).next=a.previous=e,e.next=a,e.previous=r}return e},t.unstable_cancelCallback=function(e){var t=e.next;if(null!==t){if(t===e)n=null;else{e===n&&(n=t);var r=e.previous;r.next=t,t.previous=r}e.next=e.previous=null}},t.unstable_wrapCallback=function(e){var n=o;return function(){var r=o,a=i;o=n,i=t.unstable_now();try{return e.apply(this,arguments)}finally{o=r,i=a,f()}}},t.unstable_getCurrentPriorityLevel=function(){return o},t.unstable_shouldYield=function(){return!r&&(null!==n&&n.expirationTime<a||E())},t.unstable_continueExecution=function(){null!==n&&c()},t.unstable_pauseExecution=function(){},t.unstable_getFirstCallbackNode=function(){return n}}).call(this,n(11))},function(e,t){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(e){"object"==typeof window&&(n=window)}e.exports=n},function(e,t,n){var r=n(13);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0};n(15)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(t=e.exports=n(14)(!1)).push([e.i,"@import url(https://fonts.googleapis.com/css?family=Raleway:300,400,600);",""]),t.push([e.i,"* {\n  font-family: 'Raleway', sans-serif; }\n\n* {\n  box-sizing: border-box; }\n\nbody {\n  background: #ececec; }\n\n.home {\n  display: block;\n  width: 520px;\n  height: auto;\n  margin: 50px auto;\n  background: #fff;\n  border-radius: 5px;\n  padding: 15px 50px; }\n",""])},function(e,t,n){"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map(function(t){var n=function(e,t){var n=e[1]||"",r=e[3];if(!r)return n;if(t&&"function"==typeof btoa){var o=(a=r,l=btoa(unescape(encodeURIComponent(JSON.stringify(a)))),u="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(l),"/*# ".concat(u," */")),i=r.sources.map(function(e){return"/*# sourceURL=".concat(r.sourceRoot).concat(e," */")});return[n].concat(i).concat([o]).join("\n")}var a,l,u;return[n].join("\n")}(t,e);return t[2]?"@media ".concat(t[2],"{").concat(n,"}"):n}).join("")},t.i=function(e,n){"string"==typeof e&&(e=[[null,e,""]]);for(var r={},o=0;o<this.length;o++){var i=this[o][0];null!=i&&(r[i]=!0)}for(var a=0;a<e.length;a++){var l=e[a];null!=l[0]&&r[l[0]]||(n&&!l[2]?l[2]=n:n&&(l[2]="(".concat(l[2],") and (").concat(n,")")),t.push(l))}},t}},function(e,t,n){var r,o,i={},a=(r=function(){return window&&document&&document.all&&!window.atob},function(){return void 0===o&&(o=r.apply(this,arguments)),o}),l=function(e){var t={};return function(e){if(void 0===t[e]){var n=function(e){return document.querySelector(e)}.call(this,e);if(n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}}(),u=null,c=0,s=[],f=n(16);function p(e,t){for(var n=0;n<e.length;n++){var r=e[n],o=i[r.id];if(o){o.refs++;for(var a=0;a<o.parts.length;a++)o.parts[a](r.parts[a]);for(;a<r.parts.length;a++)o.parts.push(g(r.parts[a],t))}else{var l=[];for(a=0;a<r.parts.length;a++)l.push(g(r.parts[a],t));i[r.id]={id:r.id,refs:1,parts:l}}}}function d(e,t){for(var n=[],r={},o=0;o<e.length;o++){var i=e[o],a=t.base?i[0]+t.base:i[0],l={css:i[1],media:i[2],sourceMap:i[3]};r[a]?r[a].parts.push(l):n.push(r[a]={id:a,parts:[l]})}return n}function h(e,t){var n=l(e.insertInto);if(!n)throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");var r=s[s.length-1];if("top"===e.insertAt)r?r.nextSibling?n.insertBefore(t,r.nextSibling):n.appendChild(t):n.insertBefore(t,n.firstChild),s.push(t);else if("bottom"===e.insertAt)n.appendChild(t);else{if("object"!=typeof e.insertAt||!e.insertAt.before)throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");var o=l(e.insertInto+" "+e.insertAt.before);n.insertBefore(t,o)}}function m(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e);var t=s.indexOf(e);t>=0&&s.splice(t,1)}function y(e){var t=document.createElement("style");return e.attrs.type="text/css",v(t,e.attrs),h(e,t),t}function v(e,t){Object.keys(t).forEach(function(n){e.setAttribute(n,t[n])})}function g(e,t){var n,r,o,i;if(t.transform&&e.css){if(!(i=t.transform(e.css)))return function(){};e.css=i}if(t.singleton){var a=c++;n=u||(u=y(t)),r=x.bind(null,n,a,!1),o=x.bind(null,n,a,!0)}else e.sourceMap&&"function"==typeof URL&&"function"==typeof URL.createObjectURL&&"function"==typeof URL.revokeObjectURL&&"function"==typeof Blob&&"function"==typeof btoa?(n=function(e){var t=document.createElement("link");return e.attrs.type="text/css",e.attrs.rel="stylesheet",v(t,e.attrs),h(e,t),t}(t),r=function(e,t,n){var r=n.css,o=n.sourceMap,i=void 0===t.convertToAbsoluteUrls&&o;(t.convertToAbsoluteUrls||i)&&(r=f(r));o&&(r+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(o))))+" */");var a=new Blob([r],{type:"text/css"}),l=e.href;e.href=URL.createObjectURL(a),l&&URL.revokeObjectURL(l)}.bind(null,n,t),o=function(){m(n),n.href&&URL.revokeObjectURL(n.href)}):(n=y(t),r=function(e,t){var n=t.css,r=t.media;r&&e.setAttribute("media",r);if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}.bind(null,n),o=function(){m(n)});return r(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;r(e=t)}else o()}}e.exports=function(e,t){if("undefined"!=typeof DEBUG&&DEBUG&&"object"!=typeof document)throw new Error("The style-loader cannot be used in a non-browser environment");(t=t||{}).attrs="object"==typeof t.attrs?t.attrs:{},t.singleton||"boolean"==typeof t.singleton||(t.singleton=a()),t.insertInto||(t.insertInto="head"),t.insertAt||(t.insertAt="bottom");var n=d(e,t);return p(n,t),function(e){for(var r=[],o=0;o<n.length;o++){var a=n[o];(l=i[a.id]).refs--,r.push(l)}e&&p(d(e,t),t);for(o=0;o<r.length;o++){var l;if(0===(l=r[o]).refs){for(var u=0;u<l.parts.length;u++)l.parts[u]();delete i[l.id]}}}};var b,w=(b=[],function(e,t){return b[e]=t,b.filter(Boolean).join("\n")});function x(e,t,n,r){var o=n?"":r.css;if(e.styleSheet)e.styleSheet.cssText=w(t,o);else{var i=document.createTextNode(o),a=e.childNodes;a[t]&&e.removeChild(a[t]),a.length?e.insertBefore(i,a[t]):e.appendChild(i)}}},function(e,t){e.exports=function(e){var t="undefined"!=typeof window&&window.location;if(!t)throw new Error("fixUrls requires window.location");if(!e||"string"!=typeof e)return e;var n=t.protocol+"//"+t.host,r=n+t.pathname.replace(/\/[^\/]*$/,"/");return e.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi,function(e,t){var o,i=t.trim().replace(/^"(.*)"$/,function(e,t){return t}).replace(/^'(.*)'$/,function(e,t){return t});return/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/)/i.test(i)?e:(o=0===i.indexOf("//")?i:0===i.indexOf("/")?n+i:r+i.replace(/^\.\//,""),"url("+JSON.stringify(o)+")")})}},function(e,t,n){"use strict";var r=n(18);function o(){}function i(){}i.resetWarningCache=o,e.exports=function(){function e(e,t,n,o,i,a){if(a!==r){var l=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw l.name="Invariant Violation",l}}function t(){return e}e.isRequired=e;var n={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:i,resetWarningCache:o};return n.PropTypes=n,n}},function(e,t,n){"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},function(e,t){e.exports=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)}},function(e,t,n){"use strict";n.r(t);var r=n(0),o=n.n(r),i=n(4),a=n(2),l=n.n(a),u=n(1),c=n.n(u);function s(){return(s=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function f(e){return"/"===e.charAt(0)}function p(e,t){for(var n=t,r=n+1,o=e.length;r<o;n+=1,r+=1)e[n]=e[r];e.pop()}var d=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",n=e&&e.split("/")||[],r=t&&t.split("/")||[],o=e&&f(e),i=t&&f(t),a=o||i;if(e&&f(e)?r=n:n.length&&(r.pop(),r=r.concat(n)),!r.length)return"/";var l=void 0;if(r.length){var u=r[r.length-1];l="."===u||".."===u||""===u}else l=!1;for(var c=0,s=r.length;s>=0;s--){var d=r[s];"."===d?p(r,s):".."===d?(p(r,s),c++):c&&(p(r,s),c--)}if(!a)for(;c--;c)r.unshift("..");!a||""===r[0]||r[0]&&f(r[0])||r.unshift("");var h=r.join("/");return l&&"/"!==h.substr(-1)&&(h+="/"),h};"function"==typeof Symbol&&Symbol.iterator;var h=!0,m="Invariant failed";var y=function(e,t){if(!e)throw h?new Error(m):new Error(m+": "+(t||""))};function v(e){return"/"===e.charAt(0)?e:"/"+e}function g(e,t){return function(e,t){return new RegExp("^"+t+"(\\/|\\?|#|$)","i").test(e)}(e,t)?e.substr(t.length):e}function b(e){return"/"===e.charAt(e.length-1)?e.slice(0,-1):e}function w(e){var t=e.pathname,n=e.search,r=e.hash,o=t||"/";return n&&"?"!==n&&(o+="?"===n.charAt(0)?n:"?"+n),r&&"#"!==r&&(o+="#"===r.charAt(0)?r:"#"+r),o}function x(e,t,n,r){var o;"string"==typeof e?(o=function(e){var t=e||"/",n="",r="",o=t.indexOf("#");-1!==o&&(r=t.substr(o),t=t.substr(0,o));var i=t.indexOf("?");return-1!==i&&(n=t.substr(i),t=t.substr(0,i)),{pathname:t,search:"?"===n?"":n,hash:"#"===r?"":r}}(e)).state=t:(void 0===(o=s({},e)).pathname&&(o.pathname=""),o.search?"?"!==o.search.charAt(0)&&(o.search="?"+o.search):o.search="",o.hash?"#"!==o.hash.charAt(0)&&(o.hash="#"+o.hash):o.hash="",void 0!==t&&void 0===o.state&&(o.state=t));try{o.pathname=decodeURI(o.pathname)}catch(e){throw e instanceof URIError?new URIError('Pathname "'+o.pathname+'" could not be decoded. This is likely caused by an invalid percent-encoding.'):e}return n&&(o.key=n),r?o.pathname?"/"!==o.pathname.charAt(0)&&(o.pathname=d(o.pathname,r.pathname)):o.pathname=r.pathname:o.pathname||(o.pathname="/"),o}function k(){var e=null;var t=[];return{setPrompt:function(t){return e=t,function(){e===t&&(e=null)}},confirmTransitionTo:function(t,n,r,o){if(null!=e){var i="function"==typeof e?e(t,n):e;"string"==typeof i?"function"==typeof r?r(i,o):o(!0):o(!1!==i)}else o(!0)},appendListener:function(e){var n=!0;function r(){n&&e.apply(void 0,arguments)}return t.push(r),function(){n=!1,t=t.filter(function(e){return e!==r})}},notifyListeners:function(){for(var e=arguments.length,n=new Array(e),r=0;r<e;r++)n[r]=arguments[r];t.forEach(function(e){return e.apply(void 0,n)})}}}var T=!("undefined"==typeof window||!window.document||!window.document.createElement);function E(e,t){t(window.confirm(e))}var S="popstate",_="hashchange";function C(){try{return window.history.state||{}}catch(e){return{}}}function P(e){void 0===e&&(e={}),T||y(!1);var t,n=window.history,r=(-1===(t=window.navigator.userAgent).indexOf("Android 2.")&&-1===t.indexOf("Android 4.0")||-1===t.indexOf("Mobile Safari")||-1!==t.indexOf("Chrome")||-1!==t.indexOf("Windows Phone"))&&window.history&&"pushState"in window.history,o=!(-1===window.navigator.userAgent.indexOf("Trident")),i=e,a=i.forceRefresh,l=void 0!==a&&a,u=i.getUserConfirmation,c=void 0===u?E:u,f=i.keyLength,p=void 0===f?6:f,d=e.basename?b(v(e.basename)):"";function h(e){var t=e||{},n=t.key,r=t.state,o=window.location,i=o.pathname+o.search+o.hash;return d&&(i=g(i,d)),x(i,r,n)}function m(){return Math.random().toString(36).substr(2,p)}var P=k();function O(e){s(W,e),W.length=n.length,P.notifyListeners(W.location,W.action)}function R(e){(function(e){void 0===e.state&&navigator.userAgent.indexOf("CriOS")})(e)||U(h(e.state))}function N(){U(h(C()))}var j=!1;function U(e){if(j)j=!1,O();else{P.confirmTransitionTo(e,"POP",c,function(t){t?O({action:"POP",location:e}):function(e){var t=W.location,n=I.indexOf(t.key);-1===n&&(n=0);var r=I.indexOf(e.key);-1===r&&(r=0);var o=n-r;o&&(j=!0,L(o))}(e)})}}var M=h(C()),I=[M.key];function z(e){return d+w(e)}function L(e){n.go(e)}var A=0;function D(e){1===(A+=e)&&1===e?(window.addEventListener(S,R),o&&window.addEventListener(_,N)):0===A&&(window.removeEventListener(S,R),o&&window.removeEventListener(_,N))}var F=!1;var W={length:n.length,action:"POP",location:M,createHref:z,push:function(e,t){var o=x(e,t,m(),W.location);P.confirmTransitionTo(o,"PUSH",c,function(e){if(e){var t=z(o),i=o.key,a=o.state;if(r)if(n.pushState({key:i,state:a},null,t),l)window.location.href=t;else{var u=I.indexOf(W.location.key),c=I.slice(0,-1===u?0:u+1);c.push(o.key),I=c,O({action:"PUSH",location:o})}else window.location.href=t}})},replace:function(e,t){var o=x(e,t,m(),W.location);P.confirmTransitionTo(o,"REPLACE",c,function(e){if(e){var t=z(o),i=o.key,a=o.state;if(r)if(n.replaceState({key:i,state:a},null,t),l)window.location.replace(t);else{var u=I.indexOf(W.location.key);-1!==u&&(I[u]=o.key),O({action:"REPLACE",location:o})}else window.location.replace(t)}})},go:L,goBack:function(){L(-1)},goForward:function(){L(1)},block:function(e){void 0===e&&(e=!1);var t=P.setPrompt(e);return F||(D(1),F=!0),function(){return F&&(F=!1,D(-1)),t()}},listen:function(e){var t=P.appendListener(e);return D(1),function(){D(-1),t()}}};return W}var O=n(3),R=n.n(O),N=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e};function j(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}var U=function(e){function t(){var n,r;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var o=arguments.length,i=Array(o),a=0;a<o;a++)i[a]=arguments[a];return n=r=j(this,e.call.apply(e,[this].concat(i))),r.state={match:r.computeMatch(r.props.history.location.pathname)},j(r,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t.prototype.getChildContext=function(){return{router:N({},this.context.router,{history:this.props.history,route:{location:this.props.history.location,match:this.state.match}})}},t.prototype.computeMatch=function(e){return{path:"/",url:"/",params:{},isExact:"/"===e}},t.prototype.componentWillMount=function(){var e=this,t=this.props,n=t.children,r=t.history;R()(null==n||1===o.a.Children.count(n),"A <Router> may have only one child element"),this.unlisten=r.listen(function(){e.setState({match:e.computeMatch(r.location.pathname)})})},t.prototype.componentWillReceiveProps=function(e){l()(this.props.history===e.history,"You cannot change <Router history>")},t.prototype.componentWillUnmount=function(){this.unlisten()},t.prototype.render=function(){var e=this.props.children;return e?o.a.Children.only(e):null},t}(o.a.Component);U.propTypes={history:c.a.object.isRequired,children:c.a.node},U.contextTypes={router:c.a.object},U.childContextTypes={router:c.a.object.isRequired};var M=U;function I(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}var z=function(e){function t(){var n,r;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var o=arguments.length,i=Array(o),a=0;a<o;a++)i[a]=arguments[a];return n=r=I(this,e.call.apply(e,[this].concat(i))),r.history=P(r.props),I(r,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t.prototype.componentWillMount=function(){l()(!this.props.history,"<BrowserRouter> ignores the history prop. To use a custom history, use `import { Router }` instead of `import { BrowserRouter as Router }`.")},t.prototype.render=function(){return o.a.createElement(M,{history:this.history,children:this.props.children})},t}(o.a.Component);z.propTypes={basename:c.a.string,forceRefresh:c.a.bool,getUserConfirmation:c.a.func,keyLength:c.a.number,children:c.a.node};var L=z,A=n(6),D=n.n(A),F={},W=0,B=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments[2];"string"==typeof t&&(t={path:t});var r=t,o=r.path,i=r.exact,a=void 0!==i&&i,l=r.strict,u=void 0!==l&&l,c=r.sensitive;if(null==o)return n;var s=function(e,t){var n=""+t.end+t.strict+t.sensitive,r=F[n]||(F[n]={});if(r[e])return r[e];var o=[],i={re:D()(e,o,t),keys:o};return W<1e4&&(r[e]=i,W++),i}(o,{end:a,strict:u,sensitive:void 0!==c&&c}),f=s.re,p=s.keys,d=f.exec(e);if(!d)return null;var h=d[0],m=d.slice(1),y=e===h;return a&&!y?null:{path:o,url:"/"===o&&""===h?"/":h,isExact:y,params:p.reduce(function(e,t,n){return e[t.name]=m[n],e},{})}};var V=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,e.apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t.prototype.componentWillMount=function(){R()(this.context.router,"You should not use <Switch> outside a <Router>")},t.prototype.componentWillReceiveProps=function(e){l()(!(e.location&&!this.props.location),'<Switch> elements should not change from uncontrolled to controlled (or vice versa). You initially used no "location" prop and then provided one on a subsequent render.'),l()(!(!e.location&&this.props.location),'<Switch> elements should not change from controlled to uncontrolled (or vice versa). You provided a "location" prop initially but omitted it on a subsequent render.')},t.prototype.render=function(){var e=this.context.router.route,t=this.props.children,n=this.props.location||e.location,r=void 0,i=void 0;return o.a.Children.forEach(t,function(t){if(null==r&&o.a.isValidElement(t)){var a=t.props,l=a.path,u=a.exact,c=a.strict,s=a.sensitive,f=a.from,p=l||f;i=t,r=B(n.pathname,{path:p,exact:u,strict:c,sensitive:s},e.match)}}),r?o.a.cloneElement(i,{location:n,computedMatch:r}):null},t}(o.a.Component);V.contextTypes={router:c.a.shape({route:c.a.object.isRequired}).isRequired},V.propTypes={children:c.a.node,location:c.a.object};var $=V,H=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e};function q(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}var Q=function(e){return 0===o.a.Children.count(e)},Y=function(e){function t(){var n,r;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var o=arguments.length,i=Array(o),a=0;a<o;a++)i[a]=arguments[a];return n=r=q(this,e.call.apply(e,[this].concat(i))),r.state={match:r.computeMatch(r.props,r.context.router)},q(r,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t.prototype.getChildContext=function(){return{router:H({},this.context.router,{route:{location:this.props.location||this.context.router.route.location,match:this.state.match}})}},t.prototype.computeMatch=function(e,t){var n=e.computedMatch,r=e.location,o=e.path,i=e.strict,a=e.exact,l=e.sensitive;if(n)return n;R()(t,"You should not use <Route> or withRouter() outside a <Router>");var u=t.route,c=(r||u.location).pathname;return B(c,{path:o,strict:i,exact:a,sensitive:l},u.match)},t.prototype.componentWillMount=function(){l()(!(this.props.component&&this.props.render),"You should not use <Route component> and <Route render> in the same route; <Route render> will be ignored"),l()(!(this.props.component&&this.props.children&&!Q(this.props.children)),"You should not use <Route component> and <Route children> in the same route; <Route children> will be ignored"),l()(!(this.props.render&&this.props.children&&!Q(this.props.children)),"You should not use <Route render> and <Route children> in the same route; <Route children> will be ignored")},t.prototype.componentWillReceiveProps=function(e,t){l()(!(e.location&&!this.props.location),'<Route> elements should not change from uncontrolled to controlled (or vice versa). You initially used no "location" prop and then provided one on a subsequent render.'),l()(!(!e.location&&this.props.location),'<Route> elements should not change from controlled to uncontrolled (or vice versa). You provided a "location" prop initially but omitted it on a subsequent render.'),this.setState({match:this.computeMatch(e,t.router)})},t.prototype.render=function(){var e=this.state.match,t=this.props,n=t.children,r=t.component,i=t.render,a=this.context.router,l=a.history,u=a.route,c=a.staticContext,s={match:e,location:this.props.location||u.location,history:l,staticContext:c};return r?e?o.a.createElement(r,s):null:i?e?i(s):null:"function"==typeof n?n(s):n&&!Q(n)?o.a.Children.only(n):null},t}(o.a.Component);Y.propTypes={computedMatch:c.a.object,path:c.a.string,exact:c.a.bool,strict:c.a.bool,sensitive:c.a.bool,component:c.a.func,render:c.a.func,children:c.a.oneOfType([c.a.func,c.a.node]),location:c.a.object},Y.contextTypes={router:c.a.shape({history:c.a.object.isRequired,route:c.a.object.isRequired,staticContext:c.a.object})},Y.childContextTypes={router:c.a.object.isRequired};var K=Y;n(12);function X(e){return(X="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function G(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function J(e){return(J=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function Z(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function ee(e,t){return(ee=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var te=function(e){function t(e){var n,r,o;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),r=this,(n=!(o=J(t).call(this,e))||"object"!==X(o)&&"function"!=typeof o?Z(r):o).state={user:{name:""}},n.fetchUsers=n.fetchUsers.bind(Z(n)),n}var n,i,a;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&ee(e,t)}(t,r["Component"]),n=t,(i=[{key:"fetchUsers",value:function(){var e=this;fetch("/users/getUsers").then(function(e){return e.json()}).then(function(t){e.setState({user:t})})}},{key:"componentWillMount",value:function(){this.fetchUsers()}},{key:"render",value:function(){return o.a.createElement("div",{className:"user"},o.a.createElement("h1",null,"Hello ",this.state.user.name),o.a.createElement("a",{href:"/users/postUser"},"Create Node"))}}])&&G(n.prototype,i),a&&G(n,a),t}();function ne(e){return(ne="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function re(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function oe(e,t){return!t||"object"!==ne(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function ie(e){return(ie=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function ae(e,t){return(ae=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var le=function(e){function t(e){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(n=oe(this,ie(t).call(this,e))).state={},n}var n,i,a;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&ae(e,t)}(t,r["Component"]),n=t,(i=[{key:"render",value:function(){return o.a.createElement("div",{className:"navigation"},o.a.createElement("div",{className:"menu"},o.a.createElement("ul",null,o.a.createElement("li",null,o.a.createElement("a",{href:"/"},"Home")),o.a.createElement("li",null,o.a.createElement("a",{href:"/users"},"Users")))))}}])&&re(n.prototype,i),a&&re(n,a),t}();function ue(e){return(ue="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function ce(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function se(e,t){return!t||"object"!==ue(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function fe(e){return(fe=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function pe(e,t){return(pe=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var de=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),se(this,fe(t).apply(this,arguments))}var n,r,i;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&pe(e,t)}(t,o.a.Component),n=t,(r=[{key:"render",value:function(){return o.a.createElement("div",{className:"page"},o.a.createElement(le,null),o.a.createElement("div",{className:"home"},o.a.createElement(te,null),o.a.createElement("p",null,"Welcome to the ReactJS and ExpressJS generator"),o.a.createElement("p",null,"Check out the"," ",o.a.createElement("a",{href:"https://github.com/kevin-wynn/reactjs-express-generator/wiki"},"documentation")," ","to get started.")))}}])&&ce(n.prototype,r),i&&ce(n,i),t}();function he(e){return(he="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function me(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function ye(e,t){return!t||"object"!==he(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function ve(e){return(ve=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function ge(e,t){return(ge=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var be=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),ye(this,ve(t).apply(this,arguments))}var n,r,i;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&ge(e,t)}(t,o.a.Component),n=t,(r=[{key:"render",value:function(){return o.a.createElement("div",{className:"page"},o.a.createElement(le,null),o.a.createElement("div",{className:"users"},o.a.createElement("h1",null,"Users Page"),o.a.createElement(te,null)))}}])&&me(n.prototype,r),i&&me(n,i),t}();Object(i.render)(o.a.createElement(L,null,o.a.createElement($,null,o.a.createElement(K,{exact:!0,path:"/",component:de}),o.a.createElement(K,{exact:!0,path:"/users",component:be}))),document.getElementById("app"))}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9yZWFjdC9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy93YXJuaW5nL3dhcm5pbmcuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9pbnZhcmlhbnQvYnJvd3Nlci5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL3JlYWN0LWRvbS9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL29iamVjdC1hc3NpZ24vaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXIvbm9kZV9tb2R1bGVzL3BhdGgtdG8tcmVnZXhwL2luZGV4LmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvcmVhY3QvY2pzL3JlYWN0LnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvcmVhY3QtZG9tL2Nqcy9yZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9zY2hlZHVsZXIvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9zY2hlZHVsZXIvY2pzL3NjaGVkdWxlci5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL3dlYnBhY2svYnVpbGRpbi9nbG9iYWwuanMiLCJ3ZWJwYWNrOi8vLy4vc2Nzcy9tYWluLnNjc3M/NDdiZCIsIndlYnBhY2s6Ly8vLi9zY3NzL21haW4uc2NzcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi91cmxzLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9mYWN0b3J5V2l0aFRocm93aW5nU2hpbXMuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2xpYi9SZWFjdFByb3BUeXBlc1NlY3JldC5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci9ub2RlX21vZHVsZXMvaXNhcnJheS9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHMuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9yZXNvbHZlLXBhdGhuYW1lL2luZGV4LmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvdmFsdWUtZXF1YWwvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy90aW55LWludmFyaWFudC9kaXN0L3RpbnktaW52YXJpYW50LmVzbS5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2hpc3RvcnkvZXNtL2hpc3RvcnkuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXIvZXMvUm91dGVyLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvcmVhY3Qtcm91dGVyLWRvbS9lcy9Sb3V0ZXIuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXItZG9tL2VzL0Jyb3dzZXJSb3V0ZXIuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXIvZXMvbWF0Y2hQYXRoLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvcmVhY3Qtcm91dGVyL2VzL1N3aXRjaC5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci1kb20vZXMvU3dpdGNoLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvcmVhY3Qtcm91dGVyL2VzL1JvdXRlLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvcmVhY3Qtcm91dGVyLWRvbS9lcy9Sb3V0ZS5qcyIsIndlYnBhY2s6Ly8vLi9hcHAvY29tcG9uZW50cy9Vc2VyLmpzeCIsIndlYnBhY2s6Ly8vLi9hcHAvY29tcG9uZW50cy9NZW51LmpzeCIsIndlYnBhY2s6Ly8vLi9hcHAvcGFnZXMvSG9tZS5qc3giLCJ3ZWJwYWNrOi8vLy4vYXBwL3BhZ2VzL1VzZXJzLmpzeCIsIndlYnBhY2s6Ly8vLi9hcHAvaW5kZXguanN4Il0sIm5hbWVzIjpbImluc3RhbGxlZE1vZHVsZXMiLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJleHBvcnRzIiwibW9kdWxlIiwiaSIsImwiLCJtb2R1bGVzIiwiY2FsbCIsIm0iLCJjIiwiZCIsIm5hbWUiLCJnZXR0ZXIiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiciIsIlN5bWJvbCIsInRvU3RyaW5nVGFnIiwidmFsdWUiLCJ0IiwibW9kZSIsIl9fZXNNb2R1bGUiLCJucyIsImNyZWF0ZSIsImtleSIsImJpbmQiLCJuIiwib2JqZWN0IiwicHJvcGVydHkiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsInAiLCJzIiwid2FybmluZyIsImNvbmRpdGlvbiIsImZvcm1hdCIsImEiLCJiIiwiZSIsImYiLCJlcnJvciIsInVuZGVmaW5lZCIsIkVycm9yIiwiYXJncyIsImFyZ0luZGV4IiwicmVwbGFjZSIsImZyYW1lc1RvUG9wIiwiY2hlY2tEQ0UiLCJfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18iLCJlcnIiLCJjb25zb2xlIiwiZ2V0T3duUHJvcGVydHlTeW1ib2xzIiwicHJvcElzRW51bWVyYWJsZSIsInByb3BlcnR5SXNFbnVtZXJhYmxlIiwiYXNzaWduIiwidGVzdDEiLCJTdHJpbmciLCJnZXRPd25Qcm9wZXJ0eU5hbWVzIiwidGVzdDIiLCJmcm9tQ2hhckNvZGUiLCJtYXAiLCJqb2luIiwidGVzdDMiLCJzcGxpdCIsImZvckVhY2giLCJsZXR0ZXIiLCJrZXlzIiwic2hvdWxkVXNlTmF0aXZlIiwidGFyZ2V0Iiwic291cmNlIiwiZnJvbSIsInN5bWJvbHMiLCJ0byIsInZhbCIsIlR5cGVFcnJvciIsInRvT2JqZWN0IiwiYXJndW1lbnRzIiwibGVuZ3RoIiwiaXNhcnJheSIsInBhdGhUb1JlZ2V4cCIsInBhcnNlIiwiY29tcGlsZSIsInN0ciIsIm9wdGlvbnMiLCJ0b2tlbnNUb0Z1bmN0aW9uIiwidG9rZW5zVG9SZWdFeHAiLCJQQVRIX1JFR0VYUCIsIlJlZ0V4cCIsInJlcyIsInRva2VucyIsImluZGV4IiwicGF0aCIsImRlZmF1bHREZWxpbWl0ZXIiLCJkZWxpbWl0ZXIiLCJleGVjIiwiZXNjYXBlZCIsIm9mZnNldCIsInNsaWNlIiwibmV4dCIsInByZWZpeCIsImNhcHR1cmUiLCJncm91cCIsIm1vZGlmaWVyIiwiYXN0ZXJpc2siLCJwdXNoIiwicGFydGlhbCIsInJlcGVhdCIsIm9wdGlvbmFsIiwicGF0dGVybiIsImVzY2FwZUdyb3VwIiwiZXNjYXBlU3RyaW5nIiwic3Vic3RyIiwiZW5jb2RlVVJJQ29tcG9uZW50UHJldHR5IiwiZW5jb2RlVVJJIiwiY2hhckNvZGVBdCIsInRvU3RyaW5nIiwidG9VcHBlckNhc2UiLCJtYXRjaGVzIiwiQXJyYXkiLCJvYmoiLCJvcHRzIiwiZGF0YSIsImVuY29kZSIsInByZXR0eSIsImVuY29kZVVSSUNvbXBvbmVudCIsInRva2VuIiwic2VnbWVudCIsIkpTT04iLCJzdHJpbmdpZnkiLCJqIiwidGVzdCIsImF0dGFjaEtleXMiLCJyZSIsImZsYWdzIiwic2Vuc2l0aXZlIiwic3RyaWN0IiwiZW5kIiwicm91dGUiLCJlbmRzV2l0aERlbGltaXRlciIsImdyb3VwcyIsIm1hdGNoIiwicmVnZXhwVG9SZWdleHAiLCJwYXJ0cyIsImFycmF5VG9SZWdleHAiLCJzdHJpbmdUb1JlZ2V4cCIsImsiLCJmb3IiLCJxIiwidSIsInYiLCJ3IiwieCIsInkiLCJ6IiwiYWEiLCJiYSIsIkEiLCJpdGVyYXRvciIsIkIiLCJnIiwiaCIsImNhIiwiQyIsImlzTW91bnRlZCIsImVucXVldWVGb3JjZVVwZGF0ZSIsImVucXVldWVSZXBsYWNlU3RhdGUiLCJlbnF1ZXVlU2V0U3RhdGUiLCJEIiwiRSIsInRoaXMiLCJwcm9wcyIsImNvbnRleHQiLCJyZWZzIiwidXBkYXRlciIsIkYiLCJHIiwiaXNSZWFjdENvbXBvbmVudCIsInNldFN0YXRlIiwiZm9yY2VVcGRhdGUiLCJIIiwiY29uc3RydWN0b3IiLCJpc1B1cmVSZWFjdENvbXBvbmVudCIsIkkiLCJjdXJyZW50IiwiSiIsIksiLCJMIiwicmVmIiwiX19zZWxmIiwiX19zb3VyY2UiLCJNIiwiY2hpbGRyZW4iLCJkZWZhdWx0UHJvcHMiLCIkJHR5cGVvZiIsInR5cGUiLCJfb3duZXIiLCJOIiwiTyIsIlAiLCJRIiwicG9wIiwicmVzdWx0Iiwia2V5UHJlZml4IiwiZnVuYyIsImNvdW50IiwiUiIsIlUiLCJTIiwiVCIsImlzQXJyYXkiLCJkb25lIiwiPSIsIjoiLCJlc2NhcGUiLCJlYSIsImZhIiwiViIsImRhIiwiVyIsIlgiLCJDaGlsZHJlbiIsInRvQXJyYXkiLCJvbmx5IiwiY3JlYXRlUmVmIiwiQ29tcG9uZW50IiwiUHVyZUNvbXBvbmVudCIsImNyZWF0ZUNvbnRleHQiLCJfY2FsY3VsYXRlQ2hhbmdlZEJpdHMiLCJfY3VycmVudFZhbHVlIiwiX2N1cnJlbnRWYWx1ZTIiLCJfdGhyZWFkQ291bnQiLCJQcm92aWRlciIsIkNvbnN1bWVyIiwiX2NvbnRleHQiLCJmb3J3YXJkUmVmIiwicmVuZGVyIiwibGF6eSIsIl9jdG9yIiwiX3N0YXR1cyIsIl9yZXN1bHQiLCJtZW1vIiwiY29tcGFyZSIsInVzZUNhbGxiYWNrIiwidXNlQ29udGV4dCIsInVzZUVmZmVjdCIsInVzZUltcGVyYXRpdmVIYW5kbGUiLCJ1c2VEZWJ1Z1ZhbHVlIiwidXNlTGF5b3V0RWZmZWN0IiwidXNlTWVtbyIsInVzZVJlZHVjZXIiLCJ1c2VSZWYiLCJ1c2VTdGF0ZSIsIkZyYWdtZW50IiwiU3RyaWN0TW9kZSIsIlN1c3BlbnNlIiwiY3JlYXRlRWxlbWVudCIsImNsb25lRWxlbWVudCIsImNyZWF0ZUZhY3RvcnkiLCJpc1ZhbGlkRWxlbWVudCIsInZlcnNpb24iLCJ1bnN0YWJsZV9Db25jdXJyZW50TW9kZSIsInVuc3RhYmxlX1Byb2ZpbGVyIiwiX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQiLCJSZWFjdEN1cnJlbnREaXNwYXRjaGVyIiwiUmVhY3RDdXJyZW50T3duZXIiLCJZIiwiZGVmYXVsdCIsIloiLCJoYSIsImlhIiwib25FcnJvciIsImphIiwiYXBwbHkiLCJsYSIsIm1hIiwibmEiLCJpbmRleE9mIiwib2EiLCJleHRyYWN0RXZlbnRzIiwiZXZlbnRUeXBlcyIsInBhIiwicGhhc2VkUmVnaXN0cmF0aW9uTmFtZXMiLCJxYSIsInJlZ2lzdHJhdGlvbk5hbWUiLCJyYSIsInNhIiwiZGVwZW5kZW5jaWVzIiwidGEiLCJ1YSIsInZhIiwid2EiLCJjdXJyZW50VGFyZ2V0Iiwia2EiLCJ4YSIsImNvbmNhdCIsInlhIiwiemEiLCJBYSIsIl9kaXNwYXRjaExpc3RlbmVycyIsIl9kaXNwYXRjaEluc3RhbmNlcyIsImlzUHJvcGFnYXRpb25TdG9wcGVkIiwiaXNQZXJzaXN0ZW50IiwicmVsZWFzZSIsIkJhIiwiaW5qZWN0RXZlbnRQbHVnaW5PcmRlciIsImluamVjdEV2ZW50UGx1Z2luc0J5TmFtZSIsIkNhIiwic3RhdGVOb2RlIiwiZGlzYWJsZWQiLCJEYSIsIkVhIiwiTWF0aCIsInJhbmRvbSIsIkZhIiwiR2EiLCJIYSIsInBhcmVudE5vZGUiLCJ0YWciLCJJYSIsIkphIiwiS2EiLCJMYSIsInJldHVybiIsIk1hIiwiZGlzcGF0Y2hDb25maWciLCJOYSIsIl90YXJnZXRJbnN0IiwiT2EiLCJQYSIsIlFhIiwiUmEiLCJ3aW5kb3ciLCJkb2N1bWVudCIsIlNhIiwidG9Mb3dlckNhc2UiLCJUYSIsImFuaW1hdGlvbmVuZCIsImFuaW1hdGlvbml0ZXJhdGlvbiIsImFuaW1hdGlvbnN0YXJ0IiwidHJhbnNpdGlvbmVuZCIsIlVhIiwiVmEiLCJXYSIsInN0eWxlIiwiYW5pbWF0aW9uIiwidHJhbnNpdGlvbiIsIlhhIiwiWWEiLCJaYSIsIiRhIiwiYWIiLCJiYiIsImNiIiwiZGIiLCJlYiIsInRleHRDb250ZW50IiwiZmIiLCJnYiIsIm5hdGl2ZUV2ZW50IiwiSW50ZXJmYWNlIiwiaXNEZWZhdWx0UHJldmVudGVkIiwiZGVmYXVsdFByZXZlbnRlZCIsInJldHVyblZhbHVlIiwiaWIiLCJldmVudFBvb2wiLCJqYiIsImRlc3RydWN0b3IiLCJoYiIsImdldFBvb2xlZCIsInByZXZlbnREZWZhdWx0Iiwic3RvcFByb3BhZ2F0aW9uIiwiY2FuY2VsQnViYmxlIiwicGVyc2lzdCIsImV2ZW50UGhhc2UiLCJidWJibGVzIiwiY2FuY2VsYWJsZSIsInRpbWVTdGFtcCIsIkRhdGUiLCJub3ciLCJpc1RydXN0ZWQiLCJleHRlbmQiLCJrYiIsImxiIiwibWIiLCJuYiIsIm9iIiwiZG9jdW1lbnRNb2RlIiwicGIiLCJxYiIsInJiIiwic2IiLCJiZWZvcmVJbnB1dCIsImJ1YmJsZWQiLCJjYXB0dXJlZCIsImNvbXBvc2l0aW9uRW5kIiwiY29tcG9zaXRpb25TdGFydCIsImNvbXBvc2l0aW9uVXBkYXRlIiwidGIiLCJ1YiIsImtleUNvZGUiLCJ2YiIsImRldGFpbCIsIndiIiwiemIiLCJsb2NhbGUiLCJ3aGljaCIsInhiIiwiY3RybEtleSIsImFsdEtleSIsIm1ldGFLZXkiLCJjaGFyIiwieWIiLCJBYiIsIkJiIiwiQ2IiLCJEYiIsIkViIiwiRmIiLCJHYiIsIkhiIiwiSWIiLCJKYiIsIktiIiwiTGIiLCJjb2xvciIsImRhdGUiLCJkYXRldGltZSIsImRhdGV0aW1lLWxvY2FsIiwiZW1haWwiLCJtb250aCIsIm51bWJlciIsInBhc3N3b3JkIiwicmFuZ2UiLCJzZWFyY2giLCJ0ZWwiLCJ0ZXh0IiwidGltZSIsInVybCIsIndlZWsiLCJNYiIsIm5vZGVOYW1lIiwiTmIiLCJzcmNFbGVtZW50IiwiY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQiLCJub2RlVHlwZSIsIk9iIiwic2V0QXR0cmlidXRlIiwiUGIiLCJSYiIsIl92YWx1ZVRyYWNrZXIiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJzZXQiLCJjb25maWd1cmFibGUiLCJnZXRWYWx1ZSIsInNldFZhbHVlIiwic3RvcFRyYWNraW5nIiwiUWIiLCJTYiIsImNoZWNrZWQiLCJUYiIsIlViIiwiVmIiLCJXYiIsIlhiIiwiWWIiLCJaYiIsIiRiIiwiYWMiLCJiYyIsImNjIiwiZGMiLCJlYyIsImZjIiwiZ2MiLCJoYyIsImljIiwiZGlzcGxheU5hbWUiLCJqYyIsIl9kZWJ1Z093bmVyIiwiX2RlYnVnU291cmNlIiwiZmlsZU5hbWUiLCJsaW5lTnVtYmVyIiwia2MiLCJsYyIsIm1jIiwibmMiLCJhY2NlcHRzQm9vbGVhbnMiLCJhdHRyaWJ1dGVOYW1lIiwiYXR0cmlidXRlTmFtZXNwYWNlIiwibXVzdFVzZVByb3BlcnR5IiwicHJvcGVydHlOYW1lIiwicmMiLCJzYyIsInRjIiwicGMiLCJpc05hTiIsInFjIiwib2MiLCJyZW1vdmVBdHRyaWJ1dGUiLCJzZXRBdHRyaWJ1dGVOUyIsInVjIiwidmMiLCJkZWZhdWx0Q2hlY2tlZCIsImRlZmF1bHRWYWx1ZSIsIl93cmFwcGVyU3RhdGUiLCJpbml0aWFsQ2hlY2tlZCIsIndjIiwiaW5pdGlhbFZhbHVlIiwiY29udHJvbGxlZCIsInhjIiwieWMiLCJ6YyIsIkFjIiwib3duZXJEb2N1bWVudCIsImFjdGl2ZUVsZW1lbnQiLCJCYyIsImNoYW5nZSIsIkNjIiwiRGMiLCJFYyIsIkZjIiwiR2MiLCJIYyIsIkljIiwiSmMiLCJkZXRhY2hFdmVudCIsIktjIiwiTGMiLCJhdHRhY2hFdmVudCIsIk1jIiwiTmMiLCJPYyIsIlBjIiwiX2lzSW5wdXRFdmVudFN1cHBvcnRlZCIsIlFjIiwidmlldyIsIlJjIiwiQWx0IiwiQ29udHJvbCIsIk1ldGEiLCJTaGlmdCIsIlNjIiwiZ2V0TW9kaWZpZXJTdGF0ZSIsIlRjIiwiVWMiLCJWYyIsIldjIiwiWGMiLCJZYyIsInNjcmVlblgiLCJzY3JlZW5ZIiwiY2xpZW50WCIsImNsaWVudFkiLCJwYWdlWCIsInBhZ2VZIiwic2hpZnRLZXkiLCJidXR0b24iLCJidXR0b25zIiwicmVsYXRlZFRhcmdldCIsImZyb21FbGVtZW50IiwidG9FbGVtZW50IiwibW92ZW1lbnRYIiwibW92ZW1lbnRZIiwiWmMiLCJwb2ludGVySWQiLCJ3aWR0aCIsImhlaWdodCIsInByZXNzdXJlIiwidGFuZ2VudGlhbFByZXNzdXJlIiwidGlsdFgiLCJ0aWx0WSIsInR3aXN0IiwicG9pbnRlclR5cGUiLCJpc1ByaW1hcnkiLCIkYyIsIm1vdXNlRW50ZXIiLCJtb3VzZUxlYXZlIiwicG9pbnRlckVudGVyIiwicG9pbnRlckxlYXZlIiwiYWQiLCJkZWZhdWx0VmlldyIsInBhcmVudFdpbmRvdyIsImFsdGVybmF0ZSIsImJkIiwiY2QiLCJkZCIsImVkIiwiZWZmZWN0VGFnIiwiZmQiLCJoZCIsImNoaWxkIiwic2libGluZyIsImdkIiwiaWQiLCJhbmltYXRpb25OYW1lIiwiZWxhcHNlZFRpbWUiLCJwc2V1ZG9FbGVtZW50IiwiamQiLCJjbGlwYm9hcmREYXRhIiwia2QiLCJsZCIsImNoYXJDb2RlIiwibWQiLCJFc2MiLCJTcGFjZWJhciIsIkxlZnQiLCJVcCIsIlJpZ2h0IiwiRG93biIsIkRlbCIsIldpbiIsIk1lbnUiLCJBcHBzIiwiU2Nyb2xsIiwiTW96UHJpbnRhYmxlS2V5IiwibmQiLCI4IiwiOSIsIjEyIiwiMTMiLCIxNiIsIjE3IiwiMTgiLCIxOSIsIjIwIiwiMjciLCIzMiIsIjMzIiwiMzQiLCIzNSIsIjM2IiwiMzciLCIzOCIsIjM5IiwiNDAiLCI0NSIsIjQ2IiwiMTEyIiwiMTEzIiwiMTE0IiwiMTE1IiwiMTE2IiwiMTE3IiwiMTE4IiwiMTE5IiwiMTIwIiwiMTIxIiwiMTIyIiwiMTIzIiwiMTQ0IiwiMTQ1IiwiMjI0Iiwib2QiLCJsb2NhdGlvbiIsInBkIiwiZGF0YVRyYW5zZmVyIiwicWQiLCJ0b3VjaGVzIiwidGFyZ2V0VG91Y2hlcyIsImNoYW5nZWRUb3VjaGVzIiwicmQiLCJzZCIsImRlbHRhWCIsIndoZWVsRGVsdGFYIiwiZGVsdGFZIiwid2hlZWxEZWx0YVkiLCJ3aGVlbERlbHRhIiwiZGVsdGFaIiwiZGVsdGFNb2RlIiwidGQiLCJ1ZCIsInZkIiwid2QiLCJpc0ludGVyYWN0aXZlIiwieGQiLCJpc0ludGVyYWN0aXZlVG9wTGV2ZWxFdmVudFR5cGUiLCJ5ZCIsInpkIiwiQWQiLCJ0YXJnZXRJbnN0IiwiYW5jZXN0b3JzIiwiY29udGFpbmVySW5mbyIsInRvcExldmVsVHlwZSIsIkJkIiwiQ2QiLCJEZCIsImFkZEV2ZW50TGlzdGVuZXIiLCJFZCIsIkZkIiwiR2QiLCJIZCIsIklkIiwiSmQiLCJib2R5IiwiS2QiLCJmaXJzdENoaWxkIiwiTGQiLCJub2RlIiwibmV4dFNpYmxpbmciLCJOZCIsIkhUTUxJRnJhbWVFbGVtZW50IiwiY29udGVudFdpbmRvdyIsImhyZWYiLCJPZCIsImNvbnRlbnRFZGl0YWJsZSIsIlFkIiwiZm9jdXNlZEVsZW0iLCJzZWxlY3Rpb25SYW5nZSIsIk1kIiwiY29udGFpbnMiLCJjb21wYXJlRG9jdW1lbnRQb3NpdGlvbiIsImRvY3VtZW50RWxlbWVudCIsInN0YXJ0Iiwic2VsZWN0aW9uU3RhcnQiLCJzZWxlY3Rpb25FbmQiLCJtaW4iLCJnZXRTZWxlY3Rpb24iLCJyYW5nZUNvdW50IiwiYW5jaG9yTm9kZSIsImFuY2hvck9mZnNldCIsImZvY3VzTm9kZSIsImZvY3VzT2Zmc2V0IiwiY3JlYXRlUmFuZ2UiLCJzZXRTdGFydCIsInJlbW92ZUFsbFJhbmdlcyIsImFkZFJhbmdlIiwic2V0RW5kIiwiZWxlbWVudCIsImxlZnQiLCJzY3JvbGxMZWZ0IiwidG9wIiwic2Nyb2xsVG9wIiwiZm9jdXMiLCJSZCIsIlNkIiwic2VsZWN0IiwiVGQiLCJVZCIsIlZkIiwiV2QiLCJYZCIsIllkIiwib25TZWxlY3QiLCIkZCIsIlpkIiwiYWUiLCJzZWxlY3RlZCIsImRlZmF1bHRTZWxlY3RlZCIsImJlIiwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwiLCJjZSIsImRlIiwiZWUiLCJTaW1wbGVFdmVudFBsdWdpbiIsIkVudGVyTGVhdmVFdmVudFBsdWdpbiIsIkNoYW5nZUV2ZW50UGx1Z2luIiwiU2VsZWN0RXZlbnRQbHVnaW4iLCJCZWZvcmVJbnB1dEV2ZW50UGx1Z2luIiwiZmUiLCJodG1sIiwibWF0aG1sIiwic3ZnIiwiZ2UiLCJoZSIsImllIiwiamUiLCJuYW1lc3BhY2VVUkkiLCJpbm5lckhUTUwiLCJyZW1vdmVDaGlsZCIsImFwcGVuZENoaWxkIiwiTVNBcHAiLCJleGVjVW5zYWZlTG9jYWxGdW5jdGlvbiIsImtlIiwibGFzdENoaWxkIiwibm9kZVZhbHVlIiwibGUiLCJhbmltYXRpb25JdGVyYXRpb25Db3VudCIsImJvcmRlckltYWdlT3V0c2V0IiwiYm9yZGVySW1hZ2VTbGljZSIsImJvcmRlckltYWdlV2lkdGgiLCJib3hGbGV4IiwiYm94RmxleEdyb3VwIiwiYm94T3JkaW5hbEdyb3VwIiwiY29sdW1uQ291bnQiLCJjb2x1bW5zIiwiZmxleCIsImZsZXhHcm93IiwiZmxleFBvc2l0aXZlIiwiZmxleFNocmluayIsImZsZXhOZWdhdGl2ZSIsImZsZXhPcmRlciIsImdyaWRBcmVhIiwiZ3JpZFJvdyIsImdyaWRSb3dFbmQiLCJncmlkUm93U3BhbiIsImdyaWRSb3dTdGFydCIsImdyaWRDb2x1bW4iLCJncmlkQ29sdW1uRW5kIiwiZ3JpZENvbHVtblNwYW4iLCJncmlkQ29sdW1uU3RhcnQiLCJmb250V2VpZ2h0IiwibGluZUNsYW1wIiwibGluZUhlaWdodCIsIm9wYWNpdHkiLCJvcmRlciIsIm9ycGhhbnMiLCJ0YWJTaXplIiwid2lkb3dzIiwiekluZGV4Iiwiem9vbSIsImZpbGxPcGFjaXR5IiwiZmxvb2RPcGFjaXR5Iiwic3RvcE9wYWNpdHkiLCJzdHJva2VEYXNoYXJyYXkiLCJzdHJva2VEYXNob2Zmc2V0Iiwic3Ryb2tlTWl0ZXJsaW1pdCIsInN0cm9rZU9wYWNpdHkiLCJzdHJva2VXaWR0aCIsIm1lIiwibmUiLCJ0cmltIiwib2UiLCJzZXRQcm9wZXJ0eSIsImNoYXJBdCIsInN1YnN0cmluZyIsInBlIiwibWVudWl0ZW0iLCJhcmVhIiwiYmFzZSIsImJyIiwiY29sIiwiZW1iZWQiLCJociIsImltZyIsImlucHV0Iiwia2V5Z2VuIiwibGluayIsIm1ldGEiLCJwYXJhbSIsInRyYWNrIiwid2JyIiwicWUiLCJpcyIsInNlIiwiYmx1ciIsInRlIiwidWUiLCJ2ZSIsIndlIiwiYXV0b0ZvY3VzIiwieGUiLCJfX2h0bWwiLCJ5ZSIsInNldFRpbWVvdXQiLCJ6ZSIsImNsZWFyVGltZW91dCIsIkFlIiwidW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjayIsIkJlIiwidW5zdGFibGVfY2FuY2VsQ2FsbGJhY2siLCJEZSIsIkVlIiwiU2V0IiwiRmUiLCJHZSIsIkhlIiwiSWUiLCJKZSIsImNvbnRleHRUeXBlcyIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQiLCJfX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dCIsImNoaWxkQ29udGV4dFR5cGVzIiwiS2UiLCJMZSIsIk1lIiwiTmUiLCJnZXRDaGlsZENvbnRleHQiLCJPZSIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0IiwiUGUiLCJRZSIsIlJlIiwiU2UiLCJVZSIsImVsZW1lbnRUeXBlIiwicGVuZGluZ1Byb3BzIiwiY29udGV4dERlcGVuZGVuY2llcyIsIm1lbW9pemVkU3RhdGUiLCJ1cGRhdGVRdWV1ZSIsIm1lbW9pemVkUHJvcHMiLCJsYXN0RWZmZWN0IiwiZmlyc3RFZmZlY3QiLCJuZXh0RWZmZWN0IiwiY2hpbGRFeHBpcmF0aW9uVGltZSIsImV4cGlyYXRpb25UaW1lIiwiVmUiLCJYZSIsIlllIiwiWmUiLCIkZSIsImFmIiwiYmYiLCJwZW5kaW5nQ2hpbGRyZW4iLCJpbXBsZW1lbnRhdGlvbiIsImNmIiwiZGlkRXJyb3IiLCJlYXJsaWVzdFBlbmRpbmdUaW1lIiwibGF0ZXN0UGVuZGluZ1RpbWUiLCJkZiIsImZmIiwibGF0ZXN0UGluZ2VkVGltZSIsImVhcmxpZXN0U3VzcGVuZGVkVGltZSIsImxhdGVzdFN1c3BlbmRlZFRpbWUiLCJnZiIsIm5leHRFeHBpcmF0aW9uVGltZVRvV29ya09uIiwiamYiLCJrZiIsImJhc2VTdGF0ZSIsInRmIiwiX3JlYWN0SW50ZXJuYWxGaWJlciIsImxmIiwibmYiLCJtZiIsInBheWxvYWQiLCJjYWxsYmFjayIsIm9mIiwicGYiLCJxZiIsInJmIiwic2YiLCJ1ZiIsInNob3VsZENvbXBvbmVudFVwZGF0ZSIsInZmIiwiY29udGV4dFR5cGUiLCJzdGF0ZSIsIndmIiwiY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyIsIlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzIiwieGYiLCJ5ZiIsImdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyIsImdldFNuYXBzaG90QmVmb3JlVXBkYXRlIiwiVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCIsImNvbXBvbmVudFdpbGxNb3VudCIsImNvbXBvbmVudERpZE1vdW50IiwiemYiLCJBZiIsIl9zdHJpbmdSZWYiLCJCZiIsIkNmIiwiTWFwIiwiZGVsZXRlIiwiRGYiLCJFZiIsIkZmIiwiR2YiLCJIZiIsIklmIiwiSmYiLCJ0YWdOYW1lIiwiS2YiLCJMZiIsIk1mIiwiTmYiLCJPZiIsIlBmIiwiUWYiLCJSZiIsIlNmIiwiVGYiLCJVZiIsIlZmIiwiV2YiLCJYZiIsIllmIiwiWmYiLCIkZiIsImFnIiwiYmciLCJjZyIsImRnIiwiZWciLCJmZyIsImdnIiwiaGciLCJpZyIsImpnIiwia2ciLCJsZyIsIm1nIiwicXVldWUiLCJiYXNlVXBkYXRlIiwibmciLCJvZyIsInBnIiwibGFzdFJlbmRlcmVkUmVkdWNlciIsImRpc3BhdGNoIiwiYWN0aW9uIiwicWciLCJsYXN0IiwibGFzdFJlbmRlcmVkU3RhdGUiLCJlYWdlclJlZHVjZXIiLCJlYWdlclN0YXRlIiwicmciLCJkZXN0cm95IiwiZGVwcyIsInNnIiwidGciLCJ1ZyIsInZnIiwid2ciLCJyZWFkQ29udGV4dCIsInhnIiwieWciLCJ6ZyIsIkFnIiwiQmciLCJDZyIsIkRnIiwiRWciLCJGZyIsIkdnIiwiSGciLCJJZyIsIkpnIiwiS2ciLCJMZyIsIk1nIiwiTmciLCJPZyIsIlBnIiwiVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUiLCJjb21wb25lbnRXaWxsVXBkYXRlIiwiY29tcG9uZW50RGlkVXBkYXRlIiwiUWciLCJnZXREZXJpdmVkU3RhdGVGcm9tRXJyb3IiLCJSZyIsInBlbmRpbmdDb250ZXh0IiwiU2ciLCJ0aW1lZE91dEF0IiwiZmFsbGJhY2siLCJUZyIsIlVnIiwidGhlbiIsImhmIiwiV2UiLCJoeWRyYXRlIiwiaGlkZGVuIiwiZmlyc3QiLCJvYnNlcnZlZEJpdHMiLCJ1bnN0YWJsZV9vYnNlcnZlZEJpdHMiLCJWZyIsIldnIiwiWGciLCJZZyIsIlpnIiwiJGciLCJhaCIsImJoIiwiZmlyc3RVcGRhdGUiLCJsYXN0VXBkYXRlIiwiZmlyc3RDYXB0dXJlZFVwZGF0ZSIsImxhc3RDYXB0dXJlZFVwZGF0ZSIsImZpcnN0Q2FwdHVyZWRFZmZlY3QiLCJsYXN0Q2FwdHVyZWRFZmZlY3QiLCJjaCIsImRoIiwiZWgiLCJmaCIsImdoIiwiaGgiLCJpaCIsImpoIiwic3RhY2siLCJraCIsImxoIiwibWgiLCJuaCIsIm9oIiwib25DbGljayIsIm9uY2xpY2siLCJwaCIsIldlYWtTZXQiLCJxaCIsInJoIiwic2giLCJ0aCIsInZoIiwiY29tcG9uZW50V2lsbFVubW91bnQiLCJ3aCIsInhoIiwieWgiLCJpbnNlcnRCZWZvcmUiLCJfcmVhY3RSb290Q29udGFpbmVyIiwiemgiLCJ3YXNNdWx0aXBsZSIsIm11bHRpcGxlIiwiQ2UiLCJkaXNwbGF5IiwidWgiLCJoaSIsIlhoIiwiaGFzIiwiYWRkIiwiQmgiLCJXZWFrTWFwIiwiQ2giLCJEaCIsIkVoIiwiY29tcG9uZW50RGlkQ2F0Y2giLCJGaCIsImNvbXBvbmVudFN0YWNrIiwiR2giLCJIaCIsIkloIiwiSmgiLCJLaCIsIkxoIiwiTWgiLCJOaCIsIk9oIiwiUGgiLCJRaCIsIlJoIiwiU2giLCJUaCIsIlVoIiwiX19yZWFjdEludGVybmFsU25hcHNob3RCZWZvcmVVcGRhdGUiLCJWaCIsIlpoIiwicGVuZGluZ0NvbW1pdEV4cGlyYXRpb25UaW1lIiwiZWYiLCJQZCIsIlloIiwidW5zdGFibGVfcnVuV2l0aFByaW9yaXR5IiwidW5zdGFibGVfTm9ybWFsUHJpb3JpdHkiLCJmaW5pc2hlZFdvcmsiLCIkaCIsImFpIiwic2l6ZSIsImNyZWF0ZUVsZW1lbnROUyIsImNyZWF0ZVRleHROb2RlIiwiYmkiLCJjaSIsImRpIiwibWF4RHVyYXRpb24iLCJwaW5nQ2FjaGUiLCJlaSIsImZpIiwidW5zdGFibGVfZ2V0Q3VycmVudFByaW9yaXR5TGV2ZWwiLCJ1bnN0YWJsZV9JbW1lZGlhdGVQcmlvcml0eSIsInVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5IiwidW5zdGFibGVfTG93UHJpb3JpdHkiLCJ1bnN0YWJsZV9JZGxlUHJpb3JpdHkiLCJnaSIsImlpIiwiamkiLCJraSIsImxpIiwibWkiLCJuaSIsIm9pIiwicGkiLCJxaSIsInJpIiwic2kiLCJ0aSIsInVuc3RhYmxlX25vdyIsInVpIiwidmkiLCJ3aSIsInhpIiwieWkiLCJ6aSIsInRpbWVvdXQiLCJ0aW1lb3V0SGFuZGxlIiwiQmkiLCJDaSIsIm5leHRTY2hlZHVsZWRSb290IiwiRGkiLCJFaSIsInVuc3RhYmxlX3Nob3VsZFlpZWxkIiwiX29uQ29tcGxldGUiLCJGaSIsImZpcnN0QmF0Y2giLCJfZXhwaXJhdGlvblRpbWUiLCJfZGVmZXIiLCJHaSIsIkhpIiwiSWkiLCJKaSIsIktpIiwiTGkiLCJOaSIsIl9yb290IiwiX2NhbGxiYWNrcyIsIl9uZXh0IiwiX2hhc0NoaWxkcmVuIiwiX2RpZENvbXBsZXRlIiwiX2NoaWxkcmVuIiwiT2kiLCJfZGlkQ29tbWl0IiwiX29uQ29tbWl0IiwiUGkiLCJfaW50ZXJuYWxSb290IiwiUWkiLCJTaSIsImxlZ2FjeV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lciIsImhhc0F0dHJpYnV0ZSIsIlJpIiwiVGkiLCJNaSIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJmb3JtIiwiY29tbWl0IiwidW5tb3VudCIsImNyZWF0ZUJhdGNoIiwiVmkiLCJjcmVhdGVQb3J0YWwiLCJmaW5kRE9NTm9kZSIsInVuc3RhYmxlX3JlbmRlclN1YnRyZWVJbnRvQ29udGFpbmVyIiwidW5tb3VudENvbXBvbmVudEF0Tm9kZSIsInVuc3RhYmxlX2NyZWF0ZVBvcnRhbCIsInVuc3RhYmxlX2JhdGNoZWRVcGRhdGVzIiwidW5zdGFibGVfaW50ZXJhY3RpdmVVcGRhdGVzIiwiZmx1c2hTeW5jIiwidW5zdGFibGVfY3JlYXRlUm9vdCIsInVuc3RhYmxlX2ZsdXNoQ29udHJvbGxlZCIsIkV2ZW50cyIsImZpbmRGaWJlckJ5SG9zdEluc3RhbmNlIiwiaXNEaXNhYmxlZCIsInN1cHBvcnRzRmliZXIiLCJpbmplY3QiLCJvbkNvbW1pdEZpYmVyUm9vdCIsIm9uQ29tbWl0RmliZXJVbm1vdW50IiwiVGUiLCJvdmVycmlkZVByb3BzIiwiY3VycmVudERpc3BhdGNoZXJSZWYiLCJmaW5kSG9zdEluc3RhbmNlQnlGaWJlciIsImJ1bmRsZVR5cGUiLCJyZW5kZXJlclBhY2thZ2VOYW1lIiwiV2kiLCJYaSIsImdsb2JhbCIsInByZXZpb3VzIiwicHJpb3JpdHlMZXZlbCIsInJlcXVlc3RBbmltYXRpb25GcmFtZSIsImNhbmNlbEFuaW1hdGlvbkZyYW1lIiwicGVyZm9ybWFuY2UiLCJfc2NoZWRNb2NrIiwiTWVzc2FnZUNoYW5uZWwiLCJwb3J0MiIsInBvcnQxIiwib25tZXNzYWdlIiwicG9zdE1lc3NhZ2UiLCJ1bnN0YWJsZV9uZXh0IiwidW5zdGFibGVfd3JhcENhbGxiYWNrIiwidW5zdGFibGVfY29udGludWVFeGVjdXRpb24iLCJ1bnN0YWJsZV9wYXVzZUV4ZWN1dGlvbiIsInVuc3RhYmxlX2dldEZpcnN0Q2FsbGJhY2tOb2RlIiwiRnVuY3Rpb24iLCJjb250ZW50IiwiaG1yIiwidHJhbnNmb3JtIiwibG9jYWxzIiwidXNlU291cmNlTWFwIiwibGlzdCIsIml0ZW0iLCJjc3NNYXBwaW5nIiwiYnRvYSIsInNvdXJjZU1hcHBpbmciLCJzb3VyY2VNYXAiLCJiYXNlNjQiLCJ1bmVzY2FwZSIsInNvdXJjZVVSTHMiLCJzb3VyY2VzIiwic291cmNlUm9vdCIsImNzc1dpdGhNYXBwaW5nVG9TdHJpbmciLCJtZWRpYVF1ZXJ5IiwiYWxyZWFkeUltcG9ydGVkTW9kdWxlcyIsIl9pIiwiZm4iLCJzdHlsZXNJbkRvbSIsImlzT2xkSUUiLCJhbGwiLCJhdG9iIiwiZ2V0RWxlbWVudCIsInNlbGVjdG9yIiwic3R5bGVUYXJnZXQiLCJxdWVyeVNlbGVjdG9yIiwiY29udGVudERvY3VtZW50IiwiaGVhZCIsInNpbmdsZXRvbiIsInNpbmdsZXRvbkNvdW50ZXIiLCJzdHlsZXNJbnNlcnRlZEF0VG9wIiwiZml4VXJscyIsImFkZFN0eWxlc1RvRG9tIiwic3R5bGVzIiwiZG9tU3R5bGUiLCJhZGRTdHlsZSIsImxpc3RUb1N0eWxlcyIsIm5ld1N0eWxlcyIsInBhcnQiLCJjc3MiLCJtZWRpYSIsImluc2VydFN0eWxlRWxlbWVudCIsImluc2VydEludG8iLCJsYXN0U3R5bGVFbGVtZW50SW5zZXJ0ZWRBdFRvcCIsImluc2VydEF0IiwiYmVmb3JlIiwicmVtb3ZlU3R5bGVFbGVtZW50IiwiaWR4Iiwic3BsaWNlIiwiY3JlYXRlU3R5bGVFbGVtZW50IiwiYXR0cnMiLCJhZGRBdHRycyIsImVsIiwidXBkYXRlIiwicmVtb3ZlIiwic3R5bGVJbmRleCIsImFwcGx5VG9TaW5nbGV0b25UYWciLCJVUkwiLCJjcmVhdGVPYmplY3RVUkwiLCJyZXZva2VPYmplY3RVUkwiLCJCbG9iIiwicmVsIiwiY3JlYXRlTGlua0VsZW1lbnQiLCJhdXRvRml4VXJscyIsImNvbnZlcnRUb0Fic29sdXRlVXJscyIsImJsb2IiLCJvbGRTcmMiLCJzdHlsZVNoZWV0IiwiY3NzVGV4dCIsIm5ld09iaiIsIkRFQlVHIiwibmV3TGlzdCIsIm1heVJlbW92ZSIsInRleHRTdG9yZSIsInJlcGxhY2VUZXh0IiwicmVwbGFjZW1lbnQiLCJmaWx0ZXIiLCJCb29sZWFuIiwiY3NzTm9kZSIsImNoaWxkTm9kZXMiLCJiYXNlVXJsIiwicHJvdG9jb2wiLCJob3N0IiwiY3VycmVudERpciIsInBhdGhuYW1lIiwiZnVsbE1hdGNoIiwib3JpZ1VybCIsIm5ld1VybCIsInVucXVvdGVkT3JpZ1VybCIsIiQxIiwiUmVhY3RQcm9wVHlwZXNTZWNyZXQiLCJlbXB0eUZ1bmN0aW9uIiwiZW1wdHlGdW5jdGlvbldpdGhSZXNldCIsInJlc2V0V2FybmluZ0NhY2hlIiwic2hpbSIsInByb3BOYW1lIiwiY29tcG9uZW50TmFtZSIsInByb3BGdWxsTmFtZSIsInNlY3JldCIsImdldFNoaW0iLCJpc1JlcXVpcmVkIiwiUmVhY3RQcm9wVHlwZXMiLCJhcnJheSIsImJvb2wiLCJzdHJpbmciLCJzeW1ib2wiLCJhbnkiLCJhcnJheU9mIiwiaW5zdGFuY2VPZiIsIm9iamVjdE9mIiwib25lT2YiLCJvbmVPZlR5cGUiLCJzaGFwZSIsImV4YWN0IiwiY2hlY2tQcm9wVHlwZXMiLCJQcm9wVHlwZXMiLCJhcnIiLCJfZXh0ZW5kcyIsImlzQWJzb2x1dGUiLCJzcGxpY2VPbmUiLCJyZXNvbHZlX3BhdGhuYW1lIiwidG9QYXJ0cyIsImZyb21QYXJ0cyIsImlzVG9BYnMiLCJpc0Zyb21BYnMiLCJtdXN0RW5kQWJzIiwiaGFzVHJhaWxpbmdTbGFzaCIsInVwIiwidW5zaGlmdCIsImlzUHJvZHVjdGlvbiIsInRpbnlfaW52YXJpYW50X2VzbSIsIm1lc3NhZ2UiLCJhZGRMZWFkaW5nU2xhc2giLCJzdHJpcEJhc2VuYW1lIiwiaGFzQmFzZW5hbWUiLCJzdHJpcFRyYWlsaW5nU2xhc2giLCJjcmVhdGVQYXRoIiwiaGFzaCIsImNyZWF0ZUxvY2F0aW9uIiwiY3VycmVudExvY2F0aW9uIiwiaGFzaEluZGV4Iiwic2VhcmNoSW5kZXgiLCJwYXJzZVBhdGgiLCJkZWNvZGVVUkkiLCJVUklFcnJvciIsImNyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyIiwicHJvbXB0IiwibGlzdGVuZXJzIiwic2V0UHJvbXB0IiwibmV4dFByb21wdCIsImNvbmZpcm1UcmFuc2l0aW9uVG8iLCJnZXRVc2VyQ29uZmlybWF0aW9uIiwiYXBwZW5kTGlzdGVuZXIiLCJpc0FjdGl2ZSIsImxpc3RlbmVyIiwibm90aWZ5TGlzdGVuZXJzIiwiX2xlbiIsIl9rZXkiLCJjYW5Vc2VET00iLCJnZXRDb25maXJtYXRpb24iLCJjb25maXJtIiwiUG9wU3RhdGVFdmVudCIsIkhhc2hDaGFuZ2VFdmVudCIsImdldEhpc3RvcnlTdGF0ZSIsImhpc3RvcnkiLCJjcmVhdGVCcm93c2VySGlzdG9yeSIsImdsb2JhbEhpc3RvcnkiLCJjYW5Vc2VIaXN0b3J5IiwibmF2aWdhdG9yIiwidXNlckFnZW50IiwibmVlZHNIYXNoQ2hhbmdlTGlzdGVuZXIiLCJfcHJvcHMiLCJfcHJvcHMkZm9yY2VSZWZyZXNoIiwiZm9yY2VSZWZyZXNoIiwiX3Byb3BzJGdldFVzZXJDb25maXJtIiwiX3Byb3BzJGtleUxlbmd0aCIsImtleUxlbmd0aCIsImJhc2VuYW1lIiwiZ2V0RE9NTG9jYXRpb24iLCJoaXN0b3J5U3RhdGUiLCJfcmVmIiwiX3dpbmRvdyRsb2NhdGlvbiIsImNyZWF0ZUtleSIsInRyYW5zaXRpb25NYW5hZ2VyIiwibmV4dFN0YXRlIiwiaGFuZGxlUG9wU3RhdGUiLCJldmVudCIsImlzRXh0cmFuZW91c1BvcHN0YXRlRXZlbnQiLCJoYW5kbGVQb3AiLCJoYW5kbGVIYXNoQ2hhbmdlIiwiZm9yY2VOZXh0UG9wIiwib2siLCJmcm9tTG9jYXRpb24iLCJ0b0xvY2F0aW9uIiwidG9JbmRleCIsImFsbEtleXMiLCJmcm9tSW5kZXgiLCJkZWx0YSIsImdvIiwicmV2ZXJ0UG9wIiwiaW5pdGlhbExvY2F0aW9uIiwiY3JlYXRlSHJlZiIsImxpc3RlbmVyQ291bnQiLCJjaGVja0RPTUxpc3RlbmVycyIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJpc0Jsb2NrZWQiLCJwdXNoU3RhdGUiLCJwcmV2SW5kZXgiLCJuZXh0S2V5cyIsInJlcGxhY2VTdGF0ZSIsImdvQmFjayIsImdvRm9yd2FyZCIsImJsb2NrIiwidW5ibG9jayIsImxpc3RlbiIsInVubGlzdGVuIiwiUm91dGVyX2V4dGVuZHMiLCJfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiIsInNlbGYiLCJSZWZlcmVuY2VFcnJvciIsIlJvdXRlcl9Sb3V0ZXIiLCJfUmVhY3QkQ29tcG9uZW50IiwiUm91dGVyIiwiX3RlbXAiLCJfdGhpcyIsImluc3RhbmNlIiwiQ29uc3RydWN0b3IiLCJfY2xhc3NDYWxsQ2hlY2siLCJjb21wdXRlTWF0Y2giLCJzdWJDbGFzcyIsInN1cGVyQ2xhc3MiLCJ3cml0YWJsZSIsInNldFByb3RvdHlwZU9mIiwiX19wcm90b19fIiwiX2luaGVyaXRzIiwicm91dGVyIiwicGFyYW1zIiwiaXNFeGFjdCIsIl90aGlzMiIsImJyb3dzZXJfZGVmYXVsdCIsInJlYWN0X2RlZmF1bHQiLCJuZXh0UHJvcHMiLCJ3YXJuaW5nX2RlZmF1bHQiLCJwcm9wVHlwZXMiLCJwcm9wX3R5cGVzX2RlZmF1bHQiLCJyZWFjdF9yb3V0ZXJfZG9tX2VzX1JvdXRlciIsIkJyb3dzZXJSb3V0ZXJfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiIsIkJyb3dzZXJSb3V0ZXJfQnJvd3NlclJvdXRlciIsIkJyb3dzZXJSb3V0ZXIiLCJCcm93c2VyUm91dGVyX2NsYXNzQ2FsbENoZWNrIiwiQnJvd3NlclJvdXRlcl9pbmhlcml0cyIsImVzX0Jyb3dzZXJSb3V0ZXIiLCJwYXR0ZXJuQ2FjaGUiLCJjYWNoZUNvdW50IiwiZXNfbWF0Y2hQYXRoIiwicGFyZW50IiwiX29wdGlvbnMiLCJfb3B0aW9ucyRleGFjdCIsIl9vcHRpb25zJHN0cmljdCIsIl9vcHRpb25zJHNlbnNpdGl2ZSIsIl9jb21waWxlUGF0aCIsImNhY2hlS2V5IiwiY2FjaGUiLCJjb21waWxlZFBhdHRlcm4iLCJwYXRoX3RvX3JlZ2V4cF9kZWZhdWx0IiwibWF0Y2hQYXRoX2NvbXBpbGVQYXRoIiwidmFsdWVzIiwicmVkdWNlIiwiU3dpdGNoX1N3aXRjaCIsIlN3aXRjaCIsIlN3aXRjaF9jbGFzc0NhbGxDaGVjayIsIlN3aXRjaF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIiwiU3dpdGNoX2luaGVyaXRzIiwiX2VsZW1lbnQkcHJvcHMiLCJwYXRoUHJvcCIsImNvbXB1dGVkTWF0Y2giLCJyZWFjdF9yb3V0ZXJfZG9tX2VzX1N3aXRjaCIsIlJvdXRlX2V4dGVuZHMiLCJSb3V0ZV9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIiwiUm91dGVfaXNFbXB0eUNoaWxkcmVuIiwiUm91dGVfUm91dGUiLCJSb3V0ZSIsIlJvdXRlX2NsYXNzQ2FsbENoZWNrIiwiUm91dGVfaW5oZXJpdHMiLCJjb21wb25lbnQiLCJuZXh0Q29udGV4dCIsIl9jb250ZXh0JHJvdXRlciIsInN0YXRpY0NvbnRleHQiLCJyZWFjdF9yb3V0ZXJfZG9tX2VzX1JvdXRlIiwiVXNlciIsIlVzZXJfY2xhc3NDYWxsQ2hlY2siLCJfZ2V0UHJvdG90eXBlT2YiLCJ1c2VyIiwiZmV0Y2hVc2VycyIsIl9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQiLCJmZXRjaCIsInJlc3BvbnNlIiwianNvbiIsImNsYXNzTmFtZSIsIk1lbnVfY2xhc3NDYWxsQ2hlY2siLCJNZW51X3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4iLCJNZW51X2dldFByb3RvdHlwZU9mIiwiSG9tZSIsIlJlYWN0IiwiY29tcG9uZW50c19Vc2VyIiwiVXNlcnMiLCJnZXRFbGVtZW50QnlJZCJdLCJtYXBwaW5ncyI6ImFBQ0EsSUFBQUEsRUFBQSxHQUdBLFNBQUFDLEVBQUFDLEdBR0EsR0FBQUYsRUFBQUUsR0FDQSxP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LEVBQUE1N0MsRUFBQTJOLGNBQUM0dUMsRUFBRCxLQUNFWCxFQUFBNTdDLEVBQUEyTixjQUFDcXdDLEVBQUQsS0FDRXBDLEVBQUE1N0MsRUFBQTJOLGNBQUNpeEMsRUFBRCxDQUFPL0ssT0FBSyxFQUFDdHdDLEtBQUssSUFBSWk3QyxVQUFXa0IsS0FDakM5RCxFQUFBNTdDLEVBQUEyTixjQUFDaXhDLEVBQUQsQ0FBTy9LLE9BQUssRUFBQ3R3QyxLQUFLLFNBQVNpN0MsVUFBV3FCLE9BRzFDcnRDLFNBQVNzdEMsZUFBZSIsImZpbGUiOiJjbGllbnQubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiIFx0Ly8gVGhlIG1vZHVsZSBjYWNoZVxuIFx0dmFyIGluc3RhbGxlZE1vZHVsZXMgPSB7fTtcblxuIFx0Ly8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbiBcdGZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblxuIFx0XHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcbiBcdFx0aWYoaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0pIHtcbiBcdFx0XHRyZXR1cm4gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0uZXhwb3J0cztcbiBcdFx0fVxuIFx0XHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuIFx0XHR2YXIgbW9kdWxlID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0gPSB7XG4gXHRcdFx0aTogbW9kdWxlSWQsXG4gXHRcdFx0bDogZmFsc2UsXG4gXHRcdFx0ZXhwb3J0czoge31cbiBcdFx0fTtcblxuIFx0XHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cbiBcdFx0bW9kdWxlc1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cbiBcdFx0Ly8gRmxhZyB0aGUgbW9kdWxlIGFzIGxvYWRlZFxuIFx0XHRtb2R1bGUubCA9IHRydWU7XG5cbiBcdFx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcbiBcdFx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xuIFx0fVxuXG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBtb2R1bGVzO1xuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5jID0gaW5zdGFsbGVkTW9kdWxlcztcblxuIFx0Ly8gZGVmaW5lIGdldHRlciBmdW5jdGlvbiBmb3IgaGFybW9ueSBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSBmdW5jdGlvbihleHBvcnRzLCBuYW1lLCBnZXR0ZXIpIHtcbiBcdFx0aWYoIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBuYW1lKSkge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBuYW1lLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZ2V0dGVyIH0pO1xuIFx0XHR9XG4gXHR9O1xuXG4gXHQvLyBkZWZpbmUgX19lc01vZHVsZSBvbiBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIgPSBmdW5jdGlvbihleHBvcnRzKSB7XG4gXHRcdGlmKHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIFN5bWJvbC50b1N0cmluZ1RhZykge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuIFx0XHR9XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG4gXHR9O1xuXG4gXHQvLyBjcmVhdGUgYSBmYWtlIG5hbWVzcGFjZSBvYmplY3RcbiBcdC8vIG1vZGUgJiAxOiB2YWx1ZSBpcyBhIG1vZHVsZSBpZCwgcmVxdWlyZSBpdFxuIFx0Ly8gbW9kZSAmIDI6IG1lcmdlIGFsbCBwcm9wZXJ0aWVzIG9mIHZhbHVlIGludG8gdGhlIG5zXG4gXHQvLyBtb2RlICYgNDogcmV0dXJuIHZhbHVlIHdoZW4gYWxyZWFkeSBucyBvYmplY3RcbiBcdC8vIG1vZGUgJiA4fDE6IGJlaGF2ZSBsaWtlIHJlcXVpcmVcbiBcdF9fd2VicGFja19yZXF1aXJlX18udCA9IGZ1bmN0aW9uKHZhbHVlLCBtb2RlKSB7XG4gXHRcdGlmKG1vZGUgJiAxKSB2YWx1ZSA9IF9fd2VicGFja19yZXF1aXJlX18odmFsdWUpO1xuIFx0XHRpZihtb2RlICYgOCkgcmV0dXJuIHZhbHVlO1xuIFx0XHRpZigobW9kZSAmIDQpICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgJiYgdmFsdWUgJiYgdmFsdWUuX19lc01vZHVsZSkgcmV0dXJuIHZhbHVlO1xuIFx0XHR2YXIgbnMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIobnMpO1xuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobnMsICdkZWZhdWx0JywgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdmFsdWUgfSk7XG4gXHRcdGlmKG1vZGUgJiAyICYmIHR5cGVvZiB2YWx1ZSAhPSAnc3RyaW5nJykgZm9yKHZhciBrZXkgaW4gdmFsdWUpIF9fd2VicGFja19yZXF1aXJlX18uZChucywga2V5LCBmdW5jdGlvbihrZXkpIHsgcmV0dXJuIHZhbHVlW2tleV07IH0uYmluZChudWxsLCBrZXkpKTtcbiBcdFx0cmV0dXJuIG5zO1xuIFx0fTtcblxuIFx0Ly8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubiA9IGZ1bmN0aW9uKG1vZHVsZSkge1xuIFx0XHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cbiBcdFx0XHRmdW5jdGlvbiBnZXREZWZhdWx0KCkgeyByZXR1cm4gbW9kdWxlWydkZWZhdWx0J107IH0gOlxuIFx0XHRcdGZ1bmN0aW9uIGdldE1vZHVsZUV4cG9ydHMoKSB7IHJldHVybiBtb2R1bGU7IH07XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsICdhJywgZ2V0dGVyKTtcbiBcdFx0cmV0dXJuIGdldHRlcjtcbiBcdH07XG5cbiBcdC8vIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbFxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5vID0gZnVuY3Rpb24ob2JqZWN0LCBwcm9wZXJ0eSkgeyByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpOyB9O1xuXG4gXHQvLyBfX3dlYnBhY2tfcHVibGljX3BhdGhfX1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCJcIjtcblxuXG4gXHQvLyBMb2FkIGVudHJ5IG1vZHVsZSBhbmQgcmV0dXJuIGV4cG9ydHNcbiBcdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKF9fd2VicGFja19yZXF1aXJlX18ucyA9IDIwKTtcbiIsIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC5kZXZlbG9wbWVudC5qcycpO1xufVxuIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICB2YXIgUmVhY3RJcyA9IHJlcXVpcmUoJ3JlYWN0LWlzJyk7XG5cbiAgLy8gQnkgZXhwbGljaXRseSB1c2luZyBgcHJvcC10eXBlc2AgeW91IGFyZSBvcHRpbmcgaW50byBuZXcgZGV2ZWxvcG1lbnQgYmVoYXZpb3IuXG4gIC8vIGh0dHA6Ly9mYi5tZS9wcm9wLXR5cGVzLWluLXByb2RcbiAgdmFyIHRocm93T25EaXJlY3RBY2Nlc3MgPSB0cnVlO1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vZmFjdG9yeVdpdGhUeXBlQ2hlY2tlcnMnKShSZWFjdElzLmlzRWxlbWVudCwgdGhyb3dPbkRpcmVjdEFjY2Vzcyk7XG59IGVsc2Uge1xuICAvLyBCeSBleHBsaWNpdGx5IHVzaW5nIGBwcm9wLXR5cGVzYCB5b3UgYXJlIG9wdGluZyBpbnRvIG5ldyBwcm9kdWN0aW9uIGJlaGF2aW9yLlxuICAvLyBodHRwOi8vZmIubWUvcHJvcC10eXBlcy1pbi1wcm9kXG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9mYWN0b3J5V2l0aFRocm93aW5nU2hpbXMnKSgpO1xufVxuIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTQtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbi8qKlxuICogU2ltaWxhciB0byBpbnZhcmlhbnQgYnV0IG9ubHkgbG9ncyBhIHdhcm5pbmcgaWYgdGhlIGNvbmRpdGlvbiBpcyBub3QgbWV0LlxuICogVGhpcyBjYW4gYmUgdXNlZCB0byBsb2cgaXNzdWVzIGluIGRldmVsb3BtZW50IGVudmlyb25tZW50cyBpbiBjcml0aWNhbFxuICogcGF0aHMuIFJlbW92aW5nIHRoZSBsb2dnaW5nIGNvZGUgZm9yIHByb2R1Y3Rpb24gZW52aXJvbm1lbnRzIHdpbGwga2VlcCB0aGVcbiAqIHNhbWUgbG9naWMgYW5kIGZvbGxvdyB0aGUgc2FtZSBjb2RlIHBhdGhzLlxuICovXG5cbnZhciBfX0RFVl9fID0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJztcblxudmFyIHdhcm5pbmcgPSBmdW5jdGlvbigpIHt9O1xuXG5pZiAoX19ERVZfXykge1xuICB2YXIgcHJpbnRXYXJuaW5nID0gZnVuY3Rpb24gcHJpbnRXYXJuaW5nKGZvcm1hdCwgYXJncykge1xuICAgIHZhciBsZW4gPSBhcmd1bWVudHMubGVuZ3RoO1xuICAgIGFyZ3MgPSBuZXcgQXJyYXkobGVuID4gMSA/IGxlbiAtIDEgOiAwKTtcbiAgICBmb3IgKHZhciBrZXkgPSAxOyBrZXkgPCBsZW47IGtleSsrKSB7XG4gICAgICBhcmdzW2tleSAtIDFdID0gYXJndW1lbnRzW2tleV07XG4gICAgfVxuICAgIHZhciBhcmdJbmRleCA9IDA7XG4gICAgdmFyIG1lc3NhZ2UgPSAnV2FybmluZzogJyArXG4gICAgICBmb3JtYXQucmVwbGFjZSgvJXMvZywgZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBhcmdzW2FyZ0luZGV4KytdO1xuICAgICAgfSk7XG4gICAgaWYgKHR5cGVvZiBjb25zb2xlICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgY29uc29sZS5lcnJvcihtZXNzYWdlKTtcbiAgICB9XG4gICAgdHJ5IHtcbiAgICAgIC8vIC0tLSBXZWxjb21lIHRvIGRlYnVnZ2luZyBSZWFjdCAtLS1cbiAgICAgIC8vIFRoaXMgZXJyb3Igd2FzIHRocm93biBhcyBhIGNvbnZlbmllbmNlIHNvIHRoYXQgeW91IGNhbiB1c2UgdGhpcyBzdGFja1xuICAgICAgLy8gdG8gZmluZCB0aGUgY2FsbHNpdGUgdGhhdCBjYXVzZWQgdGhpcyB3YXJuaW5nIHRvIGZpcmUuXG4gICAgICB0aHJvdyBuZXcgRXJyb3IobWVzc2FnZSk7XG4gICAgfSBjYXRjaCAoeCkge31cbiAgfVxuXG4gIHdhcm5pbmcgPSBmdW5jdGlvbihjb25kaXRpb24sIGZvcm1hdCwgYXJncykge1xuICAgIHZhciBsZW4gPSBhcmd1bWVudHMubGVuZ3RoO1xuICAgIGFyZ3MgPSBuZXcgQXJyYXkobGVuID4gMiA/IGxlbiAtIDIgOiAwKTtcbiAgICBmb3IgKHZhciBrZXkgPSAyOyBrZXkgPCBsZW47IGtleSsrKSB7XG4gICAgICBhcmdzW2tleSAtIDJdID0gYXJndW1lbnRzW2tleV07XG4gICAgfVxuICAgIGlmIChmb3JtYXQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICAgICdgd2FybmluZyhjb25kaXRpb24sIGZvcm1hdCwgLi4uYXJncylgIHJlcXVpcmVzIGEgd2FybmluZyAnICtcbiAgICAgICAgICAnbWVzc2FnZSBhcmd1bWVudCdcbiAgICAgICk7XG4gICAgfVxuICAgIGlmICghY29uZGl0aW9uKSB7XG4gICAgICBwcmludFdhcm5pbmcuYXBwbHkobnVsbCwgW2Zvcm1hdF0uY29uY2F0KGFyZ3MpKTtcbiAgICB9XG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gd2FybmluZztcbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIFVzZSBpbnZhcmlhbnQoKSB0byBhc3NlcnQgc3RhdGUgd2hpY2ggeW91ciBwcm9ncmFtIGFzc3VtZXMgdG8gYmUgdHJ1ZS5cbiAqXG4gKiBQcm92aWRlIHNwcmludGYtc3R5bGUgZm9ybWF0IChvbmx5ICVzIGlzIHN1cHBvcnRlZCkgYW5kIGFyZ3VtZW50c1xuICogdG8gcHJvdmlkZSBpbmZvcm1hdGlvbiBhYm91dCB3aGF0IGJyb2tlIGFuZCB3aGF0IHlvdSB3ZXJlXG4gKiBleHBlY3RpbmcuXG4gKlxuICogVGhlIGludmFyaWFudCBtZXNzYWdlIHdpbGwgYmUgc3RyaXBwZWQgaW4gcHJvZHVjdGlvbiwgYnV0IHRoZSBpbnZhcmlhbnRcbiAqIHdpbGwgcmVtYWluIHRvIGVuc3VyZSBsb2dpYyBkb2VzIG5vdCBkaWZmZXIgaW4gcHJvZHVjdGlvbi5cbiAqL1xuXG52YXIgaW52YXJpYW50ID0gZnVuY3Rpb24oY29uZGl0aW9uLCBmb3JtYXQsIGEsIGIsIGMsIGQsIGUsIGYpIHtcbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICBpZiAoZm9ybWF0ID09PSB1bmRlZmluZWQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignaW52YXJpYW50IHJlcXVpcmVzIGFuIGVycm9yIG1lc3NhZ2UgYXJndW1lbnQnKTtcbiAgICB9XG4gIH1cblxuICBpZiAoIWNvbmRpdGlvbikge1xuICAgIHZhciBlcnJvcjtcbiAgICBpZiAoZm9ybWF0ID09PSB1bmRlZmluZWQpIHtcbiAgICAgIGVycm9yID0gbmV3IEVycm9yKFxuICAgICAgICAnTWluaWZpZWQgZXhjZXB0aW9uIG9jY3VycmVkOyB1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgJyArXG4gICAgICAgICdmb3IgdGhlIGZ1bGwgZXJyb3IgbWVzc2FnZSBhbmQgYWRkaXRpb25hbCBoZWxwZnVsIHdhcm5pbmdzLidcbiAgICAgICk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBhcmdzID0gW2EsIGIsIGMsIGQsIGUsIGZdO1xuICAgICAgdmFyIGFyZ0luZGV4ID0gMDtcbiAgICAgIGVycm9yID0gbmV3IEVycm9yKFxuICAgICAgICBmb3JtYXQucmVwbGFjZSgvJXMvZywgZnVuY3Rpb24oKSB7IHJldHVybiBhcmdzW2FyZ0luZGV4KytdOyB9KVxuICAgICAgKTtcbiAgICAgIGVycm9yLm5hbWUgPSAnSW52YXJpYW50IFZpb2xhdGlvbic7XG4gICAgfVxuXG4gICAgZXJyb3IuZnJhbWVzVG9Qb3AgPSAxOyAvLyB3ZSBkb24ndCBjYXJlIGFib3V0IGludmFyaWFudCdzIG93biBmcmFtZVxuICAgIHRocm93IGVycm9yO1xuICB9XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGludmFyaWFudDtcbiIsIid1c2Ugc3RyaWN0JztcblxuZnVuY3Rpb24gY2hlY2tEQ0UoKSB7XG4gIC8qIGdsb2JhbCBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18gKi9cbiAgaWYgKFxuICAgIHR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18gPT09ICd1bmRlZmluZWQnIHx8XG4gICAgdHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXy5jaGVja0RDRSAhPT0gJ2Z1bmN0aW9uJ1xuICApIHtcbiAgICByZXR1cm47XG4gIH1cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAvLyBUaGlzIGJyYW5jaCBpcyB1bnJlYWNoYWJsZSBiZWNhdXNlIHRoaXMgZnVuY3Rpb24gaXMgb25seSBjYWxsZWRcbiAgICAvLyBpbiBwcm9kdWN0aW9uLCBidXQgdGhlIGNvbmRpdGlvbiBpcyB0cnVlIG9ubHkgaW4gZGV2ZWxvcG1lbnQuXG4gICAgLy8gVGhlcmVmb3JlIGlmIHRoZSBicmFuY2ggaXMgc3RpbGwgaGVyZSwgZGVhZCBjb2RlIGVsaW1pbmF0aW9uIHdhc24ndFxuICAgIC8vIHByb3Blcmx5IGFwcGxpZWQuXG4gICAgLy8gRG9uJ3QgY2hhbmdlIHRoZSBtZXNzYWdlLiBSZWFjdCBEZXZUb29scyByZWxpZXMgb24gaXQuIEFsc28gbWFrZSBzdXJlXG4gICAgLy8gdGhpcyBtZXNzYWdlIGRvZXNuJ3Qgb2NjdXIgZWxzZXdoZXJlIGluIHRoaXMgZnVuY3Rpb24sIG9yIGl0IHdpbGwgY2F1c2VcbiAgICAvLyBhIGZhbHNlIHBvc2l0aXZlLlxuICAgIHRocm93IG5ldyBFcnJvcignXl9eJyk7XG4gIH1cbiAgdHJ5IHtcbiAgICAvLyBWZXJpZnkgdGhhdCB0aGUgY29kZSBhYm92ZSBoYXMgYmVlbiBkZWFkIGNvZGUgZWxpbWluYXRlZCAoRENFJ2QpLlxuICAgIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXy5jaGVja0RDRShjaGVja0RDRSk7XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIC8vIERldlRvb2xzIHNob3VsZG4ndCBjcmFzaCBSZWFjdCwgbm8gbWF0dGVyIHdoYXQuXG4gICAgLy8gV2Ugc2hvdWxkIHN0aWxsIHJlcG9ydCBpbiBjYXNlIHdlIGJyZWFrIHRoaXMgY29kZS5cbiAgICBjb25zb2xlLmVycm9yKGVycik7XG4gIH1cbn1cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgLy8gRENFIGNoZWNrIHNob3VsZCBoYXBwZW4gYmVmb3JlIFJlYWN0RE9NIGJ1bmRsZSBleGVjdXRlcyBzbyB0aGF0XG4gIC8vIERldlRvb2xzIGNhbiByZXBvcnQgYmFkIG1pbmlmaWNhdGlvbiBkdXJpbmcgaW5qZWN0aW9uLlxuICBjaGVja0RDRSgpO1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWRvbS5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1kb20uZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsIi8qXG5vYmplY3QtYXNzaWduXG4oYykgU2luZHJlIFNvcmh1c1xuQGxpY2Vuc2UgTUlUXG4qL1xuXG4ndXNlIHN0cmljdCc7XG4vKiBlc2xpbnQtZGlzYWJsZSBuby11bnVzZWQtdmFycyAqL1xudmFyIGdldE93blByb3BlcnR5U3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHM7XG52YXIgaGFzT3duUHJvcGVydHkgPSBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O1xudmFyIHByb3BJc0VudW1lcmFibGUgPSBPYmplY3QucHJvdG90eXBlLnByb3BlcnR5SXNFbnVtZXJhYmxlO1xuXG5mdW5jdGlvbiB0b09iamVjdCh2YWwpIHtcblx0aWYgKHZhbCA9PT0gbnVsbCB8fCB2YWwgPT09IHVuZGVmaW5lZCkge1xuXHRcdHRocm93IG5ldyBUeXBlRXJyb3IoJ09iamVjdC5hc3NpZ24gY2Fubm90IGJlIGNhbGxlZCB3aXRoIG51bGwgb3IgdW5kZWZpbmVkJyk7XG5cdH1cblxuXHRyZXR1cm4gT2JqZWN0KHZhbCk7XG59XG5cbmZ1bmN0aW9uIHNob3VsZFVzZU5hdGl2ZSgpIHtcblx0dHJ5IHtcblx0XHRpZiAoIU9iamVjdC5hc3NpZ24pIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBEZXRlY3QgYnVnZ3kgcHJvcGVydHkgZW51bWVyYXRpb24gb3JkZXIgaW4gb2xkZXIgVjggdmVyc2lvbnMuXG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD00MTE4XG5cdFx0dmFyIHRlc3QxID0gbmV3IFN0cmluZygnYWJjJyk7ICAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLW5ldy13cmFwcGVyc1xuXHRcdHRlc3QxWzVdID0gJ2RlJztcblx0XHRpZiAoT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGVzdDEpWzBdID09PSAnNScpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD0zMDU2XG5cdFx0dmFyIHRlc3QyID0ge307XG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCAxMDsgaSsrKSB7XG5cdFx0XHR0ZXN0MlsnXycgKyBTdHJpbmcuZnJvbUNoYXJDb2RlKGkpXSA9IGk7XG5cdFx0fVxuXHRcdHZhciBvcmRlcjIgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0ZXN0MikubWFwKGZ1bmN0aW9uIChuKSB7XG5cdFx0XHRyZXR1cm4gdGVzdDJbbl07XG5cdFx0fSk7XG5cdFx0aWYgKG9yZGVyMi5qb2luKCcnKSAhPT0gJzAxMjM0NTY3ODknKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9MzA1NlxuXHRcdHZhciB0ZXN0MyA9IHt9O1xuXHRcdCdhYmNkZWZnaGlqa2xtbm9wcXJzdCcuc3BsaXQoJycpLmZvckVhY2goZnVuY3Rpb24gKGxldHRlcikge1xuXHRcdFx0dGVzdDNbbGV0dGVyXSA9IGxldHRlcjtcblx0XHR9KTtcblx0XHRpZiAoT2JqZWN0LmtleXMoT2JqZWN0LmFzc2lnbih7fSwgdGVzdDMpKS5qb2luKCcnKSAhPT1cblx0XHRcdFx0J2FiY2RlZmdoaWprbG1ub3BxcnN0Jykge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdHJldHVybiB0cnVlO1xuXHR9IGNhdGNoIChlcnIpIHtcblx0XHQvLyBXZSBkb24ndCBleHBlY3QgYW55IG9mIHRoZSBhYm92ZSB0byB0aHJvdywgYnV0IGJldHRlciB0byBiZSBzYWZlLlxuXHRcdHJldHVybiBmYWxzZTtcblx0fVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHNob3VsZFVzZU5hdGl2ZSgpID8gT2JqZWN0LmFzc2lnbiA6IGZ1bmN0aW9uICh0YXJnZXQsIHNvdXJjZSkge1xuXHR2YXIgZnJvbTtcblx0dmFyIHRvID0gdG9PYmplY3QodGFyZ2V0KTtcblx0dmFyIHN5bWJvbHM7XG5cblx0Zm9yICh2YXIgcyA9IDE7IHMgPCBhcmd1bWVudHMubGVuZ3RoOyBzKyspIHtcblx0XHRmcm9tID0gT2JqZWN0KGFyZ3VtZW50c1tzXSk7XG5cblx0XHRmb3IgKHZhciBrZXkgaW4gZnJvbSkge1xuXHRcdFx0aWYgKGhhc093blByb3BlcnR5LmNhbGwoZnJvbSwga2V5KSkge1xuXHRcdFx0XHR0b1trZXldID0gZnJvbVtrZXldO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdGlmIChnZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHtcblx0XHRcdHN5bWJvbHMgPSBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMoZnJvbSk7XG5cdFx0XHRmb3IgKHZhciBpID0gMDsgaSA8IHN5bWJvbHMubGVuZ3RoOyBpKyspIHtcblx0XHRcdFx0aWYgKHByb3BJc0VudW1lcmFibGUuY2FsbChmcm9tLCBzeW1ib2xzW2ldKSkge1xuXHRcdFx0XHRcdHRvW3N5bWJvbHNbaV1dID0gZnJvbVtzeW1ib2xzW2ldXTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdHJldHVybiB0bztcbn07XG4iLCJ2YXIgaXNhcnJheSA9IHJlcXVpcmUoJ2lzYXJyYXknKVxuXG4vKipcbiAqIEV4cG9zZSBgcGF0aFRvUmVnZXhwYC5cbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBwYXRoVG9SZWdleHBcbm1vZHVsZS5leHBvcnRzLnBhcnNlID0gcGFyc2Vcbm1vZHVsZS5leHBvcnRzLmNvbXBpbGUgPSBjb21waWxlXG5tb2R1bGUuZXhwb3J0cy50b2tlbnNUb0Z1bmN0aW9uID0gdG9rZW5zVG9GdW5jdGlvblxubW9kdWxlLmV4cG9ydHMudG9rZW5zVG9SZWdFeHAgPSB0b2tlbnNUb1JlZ0V4cFxuXG4vKipcbiAqIFRoZSBtYWluIHBhdGggbWF0Y2hpbmcgcmVnZXhwIHV0aWxpdHkuXG4gKlxuICogQHR5cGUge1JlZ0V4cH1cbiAqL1xudmFyIFBBVEhfUkVHRVhQID0gbmV3IFJlZ0V4cChbXG4gIC8vIE1hdGNoIGVzY2FwZWQgY2hhcmFjdGVycyB0aGF0IHdvdWxkIG90aGVyd2lzZSBhcHBlYXIgaW4gZnV0dXJlIG1hdGNoZXMuXG4gIC8vIFRoaXMgYWxsb3dzIHRoZSB1c2VyIHRvIGVzY2FwZSBzcGVjaWFsIGNoYXJhY3RlcnMgdGhhdCB3b24ndCB0cmFuc2Zvcm0uXG4gICcoXFxcXFxcXFwuKScsXG4gIC8vIE1hdGNoIEV4cHJlc3Mtc3R5bGUgcGFyYW1ldGVycyBhbmQgdW4tbmFtZWQgcGFyYW1ldGVycyB3aXRoIGEgcHJlZml4XG4gIC8vIGFuZCBvcHRpb25hbCBzdWZmaXhlcy4gTWF0Y2hlcyBhcHBlYXIgYXM6XG4gIC8vXG4gIC8vIFwiLzp0ZXN0KFxcXFxkKyk/XCIgPT4gW1wiL1wiLCBcInRlc3RcIiwgXCJcXGQrXCIsIHVuZGVmaW5lZCwgXCI/XCIsIHVuZGVmaW5lZF1cbiAgLy8gXCIvcm91dGUoXFxcXGQrKVwiICA9PiBbdW5kZWZpbmVkLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgXCJcXGQrXCIsIHVuZGVmaW5lZCwgdW5kZWZpbmVkXVxuICAvLyBcIi8qXCIgICAgICAgICAgICA9PiBbXCIvXCIsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgXCIqXCJdXG4gICcoW1xcXFwvLl0pPyg/Oig/OlxcXFw6KFxcXFx3KykoPzpcXFxcKCgoPzpcXFxcXFxcXC58W15cXFxcXFxcXCgpXSkrKVxcXFwpKT98XFxcXCgoKD86XFxcXFxcXFwufFteXFxcXFxcXFwoKV0pKylcXFxcKSkoWysqP10pP3woXFxcXCopKSdcbl0uam9pbignfCcpLCAnZycpXG5cbi8qKlxuICogUGFyc2UgYSBzdHJpbmcgZm9yIHRoZSByYXcgdG9rZW5zLlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ30gIHN0clxuICogQHBhcmFtICB7T2JqZWN0PX0gb3B0aW9uc1xuICogQHJldHVybiB7IUFycmF5fVxuICovXG5mdW5jdGlvbiBwYXJzZSAoc3RyLCBvcHRpb25zKSB7XG4gIHZhciB0b2tlbnMgPSBbXVxuICB2YXIga2V5ID0gMFxuICB2YXIgaW5kZXggPSAwXG4gIHZhciBwYXRoID0gJydcbiAgdmFyIGRlZmF1bHREZWxpbWl0ZXIgPSBvcHRpb25zICYmIG9wdGlvbnMuZGVsaW1pdGVyIHx8ICcvJ1xuICB2YXIgcmVzXG5cbiAgd2hpbGUgKChyZXMgPSBQQVRIX1JFR0VYUC5leGVjKHN0cikpICE9IG51bGwpIHtcbiAgICB2YXIgbSA9IHJlc1swXVxuICAgIHZhciBlc2NhcGVkID0gcmVzWzFdXG4gICAgdmFyIG9mZnNldCA9IHJlcy5pbmRleFxuICAgIHBhdGggKz0gc3RyLnNsaWNlKGluZGV4LCBvZmZzZXQpXG4gICAgaW5kZXggPSBvZmZzZXQgKyBtLmxlbmd0aFxuXG4gICAgLy8gSWdub3JlIGFscmVhZHkgZXNjYXBlZCBzZXF1ZW5jZXMuXG4gICAgaWYgKGVzY2FwZWQpIHtcbiAgICAgIHBhdGggKz0gZXNjYXBlZFsxXVxuICAgICAgY29udGludWVcbiAgICB9XG5cbiAgICB2YXIgbmV4dCA9IHN0cltpbmRleF1cbiAgICB2YXIgcHJlZml4ID0gcmVzWzJdXG4gICAgdmFyIG5hbWUgPSByZXNbM11cbiAgICB2YXIgY2FwdHVyZSA9IHJlc1s0XVxuICAgIHZhciBncm91cCA9IHJlc1s1XVxuICAgIHZhciBtb2RpZmllciA9IHJlc1s2XVxuICAgIHZhciBhc3RlcmlzayA9IHJlc1s3XVxuXG4gICAgLy8gUHVzaCB0aGUgY3VycmVudCBwYXRoIG9udG8gdGhlIHRva2Vucy5cbiAgICBpZiAocGF0aCkge1xuICAgICAgdG9rZW5zLnB1c2gocGF0aClcbiAgICAgIHBhdGggPSAnJ1xuICAgIH1cblxuICAgIHZhciBwYXJ0aWFsID0gcHJlZml4ICE9IG51bGwgJiYgbmV4dCAhPSBudWxsICYmIG5leHQgIT09IHByZWZpeFxuICAgIHZhciByZXBlYXQgPSBtb2RpZmllciA9PT0gJysnIHx8IG1vZGlmaWVyID09PSAnKidcbiAgICB2YXIgb3B0aW9uYWwgPSBtb2RpZmllciA9PT0gJz8nIHx8IG1vZGlmaWVyID09PSAnKidcbiAgICB2YXIgZGVsaW1pdGVyID0gcmVzWzJdIHx8IGRlZmF1bHREZWxpbWl0ZXJcbiAgICB2YXIgcGF0dGVybiA9IGNhcHR1cmUgfHwgZ3JvdXBcblxuICAgIHRva2Vucy5wdXNoKHtcbiAgICAgIG5hbWU6IG5hbWUgfHwga2V5KyssXG4gICAgICBwcmVmaXg6IHByZWZpeCB8fCAnJyxcbiAgICAgIGRlbGltaXRlcjogZGVsaW1pdGVyLFxuICAgICAgb3B0aW9uYWw6IG9wdGlvbmFsLFxuICAgICAgcmVwZWF0OiByZXBlYXQsXG4gICAgICBwYXJ0aWFsOiBwYXJ0aWFsLFxuICAgICAgYXN0ZXJpc2s6ICEhYXN0ZXJpc2ssXG4gICAgICBwYXR0ZXJuOiBwYXR0ZXJuID8gZXNjYXBlR3JvdXAocGF0dGVybikgOiAoYXN0ZXJpc2sgPyAnLionIDogJ1teJyArIGVzY2FwZVN0cmluZyhkZWxpbWl0ZXIpICsgJ10rPycpXG4gICAgfSlcbiAgfVxuXG4gIC8vIE1hdGNoIGFueSBjaGFyYWN0ZXJzIHN0aWxsIHJlbWFpbmluZy5cbiAgaWYgKGluZGV4IDwgc3RyLmxlbmd0aCkge1xuICAgIHBhdGggKz0gc3RyLnN1YnN0cihpbmRleClcbiAgfVxuXG4gIC8vIElmIHRoZSBwYXRoIGV4aXN0cywgcHVzaCBpdCBvbnRvIHRoZSBlbmQuXG4gIGlmIChwYXRoKSB7XG4gICAgdG9rZW5zLnB1c2gocGF0aClcbiAgfVxuXG4gIHJldHVybiB0b2tlbnNcbn1cblxuLyoqXG4gKiBDb21waWxlIGEgc3RyaW5nIHRvIGEgdGVtcGxhdGUgZnVuY3Rpb24gZm9yIHRoZSBwYXRoLlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ30gICAgICAgICAgICAgc3RyXG4gKiBAcGFyYW0gIHtPYmplY3Q9fSAgICAgICAgICAgIG9wdGlvbnNcbiAqIEByZXR1cm4geyFmdW5jdGlvbihPYmplY3Q9LCBPYmplY3Q9KX1cbiAqL1xuZnVuY3Rpb24gY29tcGlsZSAoc3RyLCBvcHRpb25zKSB7XG4gIHJldHVybiB0b2tlbnNUb0Z1bmN0aW9uKHBhcnNlKHN0ciwgb3B0aW9ucykpXG59XG5cbi8qKlxuICogUHJldHRpZXIgZW5jb2Rpbmcgb2YgVVJJIHBhdGggc2VnbWVudHMuXG4gKlxuICogQHBhcmFtICB7c3RyaW5nfVxuICogQHJldHVybiB7c3RyaW5nfVxuICovXG5mdW5jdGlvbiBlbmNvZGVVUklDb21wb25lbnRQcmV0dHkgKHN0cikge1xuICByZXR1cm4gZW5jb2RlVVJJKHN0cikucmVwbGFjZSgvW1xcLz8jXS9nLCBmdW5jdGlvbiAoYykge1xuICAgIHJldHVybiAnJScgKyBjLmNoYXJDb2RlQXQoMCkudG9TdHJpbmcoMTYpLnRvVXBwZXJDYXNlKClcbiAgfSlcbn1cblxuLyoqXG4gKiBFbmNvZGUgdGhlIGFzdGVyaXNrIHBhcmFtZXRlci4gU2ltaWxhciB0byBgcHJldHR5YCwgYnV0IGFsbG93cyBzbGFzaGVzLlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ31cbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqL1xuZnVuY3Rpb24gZW5jb2RlQXN0ZXJpc2sgKHN0cikge1xuICByZXR1cm4gZW5jb2RlVVJJKHN0cikucmVwbGFjZSgvWz8jXS9nLCBmdW5jdGlvbiAoYykge1xuICAgIHJldHVybiAnJScgKyBjLmNoYXJDb2RlQXQoMCkudG9TdHJpbmcoMTYpLnRvVXBwZXJDYXNlKClcbiAgfSlcbn1cblxuLyoqXG4gKiBFeHBvc2UgYSBtZXRob2QgZm9yIHRyYW5zZm9ybWluZyB0b2tlbnMgaW50byB0aGUgcGF0aCBmdW5jdGlvbi5cbiAqL1xuZnVuY3Rpb24gdG9rZW5zVG9GdW5jdGlvbiAodG9rZW5zKSB7XG4gIC8vIENvbXBpbGUgYWxsIHRoZSB0b2tlbnMgaW50byByZWdleHBzLlxuICB2YXIgbWF0Y2hlcyA9IG5ldyBBcnJheSh0b2tlbnMubGVuZ3RoKVxuXG4gIC8vIENvbXBpbGUgYWxsIHRoZSBwYXR0ZXJucyBiZWZvcmUgY29tcGlsYXRpb24uXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgdG9rZW5zLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHR5cGVvZiB0b2tlbnNbaV0gPT09ICdvYmplY3QnKSB7XG4gICAgICBtYXRjaGVzW2ldID0gbmV3IFJlZ0V4cCgnXig/OicgKyB0b2tlbnNbaV0ucGF0dGVybiArICcpJCcpXG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGZ1bmN0aW9uIChvYmosIG9wdHMpIHtcbiAgICB2YXIgcGF0aCA9ICcnXG4gICAgdmFyIGRhdGEgPSBvYmogfHwge31cbiAgICB2YXIgb3B0aW9ucyA9IG9wdHMgfHwge31cbiAgICB2YXIgZW5jb2RlID0gb3B0aW9ucy5wcmV0dHkgPyBlbmNvZGVVUklDb21wb25lbnRQcmV0dHkgOiBlbmNvZGVVUklDb21wb25lbnRcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdG9rZW5zLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgdG9rZW4gPSB0b2tlbnNbaV1cblxuICAgICAgaWYgKHR5cGVvZiB0b2tlbiA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgcGF0aCArPSB0b2tlblxuXG4gICAgICAgIGNvbnRpbnVlXG4gICAgICB9XG5cbiAgICAgIHZhciB2YWx1ZSA9IGRhdGFbdG9rZW4ubmFtZV1cbiAgICAgIHZhciBzZWdtZW50XG5cbiAgICAgIGlmICh2YWx1ZSA9PSBudWxsKSB7XG4gICAgICAgIGlmICh0b2tlbi5vcHRpb25hbCkge1xuICAgICAgICAgIC8vIFByZXBlbmQgcGFydGlhbCBzZWdtZW50IHByZWZpeGVzLlxuICAgICAgICAgIGlmICh0b2tlbi5wYXJ0aWFsKSB7XG4gICAgICAgICAgICBwYXRoICs9IHRva2VuLnByZWZpeFxuICAgICAgICAgIH1cblxuICAgICAgICAgIGNvbnRpbnVlXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRXhwZWN0ZWQgXCInICsgdG9rZW4ubmFtZSArICdcIiB0byBiZSBkZWZpbmVkJylcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAoaXNhcnJheSh2YWx1ZSkpIHtcbiAgICAgICAgaWYgKCF0b2tlbi5yZXBlYXQpIHtcbiAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdFeHBlY3RlZCBcIicgKyB0b2tlbi5uYW1lICsgJ1wiIHRvIG5vdCByZXBlYXQsIGJ1dCByZWNlaXZlZCBgJyArIEpTT04uc3RyaW5naWZ5KHZhbHVlKSArICdgJylcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh2YWx1ZS5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICBpZiAodG9rZW4ub3B0aW9uYWwpIHtcbiAgICAgICAgICAgIGNvbnRpbnVlXG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0V4cGVjdGVkIFwiJyArIHRva2VuLm5hbWUgKyAnXCIgdG8gbm90IGJlIGVtcHR5JylcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBmb3IgKHZhciBqID0gMDsgaiA8IHZhbHVlLmxlbmd0aDsgaisrKSB7XG4gICAgICAgICAgc2VnbWVudCA9IGVuY29kZSh2YWx1ZVtqXSlcblxuICAgICAgICAgIGlmICghbWF0Y2hlc1tpXS50ZXN0KHNlZ21lbnQpKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdFeHBlY3RlZCBhbGwgXCInICsgdG9rZW4ubmFtZSArICdcIiB0byBtYXRjaCBcIicgKyB0b2tlbi5wYXR0ZXJuICsgJ1wiLCBidXQgcmVjZWl2ZWQgYCcgKyBKU09OLnN0cmluZ2lmeShzZWdtZW50KSArICdgJylcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBwYXRoICs9IChqID09PSAwID8gdG9rZW4ucHJlZml4IDogdG9rZW4uZGVsaW1pdGVyKSArIHNlZ21lbnRcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnRpbnVlXG4gICAgICB9XG5cbiAgICAgIHNlZ21lbnQgPSB0b2tlbi5hc3RlcmlzayA/IGVuY29kZUFzdGVyaXNrKHZhbHVlKSA6IGVuY29kZSh2YWx1ZSlcblxuICAgICAgaWYgKCFtYXRjaGVzW2ldLnRlc3Qoc2VnbWVudCkpIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRXhwZWN0ZWQgXCInICsgdG9rZW4ubmFtZSArICdcIiB0byBtYXRjaCBcIicgKyB0b2tlbi5wYXR0ZXJuICsgJ1wiLCBidXQgcmVjZWl2ZWQgXCInICsgc2VnbWVudCArICdcIicpXG4gICAgICB9XG5cbiAgICAgIHBhdGggKz0gdG9rZW4ucHJlZml4ICsgc2VnbWVudFxuICAgIH1cblxuICAgIHJldHVybiBwYXRoXG4gIH1cbn1cblxuLyoqXG4gKiBFc2NhcGUgYSByZWd1bGFyIGV4cHJlc3Npb24gc3RyaW5nLlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ30gc3RyXG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmZ1bmN0aW9uIGVzY2FwZVN0cmluZyAoc3RyKSB7XG4gIHJldHVybiBzdHIucmVwbGFjZSgvKFsuKyo/PV4hOiR7fSgpW1xcXXxcXC9cXFxcXSkvZywgJ1xcXFwkMScpXG59XG5cbi8qKlxuICogRXNjYXBlIHRoZSBjYXB0dXJpbmcgZ3JvdXAgYnkgZXNjYXBpbmcgc3BlY2lhbCBjaGFyYWN0ZXJzIGFuZCBtZWFuaW5nLlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ30gZ3JvdXBcbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqL1xuZnVuY3Rpb24gZXNjYXBlR3JvdXAgKGdyb3VwKSB7XG4gIHJldHVybiBncm91cC5yZXBsYWNlKC8oWz0hOiRcXC8oKV0pL2csICdcXFxcJDEnKVxufVxuXG4vKipcbiAqIEF0dGFjaCB0aGUga2V5cyBhcyBhIHByb3BlcnR5IG9mIHRoZSByZWdleHAuXG4gKlxuICogQHBhcmFtICB7IVJlZ0V4cH0gcmVcbiAqIEBwYXJhbSAge0FycmF5fSAgIGtleXNcbiAqIEByZXR1cm4geyFSZWdFeHB9XG4gKi9cbmZ1bmN0aW9uIGF0dGFjaEtleXMgKHJlLCBrZXlzKSB7XG4gIHJlLmtleXMgPSBrZXlzXG4gIHJldHVybiByZVxufVxuXG4vKipcbiAqIEdldCB0aGUgZmxhZ3MgZm9yIGEgcmVnZXhwIGZyb20gdGhlIG9wdGlvbnMuXG4gKlxuICogQHBhcmFtICB7T2JqZWN0fSBvcHRpb25zXG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmZ1bmN0aW9uIGZsYWdzIChvcHRpb25zKSB7XG4gIHJldHVybiBvcHRpb25zLnNlbnNpdGl2ZSA/ICcnIDogJ2knXG59XG5cbi8qKlxuICogUHVsbCBvdXQga2V5cyBmcm9tIGEgcmVnZXhwLlxuICpcbiAqIEBwYXJhbSAgeyFSZWdFeHB9IHBhdGhcbiAqIEBwYXJhbSAgeyFBcnJheX0gIGtleXNcbiAqIEByZXR1cm4geyFSZWdFeHB9XG4gKi9cbmZ1bmN0aW9uIHJlZ2V4cFRvUmVnZXhwIChwYXRoLCBrZXlzKSB7XG4gIC8vIFVzZSBhIG5lZ2F0aXZlIGxvb2thaGVhZCB0byBtYXRjaCBvbmx5IGNhcHR1cmluZyBncm91cHMuXG4gIHZhciBncm91cHMgPSBwYXRoLnNvdXJjZS5tYXRjaCgvXFwoKD8hXFw/KS9nKVxuXG4gIGlmIChncm91cHMpIHtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGdyb3Vwcy5sZW5ndGg7IGkrKykge1xuICAgICAga2V5cy5wdXNoKHtcbiAgICAgICAgbmFtZTogaSxcbiAgICAgICAgcHJlZml4OiBudWxsLFxuICAgICAgICBkZWxpbWl0ZXI6IG51bGwsXG4gICAgICAgIG9wdGlvbmFsOiBmYWxzZSxcbiAgICAgICAgcmVwZWF0OiBmYWxzZSxcbiAgICAgICAgcGFydGlhbDogZmFsc2UsXG4gICAgICAgIGFzdGVyaXNrOiBmYWxzZSxcbiAgICAgICAgcGF0dGVybjogbnVsbFxuICAgICAgfSlcbiAgICB9XG4gIH1cblxuICByZXR1cm4gYXR0YWNoS2V5cyhwYXRoLCBrZXlzKVxufVxuXG4vKipcbiAqIFRyYW5zZm9ybSBhbiBhcnJheSBpbnRvIGEgcmVnZXhwLlxuICpcbiAqIEBwYXJhbSAgeyFBcnJheX0gIHBhdGhcbiAqIEBwYXJhbSAge0FycmF5fSAgIGtleXNcbiAqIEBwYXJhbSAgeyFPYmplY3R9IG9wdGlvbnNcbiAqIEByZXR1cm4geyFSZWdFeHB9XG4gKi9cbmZ1bmN0aW9uIGFycmF5VG9SZWdleHAgKHBhdGgsIGtleXMsIG9wdGlvbnMpIHtcbiAgdmFyIHBhcnRzID0gW11cblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHBhdGgubGVuZ3RoOyBpKyspIHtcbiAgICBwYXJ0cy5wdXNoKHBhdGhUb1JlZ2V4cChwYXRoW2ldLCBrZXlzLCBvcHRpb25zKS5zb3VyY2UpXG4gIH1cblxuICB2YXIgcmVnZXhwID0gbmV3IFJlZ0V4cCgnKD86JyArIHBhcnRzLmpvaW4oJ3wnKSArICcpJywgZmxhZ3Mob3B0aW9ucykpXG5cbiAgcmV0dXJuIGF0dGFjaEtleXMocmVnZXhwLCBrZXlzKVxufVxuXG4vKipcbiAqIENyZWF0ZSBhIHBhdGggcmVnZXhwIGZyb20gc3RyaW5nIGlucHV0LlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ30gIHBhdGhcbiAqIEBwYXJhbSAgeyFBcnJheX0gIGtleXNcbiAqIEBwYXJhbSAgeyFPYmplY3R9IG9wdGlvbnNcbiAqIEByZXR1cm4geyFSZWdFeHB9XG4gKi9cbmZ1bmN0aW9uIHN0cmluZ1RvUmVnZXhwIChwYXRoLCBrZXlzLCBvcHRpb25zKSB7XG4gIHJldHVybiB0b2tlbnNUb1JlZ0V4cChwYXJzZShwYXRoLCBvcHRpb25zKSwga2V5cywgb3B0aW9ucylcbn1cblxuLyoqXG4gKiBFeHBvc2UgYSBmdW5jdGlvbiBmb3IgdGFraW5nIHRva2VucyBhbmQgcmV0dXJuaW5nIGEgUmVnRXhwLlxuICpcbiAqIEBwYXJhbSAgeyFBcnJheX0gICAgICAgICAgdG9rZW5zXG4gKiBAcGFyYW0gIHsoQXJyYXl8T2JqZWN0KT19IGtleXNcbiAqIEBwYXJhbSAge09iamVjdD19ICAgICAgICAgb3B0aW9uc1xuICogQHJldHVybiB7IVJlZ0V4cH1cbiAqL1xuZnVuY3Rpb24gdG9rZW5zVG9SZWdFeHAgKHRva2Vucywga2V5cywgb3B0aW9ucykge1xuICBpZiAoIWlzYXJyYXkoa2V5cykpIHtcbiAgICBvcHRpb25zID0gLyoqIEB0eXBlIHshT2JqZWN0fSAqLyAoa2V5cyB8fCBvcHRpb25zKVxuICAgIGtleXMgPSBbXVxuICB9XG5cbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge31cblxuICB2YXIgc3RyaWN0ID0gb3B0aW9ucy5zdHJpY3RcbiAgdmFyIGVuZCA9IG9wdGlvbnMuZW5kICE9PSBmYWxzZVxuICB2YXIgcm91dGUgPSAnJ1xuXG4gIC8vIEl0ZXJhdGUgb3ZlciB0aGUgdG9rZW5zIGFuZCBjcmVhdGUgb3VyIHJlZ2V4cCBzdHJpbmcuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgdG9rZW5zLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIHRva2VuID0gdG9rZW5zW2ldXG5cbiAgICBpZiAodHlwZW9mIHRva2VuID09PSAnc3RyaW5nJykge1xuICAgICAgcm91dGUgKz0gZXNjYXBlU3RyaW5nKHRva2VuKVxuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgcHJlZml4ID0gZXNjYXBlU3RyaW5nKHRva2VuLnByZWZpeClcbiAgICAgIHZhciBjYXB0dXJlID0gJyg/OicgKyB0b2tlbi5wYXR0ZXJuICsgJyknXG5cbiAgICAgIGtleXMucHVzaCh0b2tlbilcblxuICAgICAgaWYgKHRva2VuLnJlcGVhdCkge1xuICAgICAgICBjYXB0dXJlICs9ICcoPzonICsgcHJlZml4ICsgY2FwdHVyZSArICcpKidcbiAgICAgIH1cblxuICAgICAgaWYgKHRva2VuLm9wdGlvbmFsKSB7XG4gICAgICAgIGlmICghdG9rZW4ucGFydGlhbCkge1xuICAgICAgICAgIGNhcHR1cmUgPSAnKD86JyArIHByZWZpeCArICcoJyArIGNhcHR1cmUgKyAnKSk/J1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGNhcHR1cmUgPSBwcmVmaXggKyAnKCcgKyBjYXB0dXJlICsgJyk/J1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBjYXB0dXJlID0gcHJlZml4ICsgJygnICsgY2FwdHVyZSArICcpJ1xuICAgICAgfVxuXG4gICAgICByb3V0ZSArPSBjYXB0dXJlXG4gICAgfVxuICB9XG5cbiAgdmFyIGRlbGltaXRlciA9IGVzY2FwZVN0cmluZyhvcHRpb25zLmRlbGltaXRlciB8fCAnLycpXG4gIHZhciBlbmRzV2l0aERlbGltaXRlciA9IHJvdXRlLnNsaWNlKC1kZWxpbWl0ZXIubGVuZ3RoKSA9PT0gZGVsaW1pdGVyXG5cbiAgLy8gSW4gbm9uLXN0cmljdCBtb2RlIHdlIGFsbG93IGEgc2xhc2ggYXQgdGhlIGVuZCBvZiBtYXRjaC4gSWYgdGhlIHBhdGggdG9cbiAgLy8gbWF0Y2ggYWxyZWFkeSBlbmRzIHdpdGggYSBzbGFzaCwgd2UgcmVtb3ZlIGl0IGZvciBjb25zaXN0ZW5jeS4gVGhlIHNsYXNoXG4gIC8vIGlzIHZhbGlkIGF0IHRoZSBlbmQgb2YgYSBwYXRoIG1hdGNoLCBub3QgaW4gdGhlIG1pZGRsZS4gVGhpcyBpcyBpbXBvcnRhbnRcbiAgLy8gaW4gbm9uLWVuZGluZyBtb2RlLCB3aGVyZSBcIi90ZXN0L1wiIHNob3VsZG4ndCBtYXRjaCBcIi90ZXN0Ly9yb3V0ZVwiLlxuICBpZiAoIXN0cmljdCkge1xuICAgIHJvdXRlID0gKGVuZHNXaXRoRGVsaW1pdGVyID8gcm91dGUuc2xpY2UoMCwgLWRlbGltaXRlci5sZW5ndGgpIDogcm91dGUpICsgJyg/OicgKyBkZWxpbWl0ZXIgKyAnKD89JCkpPydcbiAgfVxuXG4gIGlmIChlbmQpIHtcbiAgICByb3V0ZSArPSAnJCdcbiAgfSBlbHNlIHtcbiAgICAvLyBJbiBub24tZW5kaW5nIG1vZGUsIHdlIG5lZWQgdGhlIGNhcHR1cmluZyBncm91cHMgdG8gbWF0Y2ggYXMgbXVjaCBhc1xuICAgIC8vIHBvc3NpYmxlIGJ5IHVzaW5nIGEgcG9zaXRpdmUgbG9va2FoZWFkIHRvIHRoZSBlbmQgb3IgbmV4dCBwYXRoIHNlZ21lbnQuXG4gICAgcm91dGUgKz0gc3RyaWN0ICYmIGVuZHNXaXRoRGVsaW1pdGVyID8gJycgOiAnKD89JyArIGRlbGltaXRlciArICd8JCknXG4gIH1cblxuICByZXR1cm4gYXR0YWNoS2V5cyhuZXcgUmVnRXhwKCdeJyArIHJvdXRlLCBmbGFncyhvcHRpb25zKSksIGtleXMpXG59XG5cbi8qKlxuICogTm9ybWFsaXplIHRoZSBnaXZlbiBwYXRoIHN0cmluZywgcmV0dXJuaW5nIGEgcmVndWxhciBleHByZXNzaW9uLlxuICpcbiAqIEFuIGVtcHR5IGFycmF5IGNhbiBiZSBwYXNzZWQgaW4gZm9yIHRoZSBrZXlzLCB3aGljaCB3aWxsIGhvbGQgdGhlXG4gKiBwbGFjZWhvbGRlciBrZXkgZGVzY3JpcHRpb25zLiBGb3IgZXhhbXBsZSwgdXNpbmcgYC91c2VyLzppZGAsIGBrZXlzYCB3aWxsXG4gKiBjb250YWluIGBbeyBuYW1lOiAnaWQnLCBkZWxpbWl0ZXI6ICcvJywgb3B0aW9uYWw6IGZhbHNlLCByZXBlYXQ6IGZhbHNlIH1dYC5cbiAqXG4gKiBAcGFyYW0gIHsoc3RyaW5nfFJlZ0V4cHxBcnJheSl9IHBhdGhcbiAqIEBwYXJhbSAgeyhBcnJheXxPYmplY3QpPX0gICAgICAga2V5c1xuICogQHBhcmFtICB7T2JqZWN0PX0gICAgICAgICAgICAgICBvcHRpb25zXG4gKiBAcmV0dXJuIHshUmVnRXhwfVxuICovXG5mdW5jdGlvbiBwYXRoVG9SZWdleHAgKHBhdGgsIGtleXMsIG9wdGlvbnMpIHtcbiAgaWYgKCFpc2FycmF5KGtleXMpKSB7XG4gICAgb3B0aW9ucyA9IC8qKiBAdHlwZSB7IU9iamVjdH0gKi8gKGtleXMgfHwgb3B0aW9ucylcbiAgICBrZXlzID0gW11cbiAgfVxuXG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9XG5cbiAgaWYgKHBhdGggaW5zdGFuY2VvZiBSZWdFeHApIHtcbiAgICByZXR1cm4gcmVnZXhwVG9SZWdleHAocGF0aCwgLyoqIEB0eXBlIHshQXJyYXl9ICovIChrZXlzKSlcbiAgfVxuXG4gIGlmIChpc2FycmF5KHBhdGgpKSB7XG4gICAgcmV0dXJuIGFycmF5VG9SZWdleHAoLyoqIEB0eXBlIHshQXJyYXl9ICovIChwYXRoKSwgLyoqIEB0eXBlIHshQXJyYXl9ICovIChrZXlzKSwgb3B0aW9ucylcbiAgfVxuXG4gIHJldHVybiBzdHJpbmdUb1JlZ2V4cCgvKiogQHR5cGUge3N0cmluZ30gKi8gKHBhdGgpLCAvKiogQHR5cGUgeyFBcnJheX0gKi8gKGtleXMpLCBvcHRpb25zKVxufVxuIiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYxNi44LjZcbiAqIHJlYWN0LnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO3ZhciBrPXJlcXVpcmUoXCJvYmplY3QtYXNzaWduXCIpLG49XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLmZvcixwPW4/U3ltYm9sLmZvcihcInJlYWN0LmVsZW1lbnRcIik6NjAxMDMscT1uP1N5bWJvbC5mb3IoXCJyZWFjdC5wb3J0YWxcIik6NjAxMDYscj1uP1N5bWJvbC5mb3IoXCJyZWFjdC5mcmFnbWVudFwiKTo2MDEwNyx0PW4/U3ltYm9sLmZvcihcInJlYWN0LnN0cmljdF9tb2RlXCIpOjYwMTA4LHU9bj9TeW1ib2wuZm9yKFwicmVhY3QucHJvZmlsZXJcIik6NjAxMTQsdj1uP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm92aWRlclwiKTo2MDEwOSx3PW4/U3ltYm9sLmZvcihcInJlYWN0LmNvbnRleHRcIik6NjAxMTAseD1uP1N5bWJvbC5mb3IoXCJyZWFjdC5jb25jdXJyZW50X21vZGVcIik6NjAxMTEseT1uP1N5bWJvbC5mb3IoXCJyZWFjdC5mb3J3YXJkX3JlZlwiKTo2MDExMix6PW4/U3ltYm9sLmZvcihcInJlYWN0LnN1c3BlbnNlXCIpOjYwMTEzLGFhPW4/U3ltYm9sLmZvcihcInJlYWN0Lm1lbW9cIik6XG42MDExNSxiYT1uP1N5bWJvbC5mb3IoXCJyZWFjdC5sYXp5XCIpOjYwMTE2LEE9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLml0ZXJhdG9yO2Z1bmN0aW9uIGNhKGEsYixkLGMsZSxnLGgsZil7aWYoIWEpe2E9dm9pZCAwO2lmKHZvaWQgMD09PWIpYT1FcnJvcihcIk1pbmlmaWVkIGV4Y2VwdGlvbiBvY2N1cnJlZDsgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50IGZvciB0aGUgZnVsbCBlcnJvciBtZXNzYWdlIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuXCIpO2Vsc2V7dmFyIGw9W2QsYyxlLGcsaCxmXSxtPTA7YT1FcnJvcihiLnJlcGxhY2UoLyVzL2csZnVuY3Rpb24oKXtyZXR1cm4gbFttKytdfSkpO2EubmFtZT1cIkludmFyaWFudCBWaW9sYXRpb25cIn1hLmZyYW1lc1RvUG9wPTE7dGhyb3cgYTt9fVxuZnVuY3Rpb24gQihhKXtmb3IodmFyIGI9YXJndW1lbnRzLmxlbmd0aC0xLGQ9XCJodHRwczovL3JlYWN0anMub3JnL2RvY3MvZXJyb3ItZGVjb2Rlci5odG1sP2ludmFyaWFudD1cIithLGM9MDtjPGI7YysrKWQrPVwiJmFyZ3NbXT1cIitlbmNvZGVVUklDb21wb25lbnQoYXJndW1lbnRzW2MrMV0pO2NhKCExLFwiTWluaWZpZWQgUmVhY3QgZXJyb3IgI1wiK2ErXCI7IHZpc2l0ICVzIGZvciB0aGUgZnVsbCBtZXNzYWdlIG9yIHVzZSB0aGUgbm9uLW1pbmlmaWVkIGRldiBlbnZpcm9ubWVudCBmb3IgZnVsbCBlcnJvcnMgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy4gXCIsZCl9dmFyIEM9e2lzTW91bnRlZDpmdW5jdGlvbigpe3JldHVybiExfSxlbnF1ZXVlRm9yY2VVcGRhdGU6ZnVuY3Rpb24oKXt9LGVucXVldWVSZXBsYWNlU3RhdGU6ZnVuY3Rpb24oKXt9LGVucXVldWVTZXRTdGF0ZTpmdW5jdGlvbigpe319LEQ9e307XG5mdW5jdGlvbiBFKGEsYixkKXt0aGlzLnByb3BzPWE7dGhpcy5jb250ZXh0PWI7dGhpcy5yZWZzPUQ7dGhpcy51cGRhdGVyPWR8fEN9RS5wcm90b3R5cGUuaXNSZWFjdENvbXBvbmVudD17fTtFLnByb3RvdHlwZS5zZXRTdGF0ZT1mdW5jdGlvbihhLGIpe1wib2JqZWN0XCIhPT10eXBlb2YgYSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGEmJm51bGwhPWE/QihcIjg1XCIpOnZvaWQgMDt0aGlzLnVwZGF0ZXIuZW5xdWV1ZVNldFN0YXRlKHRoaXMsYSxiLFwic2V0U3RhdGVcIil9O0UucHJvdG90eXBlLmZvcmNlVXBkYXRlPWZ1bmN0aW9uKGEpe3RoaXMudXBkYXRlci5lbnF1ZXVlRm9yY2VVcGRhdGUodGhpcyxhLFwiZm9yY2VVcGRhdGVcIil9O2Z1bmN0aW9uIEYoKXt9Ri5wcm90b3R5cGU9RS5wcm90b3R5cGU7ZnVuY3Rpb24gRyhhLGIsZCl7dGhpcy5wcm9wcz1hO3RoaXMuY29udGV4dD1iO3RoaXMucmVmcz1EO3RoaXMudXBkYXRlcj1kfHxDfXZhciBIPUcucHJvdG90eXBlPW5ldyBGO1xuSC5jb25zdHJ1Y3Rvcj1HO2soSCxFLnByb3RvdHlwZSk7SC5pc1B1cmVSZWFjdENvbXBvbmVudD0hMDt2YXIgST17Y3VycmVudDpudWxsfSxKPXtjdXJyZW50Om51bGx9LEs9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSxMPXtrZXk6ITAscmVmOiEwLF9fc2VsZjohMCxfX3NvdXJjZTohMH07XG5mdW5jdGlvbiBNKGEsYixkKXt2YXIgYz12b2lkIDAsZT17fSxnPW51bGwsaD1udWxsO2lmKG51bGwhPWIpZm9yKGMgaW4gdm9pZCAwIT09Yi5yZWYmJihoPWIucmVmKSx2b2lkIDAhPT1iLmtleSYmKGc9XCJcIitiLmtleSksYilLLmNhbGwoYixjKSYmIUwuaGFzT3duUHJvcGVydHkoYykmJihlW2NdPWJbY10pO3ZhciBmPWFyZ3VtZW50cy5sZW5ndGgtMjtpZigxPT09ZillLmNoaWxkcmVuPWQ7ZWxzZSBpZigxPGYpe2Zvcih2YXIgbD1BcnJheShmKSxtPTA7bTxmO20rKylsW21dPWFyZ3VtZW50c1ttKzJdO2UuY2hpbGRyZW49bH1pZihhJiZhLmRlZmF1bHRQcm9wcylmb3IoYyBpbiBmPWEuZGVmYXVsdFByb3BzLGYpdm9pZCAwPT09ZVtjXSYmKGVbY109ZltjXSk7cmV0dXJueyQkdHlwZW9mOnAsdHlwZTphLGtleTpnLHJlZjpoLHByb3BzOmUsX293bmVyOkouY3VycmVudH19XG5mdW5jdGlvbiBkYShhLGIpe3JldHVybnskJHR5cGVvZjpwLHR5cGU6YS50eXBlLGtleTpiLHJlZjphLnJlZixwcm9wczphLnByb3BzLF9vd25lcjphLl9vd25lcn19ZnVuY3Rpb24gTihhKXtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiZhLiQkdHlwZW9mPT09cH1mdW5jdGlvbiBlc2NhcGUoYSl7dmFyIGI9e1wiPVwiOlwiPTBcIixcIjpcIjpcIj0yXCJ9O3JldHVyblwiJFwiKyhcIlwiK2EpLnJlcGxhY2UoL1s9Ol0vZyxmdW5jdGlvbihhKXtyZXR1cm4gYlthXX0pfXZhciBPPS9cXC8rL2csUD1bXTtmdW5jdGlvbiBRKGEsYixkLGMpe2lmKFAubGVuZ3RoKXt2YXIgZT1QLnBvcCgpO2UucmVzdWx0PWE7ZS5rZXlQcmVmaXg9YjtlLmZ1bmM9ZDtlLmNvbnRleHQ9YztlLmNvdW50PTA7cmV0dXJuIGV9cmV0dXJue3Jlc3VsdDphLGtleVByZWZpeDpiLGZ1bmM6ZCxjb250ZXh0OmMsY291bnQ6MH19XG5mdW5jdGlvbiBSKGEpe2EucmVzdWx0PW51bGw7YS5rZXlQcmVmaXg9bnVsbDthLmZ1bmM9bnVsbDthLmNvbnRleHQ9bnVsbDthLmNvdW50PTA7MTA+UC5sZW5ndGgmJlAucHVzaChhKX1cbmZ1bmN0aW9uIFMoYSxiLGQsYyl7dmFyIGU9dHlwZW9mIGE7aWYoXCJ1bmRlZmluZWRcIj09PWV8fFwiYm9vbGVhblwiPT09ZSlhPW51bGw7dmFyIGc9ITE7aWYobnVsbD09PWEpZz0hMDtlbHNlIHN3aXRjaChlKXtjYXNlIFwic3RyaW5nXCI6Y2FzZSBcIm51bWJlclwiOmc9ITA7YnJlYWs7Y2FzZSBcIm9iamVjdFwiOnN3aXRjaChhLiQkdHlwZW9mKXtjYXNlIHA6Y2FzZSBxOmc9ITB9fWlmKGcpcmV0dXJuIGQoYyxhLFwiXCI9PT1iP1wiLlwiK1QoYSwwKTpiKSwxO2c9MDtiPVwiXCI9PT1iP1wiLlwiOmIrXCI6XCI7aWYoQXJyYXkuaXNBcnJheShhKSlmb3IodmFyIGg9MDtoPGEubGVuZ3RoO2grKyl7ZT1hW2hdO3ZhciBmPWIrVChlLGgpO2crPVMoZSxmLGQsYyl9ZWxzZSBpZihudWxsPT09YXx8XCJvYmplY3RcIiE9PXR5cGVvZiBhP2Y9bnVsbDooZj1BJiZhW0FdfHxhW1wiQEBpdGVyYXRvclwiXSxmPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBmP2Y6bnVsbCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGYpZm9yKGE9Zi5jYWxsKGEpLGg9XG4wOyEoZT1hLm5leHQoKSkuZG9uZTspZT1lLnZhbHVlLGY9YitUKGUsaCsrKSxnKz1TKGUsZixkLGMpO2Vsc2VcIm9iamVjdFwiPT09ZSYmKGQ9XCJcIithLEIoXCIzMVwiLFwiW29iamVjdCBPYmplY3RdXCI9PT1kP1wib2JqZWN0IHdpdGgga2V5cyB7XCIrT2JqZWN0LmtleXMoYSkuam9pbihcIiwgXCIpK1wifVwiOmQsXCJcIikpO3JldHVybiBnfWZ1bmN0aW9uIFUoYSxiLGQpe3JldHVybiBudWxsPT1hPzA6UyhhLFwiXCIsYixkKX1mdW5jdGlvbiBUKGEsYil7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmbnVsbCE9YS5rZXk/ZXNjYXBlKGEua2V5KTpiLnRvU3RyaW5nKDM2KX1mdW5jdGlvbiBlYShhLGIpe2EuZnVuYy5jYWxsKGEuY29udGV4dCxiLGEuY291bnQrKyl9XG5mdW5jdGlvbiBmYShhLGIsZCl7dmFyIGM9YS5yZXN1bHQsZT1hLmtleVByZWZpeDthPWEuZnVuYy5jYWxsKGEuY29udGV4dCxiLGEuY291bnQrKyk7QXJyYXkuaXNBcnJheShhKT9WKGEsYyxkLGZ1bmN0aW9uKGEpe3JldHVybiBhfSk6bnVsbCE9YSYmKE4oYSkmJihhPWRhKGEsZSsoIWEua2V5fHxiJiZiLmtleT09PWEua2V5P1wiXCI6KFwiXCIrYS5rZXkpLnJlcGxhY2UoTyxcIiQmL1wiKStcIi9cIikrZCkpLGMucHVzaChhKSl9ZnVuY3Rpb24gVihhLGIsZCxjLGUpe3ZhciBnPVwiXCI7bnVsbCE9ZCYmKGc9KFwiXCIrZCkucmVwbGFjZShPLFwiJCYvXCIpK1wiL1wiKTtiPVEoYixnLGMsZSk7VShhLGZhLGIpO1IoYil9ZnVuY3Rpb24gVygpe3ZhciBhPUkuY3VycmVudDtudWxsPT09YT9CKFwiMzIxXCIpOnZvaWQgMDtyZXR1cm4gYX1cbnZhciBYPXtDaGlsZHJlbjp7bWFwOmZ1bmN0aW9uKGEsYixkKXtpZihudWxsPT1hKXJldHVybiBhO3ZhciBjPVtdO1YoYSxjLG51bGwsYixkKTtyZXR1cm4gY30sZm9yRWFjaDpmdW5jdGlvbihhLGIsZCl7aWYobnVsbD09YSlyZXR1cm4gYTtiPVEobnVsbCxudWxsLGIsZCk7VShhLGVhLGIpO1IoYil9LGNvdW50OmZ1bmN0aW9uKGEpe3JldHVybiBVKGEsZnVuY3Rpb24oKXtyZXR1cm4gbnVsbH0sbnVsbCl9LHRvQXJyYXk6ZnVuY3Rpb24oYSl7dmFyIGI9W107VihhLGIsbnVsbCxmdW5jdGlvbihhKXtyZXR1cm4gYX0pO3JldHVybiBifSxvbmx5OmZ1bmN0aW9uKGEpe04oYSk/dm9pZCAwOkIoXCIxNDNcIik7cmV0dXJuIGF9fSxjcmVhdGVSZWY6ZnVuY3Rpb24oKXtyZXR1cm57Y3VycmVudDpudWxsfX0sQ29tcG9uZW50OkUsUHVyZUNvbXBvbmVudDpHLGNyZWF0ZUNvbnRleHQ6ZnVuY3Rpb24oYSxiKXt2b2lkIDA9PT1iJiYoYj1udWxsKTthPXskJHR5cGVvZjp3LF9jYWxjdWxhdGVDaGFuZ2VkQml0czpiLFxuX2N1cnJlbnRWYWx1ZTphLF9jdXJyZW50VmFsdWUyOmEsX3RocmVhZENvdW50OjAsUHJvdmlkZXI6bnVsbCxDb25zdW1lcjpudWxsfTthLlByb3ZpZGVyPXskJHR5cGVvZjp2LF9jb250ZXh0OmF9O3JldHVybiBhLkNvbnN1bWVyPWF9LGZvcndhcmRSZWY6ZnVuY3Rpb24oYSl7cmV0dXJueyQkdHlwZW9mOnkscmVuZGVyOmF9fSxsYXp5OmZ1bmN0aW9uKGEpe3JldHVybnskJHR5cGVvZjpiYSxfY3RvcjphLF9zdGF0dXM6LTEsX3Jlc3VsdDpudWxsfX0sbWVtbzpmdW5jdGlvbihhLGIpe3JldHVybnskJHR5cGVvZjphYSx0eXBlOmEsY29tcGFyZTp2b2lkIDA9PT1iP251bGw6Yn19LHVzZUNhbGxiYWNrOmZ1bmN0aW9uKGEsYil7cmV0dXJuIFcoKS51c2VDYWxsYmFjayhhLGIpfSx1c2VDb250ZXh0OmZ1bmN0aW9uKGEsYil7cmV0dXJuIFcoKS51c2VDb250ZXh0KGEsYil9LHVzZUVmZmVjdDpmdW5jdGlvbihhLGIpe3JldHVybiBXKCkudXNlRWZmZWN0KGEsYil9LHVzZUltcGVyYXRpdmVIYW5kbGU6ZnVuY3Rpb24oYSxcbmIsZCl7cmV0dXJuIFcoKS51c2VJbXBlcmF0aXZlSGFuZGxlKGEsYixkKX0sdXNlRGVidWdWYWx1ZTpmdW5jdGlvbigpe30sdXNlTGF5b3V0RWZmZWN0OmZ1bmN0aW9uKGEsYil7cmV0dXJuIFcoKS51c2VMYXlvdXRFZmZlY3QoYSxiKX0sdXNlTWVtbzpmdW5jdGlvbihhLGIpe3JldHVybiBXKCkudXNlTWVtbyhhLGIpfSx1c2VSZWR1Y2VyOmZ1bmN0aW9uKGEsYixkKXtyZXR1cm4gVygpLnVzZVJlZHVjZXIoYSxiLGQpfSx1c2VSZWY6ZnVuY3Rpb24oYSl7cmV0dXJuIFcoKS51c2VSZWYoYSl9LHVzZVN0YXRlOmZ1bmN0aW9uKGEpe3JldHVybiBXKCkudXNlU3RhdGUoYSl9LEZyYWdtZW50OnIsU3RyaWN0TW9kZTp0LFN1c3BlbnNlOnosY3JlYXRlRWxlbWVudDpNLGNsb25lRWxlbWVudDpmdW5jdGlvbihhLGIsZCl7bnVsbD09PWF8fHZvaWQgMD09PWE/QihcIjI2N1wiLGEpOnZvaWQgMDt2YXIgYz12b2lkIDAsZT1rKHt9LGEucHJvcHMpLGc9YS5rZXksaD1hLnJlZixmPWEuX293bmVyO2lmKG51bGwhPVxuYil7dm9pZCAwIT09Yi5yZWYmJihoPWIucmVmLGY9Si5jdXJyZW50KTt2b2lkIDAhPT1iLmtleSYmKGc9XCJcIitiLmtleSk7dmFyIGw9dm9pZCAwO2EudHlwZSYmYS50eXBlLmRlZmF1bHRQcm9wcyYmKGw9YS50eXBlLmRlZmF1bHRQcm9wcyk7Zm9yKGMgaW4gYilLLmNhbGwoYixjKSYmIUwuaGFzT3duUHJvcGVydHkoYykmJihlW2NdPXZvaWQgMD09PWJbY10mJnZvaWQgMCE9PWw/bFtjXTpiW2NdKX1jPWFyZ3VtZW50cy5sZW5ndGgtMjtpZigxPT09YyllLmNoaWxkcmVuPWQ7ZWxzZSBpZigxPGMpe2w9QXJyYXkoYyk7Zm9yKHZhciBtPTA7bTxjO20rKylsW21dPWFyZ3VtZW50c1ttKzJdO2UuY2hpbGRyZW49bH1yZXR1cm57JCR0eXBlb2Y6cCx0eXBlOmEudHlwZSxrZXk6ZyxyZWY6aCxwcm9wczplLF9vd25lcjpmfX0sY3JlYXRlRmFjdG9yeTpmdW5jdGlvbihhKXt2YXIgYj1NLmJpbmQobnVsbCxhKTtiLnR5cGU9YTtyZXR1cm4gYn0saXNWYWxpZEVsZW1lbnQ6Tix2ZXJzaW9uOlwiMTYuOC42XCIsXG51bnN0YWJsZV9Db25jdXJyZW50TW9kZTp4LHVuc3RhYmxlX1Byb2ZpbGVyOnUsX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQ6e1JlYWN0Q3VycmVudERpc3BhdGNoZXI6SSxSZWFjdEN1cnJlbnRPd25lcjpKLGFzc2lnbjprfX0sWT17ZGVmYXVsdDpYfSxaPVkmJlh8fFk7bW9kdWxlLmV4cG9ydHM9Wi5kZWZhdWx0fHxaO1xuIiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYxNi44LjZcbiAqIHJlYWN0LWRvbS5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbi8qXG4gTW9kZXJuaXpyIDMuMC4wcHJlIChDdXN0b20gQnVpbGQpIHwgTUlUXG4qL1xuJ3VzZSBzdHJpY3QnO3ZhciBhYT1yZXF1aXJlKFwicmVhY3RcIiksbj1yZXF1aXJlKFwib2JqZWN0LWFzc2lnblwiKSxyPXJlcXVpcmUoXCJzY2hlZHVsZXJcIik7ZnVuY3Rpb24gYmEoYSxiLGMsZCxlLGYsZyxoKXtpZighYSl7YT12b2lkIDA7aWYodm9pZCAwPT09YilhPUVycm9yKFwiTWluaWZpZWQgZXhjZXB0aW9uIG9jY3VycmVkOyB1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgZm9yIHRoZSBmdWxsIGVycm9yIG1lc3NhZ2UgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy5cIik7ZWxzZXt2YXIgbD1bYyxkLGUsZixnLGhdLGs9MDthPUVycm9yKGIucmVwbGFjZSgvJXMvZyxmdW5jdGlvbigpe3JldHVybiBsW2srK119KSk7YS5uYW1lPVwiSW52YXJpYW50IFZpb2xhdGlvblwifWEuZnJhbWVzVG9Qb3A9MTt0aHJvdyBhO319XG5mdW5jdGlvbiB4KGEpe2Zvcih2YXIgYj1hcmd1bWVudHMubGVuZ3RoLTEsYz1cImh0dHBzOi8vcmVhY3Rqcy5vcmcvZG9jcy9lcnJvci1kZWNvZGVyLmh0bWw/aW52YXJpYW50PVwiK2EsZD0wO2Q8YjtkKyspYys9XCImYXJnc1tdPVwiK2VuY29kZVVSSUNvbXBvbmVudChhcmd1bWVudHNbZCsxXSk7YmEoITEsXCJNaW5pZmllZCBSZWFjdCBlcnJvciAjXCIrYStcIjsgdmlzaXQgJXMgZm9yIHRoZSBmdWxsIG1lc3NhZ2Ugb3IgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50IGZvciBmdWxsIGVycm9ycyBhbmQgYWRkaXRpb25hbCBoZWxwZnVsIHdhcm5pbmdzLiBcIixjKX1hYT92b2lkIDA6eChcIjIyN1wiKTtmdW5jdGlvbiBjYShhLGIsYyxkLGUsZixnLGgsbCl7dmFyIGs9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLDMpO3RyeXtiLmFwcGx5KGMsayl9Y2F0Y2gobSl7dGhpcy5vbkVycm9yKG0pfX1cbnZhciBkYT0hMSxlYT1udWxsLGZhPSExLGhhPW51bGwsaWE9e29uRXJyb3I6ZnVuY3Rpb24oYSl7ZGE9ITA7ZWE9YX19O2Z1bmN0aW9uIGphKGEsYixjLGQsZSxmLGcsaCxsKXtkYT0hMTtlYT1udWxsO2NhLmFwcGx5KGlhLGFyZ3VtZW50cyl9ZnVuY3Rpb24ga2EoYSxiLGMsZCxlLGYsZyxoLGwpe2phLmFwcGx5KHRoaXMsYXJndW1lbnRzKTtpZihkYSl7aWYoZGEpe3ZhciBrPWVhO2RhPSExO2VhPW51bGx9ZWxzZSB4KFwiMTk4XCIpLGs9dm9pZCAwO2ZhfHwoZmE9ITAsaGE9ayl9fXZhciBsYT1udWxsLG1hPXt9O1xuZnVuY3Rpb24gbmEoKXtpZihsYSlmb3IodmFyIGEgaW4gbWEpe3ZhciBiPW1hW2FdLGM9bGEuaW5kZXhPZihhKTstMTxjP3ZvaWQgMDp4KFwiOTZcIixhKTtpZighb2FbY10pe2IuZXh0cmFjdEV2ZW50cz92b2lkIDA6eChcIjk3XCIsYSk7b2FbY109YjtjPWIuZXZlbnRUeXBlcztmb3IodmFyIGQgaW4gYyl7dmFyIGU9dm9pZCAwO3ZhciBmPWNbZF0sZz1iLGg9ZDtwYS5oYXNPd25Qcm9wZXJ0eShoKT94KFwiOTlcIixoKTp2b2lkIDA7cGFbaF09Zjt2YXIgbD1mLnBoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzO2lmKGwpe2ZvcihlIGluIGwpbC5oYXNPd25Qcm9wZXJ0eShlKSYmcWEobFtlXSxnLGgpO2U9ITB9ZWxzZSBmLnJlZ2lzdHJhdGlvbk5hbWU/KHFhKGYucmVnaXN0cmF0aW9uTmFtZSxnLGgpLGU9ITApOmU9ITE7ZT92b2lkIDA6eChcIjk4XCIsZCxhKX19fX1cbmZ1bmN0aW9uIHFhKGEsYixjKXtyYVthXT94KFwiMTAwXCIsYSk6dm9pZCAwO3JhW2FdPWI7c2FbYV09Yi5ldmVudFR5cGVzW2NdLmRlcGVuZGVuY2llc312YXIgb2E9W10scGE9e30scmE9e30sc2E9e30sdGE9bnVsbCx1YT1udWxsLHZhPW51bGw7ZnVuY3Rpb24gd2EoYSxiLGMpe3ZhciBkPWEudHlwZXx8XCJ1bmtub3duLWV2ZW50XCI7YS5jdXJyZW50VGFyZ2V0PXZhKGMpO2thKGQsYix2b2lkIDAsYSk7YS5jdXJyZW50VGFyZ2V0PW51bGx9ZnVuY3Rpb24geGEoYSxiKXtudWxsPT1iP3goXCIzMFwiKTp2b2lkIDA7aWYobnVsbD09YSlyZXR1cm4gYjtpZihBcnJheS5pc0FycmF5KGEpKXtpZihBcnJheS5pc0FycmF5KGIpKXJldHVybiBhLnB1c2guYXBwbHkoYSxiKSxhO2EucHVzaChiKTtyZXR1cm4gYX1yZXR1cm4gQXJyYXkuaXNBcnJheShiKT9bYV0uY29uY2F0KGIpOlthLGJdfVxuZnVuY3Rpb24geWEoYSxiLGMpe0FycmF5LmlzQXJyYXkoYSk/YS5mb3JFYWNoKGIsYyk6YSYmYi5jYWxsKGMsYSl9dmFyIHphPW51bGw7ZnVuY3Rpb24gQWEoYSl7aWYoYSl7dmFyIGI9YS5fZGlzcGF0Y2hMaXN0ZW5lcnMsYz1hLl9kaXNwYXRjaEluc3RhbmNlcztpZihBcnJheS5pc0FycmF5KGIpKWZvcih2YXIgZD0wO2Q8Yi5sZW5ndGgmJiFhLmlzUHJvcGFnYXRpb25TdG9wcGVkKCk7ZCsrKXdhKGEsYltkXSxjW2RdKTtlbHNlIGImJndhKGEsYixjKTthLl9kaXNwYXRjaExpc3RlbmVycz1udWxsO2EuX2Rpc3BhdGNoSW5zdGFuY2VzPW51bGw7YS5pc1BlcnNpc3RlbnQoKXx8YS5jb25zdHJ1Y3Rvci5yZWxlYXNlKGEpfX1cbnZhciBCYT17aW5qZWN0RXZlbnRQbHVnaW5PcmRlcjpmdW5jdGlvbihhKXtsYT94KFwiMTAxXCIpOnZvaWQgMDtsYT1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhKTtuYSgpfSxpbmplY3RFdmVudFBsdWdpbnNCeU5hbWU6ZnVuY3Rpb24oYSl7dmFyIGI9ITEsYztmb3IoYyBpbiBhKWlmKGEuaGFzT3duUHJvcGVydHkoYykpe3ZhciBkPWFbY107bWEuaGFzT3duUHJvcGVydHkoYykmJm1hW2NdPT09ZHx8KG1hW2NdP3goXCIxMDJcIixjKTp2b2lkIDAsbWFbY109ZCxiPSEwKX1iJiZuYSgpfX07XG5mdW5jdGlvbiBDYShhLGIpe3ZhciBjPWEuc3RhdGVOb2RlO2lmKCFjKXJldHVybiBudWxsO3ZhciBkPXRhKGMpO2lmKCFkKXJldHVybiBudWxsO2M9ZFtiXTthOnN3aXRjaChiKXtjYXNlIFwib25DbGlja1wiOmNhc2UgXCJvbkNsaWNrQ2FwdHVyZVwiOmNhc2UgXCJvbkRvdWJsZUNsaWNrXCI6Y2FzZSBcIm9uRG91YmxlQ2xpY2tDYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VEb3duXCI6Y2FzZSBcIm9uTW91c2VEb3duQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlTW92ZVwiOmNhc2UgXCJvbk1vdXNlTW92ZUNhcHR1cmVcIjpjYXNlIFwib25Nb3VzZVVwXCI6Y2FzZSBcIm9uTW91c2VVcENhcHR1cmVcIjooZD0hZC5kaXNhYmxlZCl8fChhPWEudHlwZSxkPSEoXCJidXR0b25cIj09PWF8fFwiaW5wdXRcIj09PWF8fFwic2VsZWN0XCI9PT1hfHxcInRleHRhcmVhXCI9PT1hKSk7YT0hZDticmVhayBhO2RlZmF1bHQ6YT0hMX1pZihhKXJldHVybiBudWxsO2MmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBjP3goXCIyMzFcIixiLHR5cGVvZiBjKTp2b2lkIDA7XG5yZXR1cm4gY31mdW5jdGlvbiBEYShhKXtudWxsIT09YSYmKHphPXhhKHphLGEpKTthPXphO3phPW51bGw7aWYoYSYmKHlhKGEsQWEpLHphP3goXCI5NVwiKTp2b2lkIDAsZmEpKXRocm93IGE9aGEsZmE9ITEsaGE9bnVsbCxhO312YXIgRWE9TWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc2xpY2UoMiksRmE9XCJfX3JlYWN0SW50ZXJuYWxJbnN0YW5jZSRcIitFYSxHYT1cIl9fcmVhY3RFdmVudEhhbmRsZXJzJFwiK0VhO2Z1bmN0aW9uIEhhKGEpe2lmKGFbRmFdKXJldHVybiBhW0ZhXTtmb3IoOyFhW0ZhXTspaWYoYS5wYXJlbnROb2RlKWE9YS5wYXJlbnROb2RlO2Vsc2UgcmV0dXJuIG51bGw7YT1hW0ZhXTtyZXR1cm4gNT09PWEudGFnfHw2PT09YS50YWc/YTpudWxsfWZ1bmN0aW9uIElhKGEpe2E9YVtGYV07cmV0dXJuIWF8fDUhPT1hLnRhZyYmNiE9PWEudGFnP251bGw6YX1cbmZ1bmN0aW9uIEphKGEpe2lmKDU9PT1hLnRhZ3x8Nj09PWEudGFnKXJldHVybiBhLnN0YXRlTm9kZTt4KFwiMzNcIil9ZnVuY3Rpb24gS2EoYSl7cmV0dXJuIGFbR2FdfHxudWxsfWZ1bmN0aW9uIExhKGEpe2RvIGE9YS5yZXR1cm47d2hpbGUoYSYmNSE9PWEudGFnKTtyZXR1cm4gYT9hOm51bGx9ZnVuY3Rpb24gTWEoYSxiLGMpe2lmKGI9Q2EoYSxjLmRpc3BhdGNoQ29uZmlnLnBoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzW2JdKSljLl9kaXNwYXRjaExpc3RlbmVycz14YShjLl9kaXNwYXRjaExpc3RlbmVycyxiKSxjLl9kaXNwYXRjaEluc3RhbmNlcz14YShjLl9kaXNwYXRjaEluc3RhbmNlcyxhKX1cbmZ1bmN0aW9uIE5hKGEpe2lmKGEmJmEuZGlzcGF0Y2hDb25maWcucGhhc2VkUmVnaXN0cmF0aW9uTmFtZXMpe2Zvcih2YXIgYj1hLl90YXJnZXRJbnN0LGM9W107YjspYy5wdXNoKGIpLGI9TGEoYik7Zm9yKGI9Yy5sZW5ndGg7MDxiLS07KU1hKGNbYl0sXCJjYXB0dXJlZFwiLGEpO2ZvcihiPTA7YjxjLmxlbmd0aDtiKyspTWEoY1tiXSxcImJ1YmJsZWRcIixhKX19ZnVuY3Rpb24gT2EoYSxiLGMpe2EmJmMmJmMuZGlzcGF0Y2hDb25maWcucmVnaXN0cmF0aW9uTmFtZSYmKGI9Q2EoYSxjLmRpc3BhdGNoQ29uZmlnLnJlZ2lzdHJhdGlvbk5hbWUpKSYmKGMuX2Rpc3BhdGNoTGlzdGVuZXJzPXhhKGMuX2Rpc3BhdGNoTGlzdGVuZXJzLGIpLGMuX2Rpc3BhdGNoSW5zdGFuY2VzPXhhKGMuX2Rpc3BhdGNoSW5zdGFuY2VzLGEpKX1mdW5jdGlvbiBQYShhKXthJiZhLmRpc3BhdGNoQ29uZmlnLnJlZ2lzdHJhdGlvbk5hbWUmJk9hKGEuX3RhcmdldEluc3QsbnVsbCxhKX1cbmZ1bmN0aW9uIFFhKGEpe3lhKGEsTmEpfXZhciBSYT0hKFwidW5kZWZpbmVkXCI9PT10eXBlb2Ygd2luZG93fHwhd2luZG93LmRvY3VtZW50fHwhd2luZG93LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQpO2Z1bmN0aW9uIFNhKGEsYil7dmFyIGM9e307Y1thLnRvTG93ZXJDYXNlKCldPWIudG9Mb3dlckNhc2UoKTtjW1wiV2Via2l0XCIrYV09XCJ3ZWJraXRcIitiO2NbXCJNb3pcIithXT1cIm1velwiK2I7cmV0dXJuIGN9dmFyIFRhPXthbmltYXRpb25lbmQ6U2EoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvbkVuZFwiKSxhbmltYXRpb25pdGVyYXRpb246U2EoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvbkl0ZXJhdGlvblwiKSxhbmltYXRpb25zdGFydDpTYShcIkFuaW1hdGlvblwiLFwiQW5pbWF0aW9uU3RhcnRcIiksdHJhbnNpdGlvbmVuZDpTYShcIlRyYW5zaXRpb25cIixcIlRyYW5zaXRpb25FbmRcIil9LFVhPXt9LFZhPXt9O1xuUmEmJihWYT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLnN0eWxlLFwiQW5pbWF0aW9uRXZlbnRcImluIHdpbmRvd3x8KGRlbGV0ZSBUYS5hbmltYXRpb25lbmQuYW5pbWF0aW9uLGRlbGV0ZSBUYS5hbmltYXRpb25pdGVyYXRpb24uYW5pbWF0aW9uLGRlbGV0ZSBUYS5hbmltYXRpb25zdGFydC5hbmltYXRpb24pLFwiVHJhbnNpdGlvbkV2ZW50XCJpbiB3aW5kb3d8fGRlbGV0ZSBUYS50cmFuc2l0aW9uZW5kLnRyYW5zaXRpb24pO2Z1bmN0aW9uIFdhKGEpe2lmKFVhW2FdKXJldHVybiBVYVthXTtpZighVGFbYV0pcmV0dXJuIGE7dmFyIGI9VGFbYV0sYztmb3IoYyBpbiBiKWlmKGIuaGFzT3duUHJvcGVydHkoYykmJmMgaW4gVmEpcmV0dXJuIFVhW2FdPWJbY107cmV0dXJuIGF9XG52YXIgWGE9V2EoXCJhbmltYXRpb25lbmRcIiksWWE9V2EoXCJhbmltYXRpb25pdGVyYXRpb25cIiksWmE9V2EoXCJhbmltYXRpb25zdGFydFwiKSwkYT1XYShcInRyYW5zaXRpb25lbmRcIiksYWI9XCJhYm9ydCBjYW5wbGF5IGNhbnBsYXl0aHJvdWdoIGR1cmF0aW9uY2hhbmdlIGVtcHRpZWQgZW5jcnlwdGVkIGVuZGVkIGVycm9yIGxvYWRlZGRhdGEgbG9hZGVkbWV0YWRhdGEgbG9hZHN0YXJ0IHBhdXNlIHBsYXkgcGxheWluZyBwcm9ncmVzcyByYXRlY2hhbmdlIHNlZWtlZCBzZWVraW5nIHN0YWxsZWQgc3VzcGVuZCB0aW1ldXBkYXRlIHZvbHVtZWNoYW5nZSB3YWl0aW5nXCIuc3BsaXQoXCIgXCIpLGJiPW51bGwsY2I9bnVsbCxkYj1udWxsO1xuZnVuY3Rpb24gZWIoKXtpZihkYilyZXR1cm4gZGI7dmFyIGEsYj1jYixjPWIubGVuZ3RoLGQsZT1cInZhbHVlXCJpbiBiYj9iYi52YWx1ZTpiYi50ZXh0Q29udGVudCxmPWUubGVuZ3RoO2ZvcihhPTA7YTxjJiZiW2FdPT09ZVthXTthKyspO3ZhciBnPWMtYTtmb3IoZD0xO2Q8PWcmJmJbYy1kXT09PWVbZi1kXTtkKyspO3JldHVybiBkYj1lLnNsaWNlKGEsMTxkPzEtZDp2b2lkIDApfWZ1bmN0aW9uIGZiKCl7cmV0dXJuITB9ZnVuY3Rpb24gZ2IoKXtyZXR1cm4hMX1cbmZ1bmN0aW9uIHkoYSxiLGMsZCl7dGhpcy5kaXNwYXRjaENvbmZpZz1hO3RoaXMuX3RhcmdldEluc3Q9Yjt0aGlzLm5hdGl2ZUV2ZW50PWM7YT10aGlzLmNvbnN0cnVjdG9yLkludGVyZmFjZTtmb3IodmFyIGUgaW4gYSlhLmhhc093blByb3BlcnR5KGUpJiYoKGI9YVtlXSk/dGhpc1tlXT1iKGMpOlwidGFyZ2V0XCI9PT1lP3RoaXMudGFyZ2V0PWQ6dGhpc1tlXT1jW2VdKTt0aGlzLmlzRGVmYXVsdFByZXZlbnRlZD0obnVsbCE9Yy5kZWZhdWx0UHJldmVudGVkP2MuZGVmYXVsdFByZXZlbnRlZDohMT09PWMucmV0dXJuVmFsdWUpP2ZiOmdiO3RoaXMuaXNQcm9wYWdhdGlvblN0b3BwZWQ9Z2I7cmV0dXJuIHRoaXN9XG5uKHkucHJvdG90eXBlLHtwcmV2ZW50RGVmYXVsdDpmdW5jdGlvbigpe3RoaXMuZGVmYXVsdFByZXZlbnRlZD0hMDt2YXIgYT10aGlzLm5hdGl2ZUV2ZW50O2EmJihhLnByZXZlbnREZWZhdWx0P2EucHJldmVudERlZmF1bHQoKTpcInVua25vd25cIiE9PXR5cGVvZiBhLnJldHVyblZhbHVlJiYoYS5yZXR1cm5WYWx1ZT0hMSksdGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQ9ZmIpfSxzdG9wUHJvcGFnYXRpb246ZnVuY3Rpb24oKXt2YXIgYT10aGlzLm5hdGl2ZUV2ZW50O2EmJihhLnN0b3BQcm9wYWdhdGlvbj9hLnN0b3BQcm9wYWdhdGlvbigpOlwidW5rbm93blwiIT09dHlwZW9mIGEuY2FuY2VsQnViYmxlJiYoYS5jYW5jZWxCdWJibGU9ITApLHRoaXMuaXNQcm9wYWdhdGlvblN0b3BwZWQ9ZmIpfSxwZXJzaXN0OmZ1bmN0aW9uKCl7dGhpcy5pc1BlcnNpc3RlbnQ9ZmJ9LGlzUGVyc2lzdGVudDpnYixkZXN0cnVjdG9yOmZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5jb25zdHJ1Y3Rvci5JbnRlcmZhY2UsXG5iO2ZvcihiIGluIGEpdGhpc1tiXT1udWxsO3RoaXMubmF0aXZlRXZlbnQ9dGhpcy5fdGFyZ2V0SW5zdD10aGlzLmRpc3BhdGNoQ29uZmlnPW51bGw7dGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZD10aGlzLmlzRGVmYXVsdFByZXZlbnRlZD1nYjt0aGlzLl9kaXNwYXRjaEluc3RhbmNlcz10aGlzLl9kaXNwYXRjaExpc3RlbmVycz1udWxsfX0pO3kuSW50ZXJmYWNlPXt0eXBlOm51bGwsdGFyZ2V0Om51bGwsY3VycmVudFRhcmdldDpmdW5jdGlvbigpe3JldHVybiBudWxsfSxldmVudFBoYXNlOm51bGwsYnViYmxlczpudWxsLGNhbmNlbGFibGU6bnVsbCx0aW1lU3RhbXA6ZnVuY3Rpb24oYSl7cmV0dXJuIGEudGltZVN0YW1wfHxEYXRlLm5vdygpfSxkZWZhdWx0UHJldmVudGVkOm51bGwsaXNUcnVzdGVkOm51bGx9O1xueS5leHRlbmQ9ZnVuY3Rpb24oYSl7ZnVuY3Rpb24gYigpe31mdW5jdGlvbiBjKCl7cmV0dXJuIGQuYXBwbHkodGhpcyxhcmd1bWVudHMpfXZhciBkPXRoaXM7Yi5wcm90b3R5cGU9ZC5wcm90b3R5cGU7dmFyIGU9bmV3IGI7bihlLGMucHJvdG90eXBlKTtjLnByb3RvdHlwZT1lO2MucHJvdG90eXBlLmNvbnN0cnVjdG9yPWM7Yy5JbnRlcmZhY2U9bih7fSxkLkludGVyZmFjZSxhKTtjLmV4dGVuZD1kLmV4dGVuZDtoYihjKTtyZXR1cm4gY307aGIoeSk7ZnVuY3Rpb24gaWIoYSxiLGMsZCl7aWYodGhpcy5ldmVudFBvb2wubGVuZ3RoKXt2YXIgZT10aGlzLmV2ZW50UG9vbC5wb3AoKTt0aGlzLmNhbGwoZSxhLGIsYyxkKTtyZXR1cm4gZX1yZXR1cm4gbmV3IHRoaXMoYSxiLGMsZCl9ZnVuY3Rpb24gamIoYSl7YSBpbnN0YW5jZW9mIHRoaXM/dm9pZCAwOngoXCIyNzlcIik7YS5kZXN0cnVjdG9yKCk7MTA+dGhpcy5ldmVudFBvb2wubGVuZ3RoJiZ0aGlzLmV2ZW50UG9vbC5wdXNoKGEpfVxuZnVuY3Rpb24gaGIoYSl7YS5ldmVudFBvb2w9W107YS5nZXRQb29sZWQ9aWI7YS5yZWxlYXNlPWpifXZhciBrYj15LmV4dGVuZCh7ZGF0YTpudWxsfSksbGI9eS5leHRlbmQoe2RhdGE6bnVsbH0pLG1iPVs5LDEzLDI3LDMyXSxuYj1SYSYmXCJDb21wb3NpdGlvbkV2ZW50XCJpbiB3aW5kb3csb2I9bnVsbDtSYSYmXCJkb2N1bWVudE1vZGVcImluIGRvY3VtZW50JiYob2I9ZG9jdW1lbnQuZG9jdW1lbnRNb2RlKTtcbnZhciBwYj1SYSYmXCJUZXh0RXZlbnRcImluIHdpbmRvdyYmIW9iLHFiPVJhJiYoIW5ifHxvYiYmODxvYiYmMTE+PW9iKSxyYj1TdHJpbmcuZnJvbUNoYXJDb2RlKDMyKSxzYj17YmVmb3JlSW5wdXQ6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25CZWZvcmVJbnB1dFwiLGNhcHR1cmVkOlwib25CZWZvcmVJbnB1dENhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOltcImNvbXBvc2l0aW9uZW5kXCIsXCJrZXlwcmVzc1wiLFwidGV4dElucHV0XCIsXCJwYXN0ZVwiXX0sY29tcG9zaXRpb25FbmQ6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25Db21wb3NpdGlvbkVuZFwiLGNhcHR1cmVkOlwib25Db21wb3NpdGlvbkVuZENhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlwiYmx1ciBjb21wb3NpdGlvbmVuZCBrZXlkb3duIGtleXByZXNzIGtleXVwIG1vdXNlZG93blwiLnNwbGl0KFwiIFwiKX0sY29tcG9zaXRpb25TdGFydDp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkNvbXBvc2l0aW9uU3RhcnRcIixcbmNhcHR1cmVkOlwib25Db21wb3NpdGlvblN0YXJ0Q2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJibHVyIGNvbXBvc2l0aW9uc3RhcnQga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBtb3VzZWRvd25cIi5zcGxpdChcIiBcIil9LGNvbXBvc2l0aW9uVXBkYXRlOntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uQ29tcG9zaXRpb25VcGRhdGVcIixjYXB0dXJlZDpcIm9uQ29tcG9zaXRpb25VcGRhdGVDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcImJsdXIgY29tcG9zaXRpb251cGRhdGUga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBtb3VzZWRvd25cIi5zcGxpdChcIiBcIil9fSx0Yj0hMTtcbmZ1bmN0aW9uIHViKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJrZXl1cFwiOnJldHVybi0xIT09bWIuaW5kZXhPZihiLmtleUNvZGUpO2Nhc2UgXCJrZXlkb3duXCI6cmV0dXJuIDIyOSE9PWIua2V5Q29kZTtjYXNlIFwia2V5cHJlc3NcIjpjYXNlIFwibW91c2Vkb3duXCI6Y2FzZSBcImJsdXJcIjpyZXR1cm4hMDtkZWZhdWx0OnJldHVybiExfX1mdW5jdGlvbiB2YihhKXthPWEuZGV0YWlsO3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmXCJkYXRhXCJpbiBhP2EuZGF0YTpudWxsfXZhciB3Yj0hMTtmdW5jdGlvbiB4YihhLGIpe3N3aXRjaChhKXtjYXNlIFwiY29tcG9zaXRpb25lbmRcIjpyZXR1cm4gdmIoYik7Y2FzZSBcImtleXByZXNzXCI6aWYoMzIhPT1iLndoaWNoKXJldHVybiBudWxsO3RiPSEwO3JldHVybiByYjtjYXNlIFwidGV4dElucHV0XCI6cmV0dXJuIGE9Yi5kYXRhLGE9PT1yYiYmdGI/bnVsbDphO2RlZmF1bHQ6cmV0dXJuIG51bGx9fVxuZnVuY3Rpb24geWIoYSxiKXtpZih3YilyZXR1cm5cImNvbXBvc2l0aW9uZW5kXCI9PT1hfHwhbmImJnViKGEsYik/KGE9ZWIoKSxkYj1jYj1iYj1udWxsLHdiPSExLGEpOm51bGw7c3dpdGNoKGEpe2Nhc2UgXCJwYXN0ZVwiOnJldHVybiBudWxsO2Nhc2UgXCJrZXlwcmVzc1wiOmlmKCEoYi5jdHJsS2V5fHxiLmFsdEtleXx8Yi5tZXRhS2V5KXx8Yi5jdHJsS2V5JiZiLmFsdEtleSl7aWYoYi5jaGFyJiYxPGIuY2hhci5sZW5ndGgpcmV0dXJuIGIuY2hhcjtpZihiLndoaWNoKXJldHVybiBTdHJpbmcuZnJvbUNoYXJDb2RlKGIud2hpY2gpfXJldHVybiBudWxsO2Nhc2UgXCJjb21wb3NpdGlvbmVuZFwiOnJldHVybiBxYiYmXCJrb1wiIT09Yi5sb2NhbGU/bnVsbDpiLmRhdGE7ZGVmYXVsdDpyZXR1cm4gbnVsbH19XG52YXIgemI9e2V2ZW50VHlwZXM6c2IsZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT12b2lkIDA7dmFyIGY9dm9pZCAwO2lmKG5iKWI6e3N3aXRjaChhKXtjYXNlIFwiY29tcG9zaXRpb25zdGFydFwiOmU9c2IuY29tcG9zaXRpb25TdGFydDticmVhayBiO2Nhc2UgXCJjb21wb3NpdGlvbmVuZFwiOmU9c2IuY29tcG9zaXRpb25FbmQ7YnJlYWsgYjtjYXNlIFwiY29tcG9zaXRpb251cGRhdGVcIjplPXNiLmNvbXBvc2l0aW9uVXBkYXRlO2JyZWFrIGJ9ZT12b2lkIDB9ZWxzZSB3Yj91YihhLGMpJiYoZT1zYi5jb21wb3NpdGlvbkVuZCk6XCJrZXlkb3duXCI9PT1hJiYyMjk9PT1jLmtleUNvZGUmJihlPXNiLmNvbXBvc2l0aW9uU3RhcnQpO2U/KHFiJiZcImtvXCIhPT1jLmxvY2FsZSYmKHdifHxlIT09c2IuY29tcG9zaXRpb25TdGFydD9lPT09c2IuY29tcG9zaXRpb25FbmQmJndiJiYoZj1lYigpKTooYmI9ZCxjYj1cInZhbHVlXCJpbiBiYj9iYi52YWx1ZTpiYi50ZXh0Q29udGVudCx3Yj1cbiEwKSksZT1rYi5nZXRQb29sZWQoZSxiLGMsZCksZj9lLmRhdGE9ZjooZj12YihjKSxudWxsIT09ZiYmKGUuZGF0YT1mKSksUWEoZSksZj1lKTpmPW51bGw7KGE9cGI/eGIoYSxjKTp5YihhLGMpKT8oYj1sYi5nZXRQb29sZWQoc2IuYmVmb3JlSW5wdXQsYixjLGQpLGIuZGF0YT1hLFFhKGIpKTpiPW51bGw7cmV0dXJuIG51bGw9PT1mP2I6bnVsbD09PWI/ZjpbZixiXX19LEFiPW51bGwsQmI9bnVsbCxDYj1udWxsO2Z1bmN0aW9uIERiKGEpe2lmKGE9dWEoYSkpe1wiZnVuY3Rpb25cIiE9PXR5cGVvZiBBYj94KFwiMjgwXCIpOnZvaWQgMDt2YXIgYj10YShhLnN0YXRlTm9kZSk7QWIoYS5zdGF0ZU5vZGUsYS50eXBlLGIpfX1mdW5jdGlvbiBFYihhKXtCYj9DYj9DYi5wdXNoKGEpOkNiPVthXTpCYj1hfWZ1bmN0aW9uIEZiKCl7aWYoQmIpe3ZhciBhPUJiLGI9Q2I7Q2I9QmI9bnVsbDtEYihhKTtpZihiKWZvcihhPTA7YTxiLmxlbmd0aDthKyspRGIoYlthXSl9fVxuZnVuY3Rpb24gR2IoYSxiKXtyZXR1cm4gYShiKX1mdW5jdGlvbiBIYihhLGIsYyl7cmV0dXJuIGEoYixjKX1mdW5jdGlvbiBJYigpe312YXIgSmI9ITE7ZnVuY3Rpb24gS2IoYSxiKXtpZihKYilyZXR1cm4gYShiKTtKYj0hMDt0cnl7cmV0dXJuIEdiKGEsYil9ZmluYWxseXtpZihKYj0hMSxudWxsIT09QmJ8fG51bGwhPT1DYilJYigpLEZiKCl9fXZhciBMYj17Y29sb3I6ITAsZGF0ZTohMCxkYXRldGltZTohMCxcImRhdGV0aW1lLWxvY2FsXCI6ITAsZW1haWw6ITAsbW9udGg6ITAsbnVtYmVyOiEwLHBhc3N3b3JkOiEwLHJhbmdlOiEwLHNlYXJjaDohMCx0ZWw6ITAsdGV4dDohMCx0aW1lOiEwLHVybDohMCx3ZWVrOiEwfTtmdW5jdGlvbiBNYihhKXt2YXIgYj1hJiZhLm5vZGVOYW1lJiZhLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7cmV0dXJuXCJpbnB1dFwiPT09Yj8hIUxiW2EudHlwZV06XCJ0ZXh0YXJlYVwiPT09Yj8hMDohMX1cbmZ1bmN0aW9uIE5iKGEpe2E9YS50YXJnZXR8fGEuc3JjRWxlbWVudHx8d2luZG93O2EuY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQmJihhPWEuY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQpO3JldHVybiAzPT09YS5ub2RlVHlwZT9hLnBhcmVudE5vZGU6YX1mdW5jdGlvbiBPYihhKXtpZighUmEpcmV0dXJuITE7YT1cIm9uXCIrYTt2YXIgYj1hIGluIGRvY3VtZW50O2J8fChiPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiksYi5zZXRBdHRyaWJ1dGUoYSxcInJldHVybjtcIiksYj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgYlthXSk7cmV0dXJuIGJ9ZnVuY3Rpb24gUGIoYSl7dmFyIGI9YS50eXBlO3JldHVybihhPWEubm9kZU5hbWUpJiZcImlucHV0XCI9PT1hLnRvTG93ZXJDYXNlKCkmJihcImNoZWNrYm94XCI9PT1ifHxcInJhZGlvXCI9PT1iKX1cbmZ1bmN0aW9uIFFiKGEpe3ZhciBiPVBiKGEpP1wiY2hlY2tlZFwiOlwidmFsdWVcIixjPU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoYS5jb25zdHJ1Y3Rvci5wcm90b3R5cGUsYiksZD1cIlwiK2FbYl07aWYoIWEuaGFzT3duUHJvcGVydHkoYikmJlwidW5kZWZpbmVkXCIhPT10eXBlb2YgYyYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGMuZ2V0JiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy5zZXQpe3ZhciBlPWMuZ2V0LGY9Yy5zZXQ7T2JqZWN0LmRlZmluZVByb3BlcnR5KGEsYix7Y29uZmlndXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBlLmNhbGwodGhpcyl9LHNldDpmdW5jdGlvbihhKXtkPVwiXCIrYTtmLmNhbGwodGhpcyxhKX19KTtPYmplY3QuZGVmaW5lUHJvcGVydHkoYSxiLHtlbnVtZXJhYmxlOmMuZW51bWVyYWJsZX0pO3JldHVybntnZXRWYWx1ZTpmdW5jdGlvbigpe3JldHVybiBkfSxzZXRWYWx1ZTpmdW5jdGlvbihhKXtkPVwiXCIrYX0sc3RvcFRyYWNraW5nOmZ1bmN0aW9uKCl7YS5fdmFsdWVUcmFja2VyPVxubnVsbDtkZWxldGUgYVtiXX19fX1mdW5jdGlvbiBSYihhKXthLl92YWx1ZVRyYWNrZXJ8fChhLl92YWx1ZVRyYWNrZXI9UWIoYSkpfWZ1bmN0aW9uIFNiKGEpe2lmKCFhKXJldHVybiExO3ZhciBiPWEuX3ZhbHVlVHJhY2tlcjtpZighYilyZXR1cm4hMDt2YXIgYz1iLmdldFZhbHVlKCk7dmFyIGQ9XCJcIjthJiYoZD1QYihhKT9hLmNoZWNrZWQ/XCJ0cnVlXCI6XCJmYWxzZVwiOmEudmFsdWUpO2E9ZDtyZXR1cm4gYSE9PWM/KGIuc2V0VmFsdWUoYSksITApOiExfXZhciBUYj1hYS5fX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRDtUYi5oYXNPd25Qcm9wZXJ0eShcIlJlYWN0Q3VycmVudERpc3BhdGNoZXJcIil8fChUYi5SZWFjdEN1cnJlbnREaXNwYXRjaGVyPXtjdXJyZW50Om51bGx9KTtcbnZhciBVYj0vXiguKilbXFxcXFxcL10vLHo9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLmZvcixWYj16P1N5bWJvbC5mb3IoXCJyZWFjdC5lbGVtZW50XCIpOjYwMTAzLFdiPXo/U3ltYm9sLmZvcihcInJlYWN0LnBvcnRhbFwiKTo2MDEwNixYYj16P1N5bWJvbC5mb3IoXCJyZWFjdC5mcmFnbWVudFwiKTo2MDEwNyxZYj16P1N5bWJvbC5mb3IoXCJyZWFjdC5zdHJpY3RfbW9kZVwiKTo2MDEwOCxaYj16P1N5bWJvbC5mb3IoXCJyZWFjdC5wcm9maWxlclwiKTo2MDExNCwkYj16P1N5bWJvbC5mb3IoXCJyZWFjdC5wcm92aWRlclwiKTo2MDEwOSxhYz16P1N5bWJvbC5mb3IoXCJyZWFjdC5jb250ZXh0XCIpOjYwMTEwLGJjPXo/U3ltYm9sLmZvcihcInJlYWN0LmNvbmN1cnJlbnRfbW9kZVwiKTo2MDExMSxjYz16P1N5bWJvbC5mb3IoXCJyZWFjdC5mb3J3YXJkX3JlZlwiKTo2MDExMixkYz16P1N5bWJvbC5mb3IoXCJyZWFjdC5zdXNwZW5zZVwiKTo2MDExMyxlYz16P1N5bWJvbC5mb3IoXCJyZWFjdC5tZW1vXCIpOlxuNjAxMTUsZmM9ej9TeW1ib2wuZm9yKFwicmVhY3QubGF6eVwiKTo2MDExNixnYz1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuaXRlcmF0b3I7ZnVuY3Rpb24gaGMoYSl7aWYobnVsbD09PWF8fFwib2JqZWN0XCIhPT10eXBlb2YgYSlyZXR1cm4gbnVsbDthPWdjJiZhW2djXXx8YVtcIkBAaXRlcmF0b3JcIl07cmV0dXJuXCJmdW5jdGlvblwiPT09dHlwZW9mIGE/YTpudWxsfVxuZnVuY3Rpb24gaWMoYSl7aWYobnVsbD09YSlyZXR1cm4gbnVsbDtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSlyZXR1cm4gYS5kaXNwbGF5TmFtZXx8YS5uYW1lfHxudWxsO2lmKFwic3RyaW5nXCI9PT10eXBlb2YgYSlyZXR1cm4gYTtzd2l0Y2goYSl7Y2FzZSBiYzpyZXR1cm5cIkNvbmN1cnJlbnRNb2RlXCI7Y2FzZSBYYjpyZXR1cm5cIkZyYWdtZW50XCI7Y2FzZSBXYjpyZXR1cm5cIlBvcnRhbFwiO2Nhc2UgWmI6cmV0dXJuXCJQcm9maWxlclwiO2Nhc2UgWWI6cmV0dXJuXCJTdHJpY3RNb2RlXCI7Y2FzZSBkYzpyZXR1cm5cIlN1c3BlbnNlXCJ9aWYoXCJvYmplY3RcIj09PXR5cGVvZiBhKXN3aXRjaChhLiQkdHlwZW9mKXtjYXNlIGFjOnJldHVyblwiQ29udGV4dC5Db25zdW1lclwiO2Nhc2UgJGI6cmV0dXJuXCJDb250ZXh0LlByb3ZpZGVyXCI7Y2FzZSBjYzp2YXIgYj1hLnJlbmRlcjtiPWIuZGlzcGxheU5hbWV8fGIubmFtZXx8XCJcIjtyZXR1cm4gYS5kaXNwbGF5TmFtZXx8KFwiXCIhPT1iP1wiRm9yd2FyZFJlZihcIitiK1xuXCIpXCI6XCJGb3J3YXJkUmVmXCIpO2Nhc2UgZWM6cmV0dXJuIGljKGEudHlwZSk7Y2FzZSBmYzppZihhPTE9PT1hLl9zdGF0dXM/YS5fcmVzdWx0Om51bGwpcmV0dXJuIGljKGEpfXJldHVybiBudWxsfWZ1bmN0aW9uIGpjKGEpe3ZhciBiPVwiXCI7ZG97YTpzd2l0Y2goYS50YWcpe2Nhc2UgMzpjYXNlIDQ6Y2FzZSA2OmNhc2UgNzpjYXNlIDEwOmNhc2UgOTp2YXIgYz1cIlwiO2JyZWFrIGE7ZGVmYXVsdDp2YXIgZD1hLl9kZWJ1Z093bmVyLGU9YS5fZGVidWdTb3VyY2UsZj1pYyhhLnR5cGUpO2M9bnVsbDtkJiYoYz1pYyhkLnR5cGUpKTtkPWY7Zj1cIlwiO2U/Zj1cIiAoYXQgXCIrZS5maWxlTmFtZS5yZXBsYWNlKFViLFwiXCIpK1wiOlwiK2UubGluZU51bWJlcitcIilcIjpjJiYoZj1cIiAoY3JlYXRlZCBieSBcIitjK1wiKVwiKTtjPVwiXFxuICAgIGluIFwiKyhkfHxcIlVua25vd25cIikrZn1iKz1jO2E9YS5yZXR1cm59d2hpbGUoYSk7cmV0dXJuIGJ9XG52YXIga2M9L15bOkEtWl9hLXpcXHUwMEMwLVxcdTAwRDZcXHUwMEQ4LVxcdTAwRjZcXHUwMEY4LVxcdTAyRkZcXHUwMzcwLVxcdTAzN0RcXHUwMzdGLVxcdTFGRkZcXHUyMDBDLVxcdTIwMERcXHUyMDcwLVxcdTIxOEZcXHUyQzAwLVxcdTJGRUZcXHUzMDAxLVxcdUQ3RkZcXHVGOTAwLVxcdUZEQ0ZcXHVGREYwLVxcdUZGRkRdWzpBLVpfYS16XFx1MDBDMC1cXHUwMEQ2XFx1MDBEOC1cXHUwMEY2XFx1MDBGOC1cXHUwMkZGXFx1MDM3MC1cXHUwMzdEXFx1MDM3Ri1cXHUxRkZGXFx1MjAwQy1cXHUyMDBEXFx1MjA3MC1cXHUyMThGXFx1MkMwMC1cXHUyRkVGXFx1MzAwMS1cXHVEN0ZGXFx1RjkwMC1cXHVGRENGXFx1RkRGMC1cXHVGRkZEXFwtLjAtOVxcdTAwQjdcXHUwMzAwLVxcdTAzNkZcXHUyMDNGLVxcdTIwNDBdKiQvLGxjPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHksbWM9e30sbmM9e307XG5mdW5jdGlvbiBvYyhhKXtpZihsYy5jYWxsKG5jLGEpKXJldHVybiEwO2lmKGxjLmNhbGwobWMsYSkpcmV0dXJuITE7aWYoa2MudGVzdChhKSlyZXR1cm4gbmNbYV09ITA7bWNbYV09ITA7cmV0dXJuITF9ZnVuY3Rpb24gcGMoYSxiLGMsZCl7aWYobnVsbCE9PWMmJjA9PT1jLnR5cGUpcmV0dXJuITE7c3dpdGNoKHR5cGVvZiBiKXtjYXNlIFwiZnVuY3Rpb25cIjpjYXNlIFwic3ltYm9sXCI6cmV0dXJuITA7Y2FzZSBcImJvb2xlYW5cIjppZihkKXJldHVybiExO2lmKG51bGwhPT1jKXJldHVybiFjLmFjY2VwdHNCb29sZWFuczthPWEudG9Mb3dlckNhc2UoKS5zbGljZSgwLDUpO3JldHVyblwiZGF0YS1cIiE9PWEmJlwiYXJpYS1cIiE9PWE7ZGVmYXVsdDpyZXR1cm4hMX19XG5mdW5jdGlvbiBxYyhhLGIsYyxkKXtpZihudWxsPT09Ynx8XCJ1bmRlZmluZWRcIj09PXR5cGVvZiBifHxwYyhhLGIsYyxkKSlyZXR1cm4hMDtpZihkKXJldHVybiExO2lmKG51bGwhPT1jKXN3aXRjaChjLnR5cGUpe2Nhc2UgMzpyZXR1cm4hYjtjYXNlIDQ6cmV0dXJuITE9PT1iO2Nhc2UgNTpyZXR1cm4gaXNOYU4oYik7Y2FzZSA2OnJldHVybiBpc05hTihiKXx8MT5ifXJldHVybiExfWZ1bmN0aW9uIEMoYSxiLGMsZCxlKXt0aGlzLmFjY2VwdHNCb29sZWFucz0yPT09Ynx8Mz09PWJ8fDQ9PT1iO3RoaXMuYXR0cmlidXRlTmFtZT1kO3RoaXMuYXR0cmlidXRlTmFtZXNwYWNlPWU7dGhpcy5tdXN0VXNlUHJvcGVydHk9Yzt0aGlzLnByb3BlcnR5TmFtZT1hO3RoaXMudHlwZT1ifXZhciBEPXt9O1xuXCJjaGlsZHJlbiBkYW5nZXJvdXNseVNldElubmVySFRNTCBkZWZhdWx0VmFsdWUgZGVmYXVsdENoZWNrZWQgaW5uZXJIVE1MIHN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZyBzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmcgc3R5bGVcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBDKGEsMCwhMSxhLG51bGwpfSk7W1tcImFjY2VwdENoYXJzZXRcIixcImFjY2VwdC1jaGFyc2V0XCJdLFtcImNsYXNzTmFtZVwiLFwiY2xhc3NcIl0sW1wiaHRtbEZvclwiLFwiZm9yXCJdLFtcImh0dHBFcXVpdlwiLFwiaHR0cC1lcXVpdlwiXV0uZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hWzBdO0RbYl09bmV3IEMoYiwxLCExLGFbMV0sbnVsbCl9KTtbXCJjb250ZW50RWRpdGFibGVcIixcImRyYWdnYWJsZVwiLFwic3BlbGxDaGVja1wiLFwidmFsdWVcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBDKGEsMiwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCl9KTtcbltcImF1dG9SZXZlcnNlXCIsXCJleHRlcm5hbFJlc291cmNlc1JlcXVpcmVkXCIsXCJmb2N1c2FibGVcIixcInByZXNlcnZlQWxwaGFcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBDKGEsMiwhMSxhLG51bGwpfSk7XCJhbGxvd0Z1bGxTY3JlZW4gYXN5bmMgYXV0b0ZvY3VzIGF1dG9QbGF5IGNvbnRyb2xzIGRlZmF1bHQgZGVmZXIgZGlzYWJsZWQgZm9ybU5vVmFsaWRhdGUgaGlkZGVuIGxvb3Agbm9Nb2R1bGUgbm9WYWxpZGF0ZSBvcGVuIHBsYXlzSW5saW5lIHJlYWRPbmx5IHJlcXVpcmVkIHJldmVyc2VkIHNjb3BlZCBzZWFtbGVzcyBpdGVtU2NvcGVcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBDKGEsMywhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCl9KTtbXCJjaGVja2VkXCIsXCJtdWx0aXBsZVwiLFwibXV0ZWRcIixcInNlbGVjdGVkXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQyhhLDMsITAsYSxudWxsKX0pO1xuW1wiY2FwdHVyZVwiLFwiZG93bmxvYWRcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBDKGEsNCwhMSxhLG51bGwpfSk7W1wiY29sc1wiLFwicm93c1wiLFwic2l6ZVwiLFwic3BhblwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RbYV09bmV3IEMoYSw2LCExLGEsbnVsbCl9KTtbXCJyb3dTcGFuXCIsXCJzdGFydFwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RbYV09bmV3IEMoYSw1LCExLGEudG9Mb3dlckNhc2UoKSxudWxsKX0pO3ZhciByYz0vW1xcLTpdKFthLXpdKS9nO2Z1bmN0aW9uIHNjKGEpe3JldHVybiBhWzFdLnRvVXBwZXJDYXNlKCl9XG5cImFjY2VudC1oZWlnaHQgYWxpZ25tZW50LWJhc2VsaW5lIGFyYWJpYy1mb3JtIGJhc2VsaW5lLXNoaWZ0IGNhcC1oZWlnaHQgY2xpcC1wYXRoIGNsaXAtcnVsZSBjb2xvci1pbnRlcnBvbGF0aW9uIGNvbG9yLWludGVycG9sYXRpb24tZmlsdGVycyBjb2xvci1wcm9maWxlIGNvbG9yLXJlbmRlcmluZyBkb21pbmFudC1iYXNlbGluZSBlbmFibGUtYmFja2dyb3VuZCBmaWxsLW9wYWNpdHkgZmlsbC1ydWxlIGZsb29kLWNvbG9yIGZsb29kLW9wYWNpdHkgZm9udC1mYW1pbHkgZm9udC1zaXplIGZvbnQtc2l6ZS1hZGp1c3QgZm9udC1zdHJldGNoIGZvbnQtc3R5bGUgZm9udC12YXJpYW50IGZvbnQtd2VpZ2h0IGdseXBoLW5hbWUgZ2x5cGgtb3JpZW50YXRpb24taG9yaXpvbnRhbCBnbHlwaC1vcmllbnRhdGlvbi12ZXJ0aWNhbCBob3Jpei1hZHYteCBob3Jpei1vcmlnaW4teCBpbWFnZS1yZW5kZXJpbmcgbGV0dGVyLXNwYWNpbmcgbGlnaHRpbmctY29sb3IgbWFya2VyLWVuZCBtYXJrZXItbWlkIG1hcmtlci1zdGFydCBvdmVybGluZS1wb3NpdGlvbiBvdmVybGluZS10aGlja25lc3MgcGFpbnQtb3JkZXIgcGFub3NlLTEgcG9pbnRlci1ldmVudHMgcmVuZGVyaW5nLWludGVudCBzaGFwZS1yZW5kZXJpbmcgc3RvcC1jb2xvciBzdG9wLW9wYWNpdHkgc3RyaWtldGhyb3VnaC1wb3NpdGlvbiBzdHJpa2V0aHJvdWdoLXRoaWNrbmVzcyBzdHJva2UtZGFzaGFycmF5IHN0cm9rZS1kYXNob2Zmc2V0IHN0cm9rZS1saW5lY2FwIHN0cm9rZS1saW5lam9pbiBzdHJva2UtbWl0ZXJsaW1pdCBzdHJva2Utb3BhY2l0eSBzdHJva2Utd2lkdGggdGV4dC1hbmNob3IgdGV4dC1kZWNvcmF0aW9uIHRleHQtcmVuZGVyaW5nIHVuZGVybGluZS1wb3NpdGlvbiB1bmRlcmxpbmUtdGhpY2tuZXNzIHVuaWNvZGUtYmlkaSB1bmljb2RlLXJhbmdlIHVuaXRzLXBlci1lbSB2LWFscGhhYmV0aWMgdi1oYW5naW5nIHYtaWRlb2dyYXBoaWMgdi1tYXRoZW1hdGljYWwgdmVjdG9yLWVmZmVjdCB2ZXJ0LWFkdi15IHZlcnQtb3JpZ2luLXggdmVydC1vcmlnaW4teSB3b3JkLXNwYWNpbmcgd3JpdGluZy1tb2RlIHhtbG5zOnhsaW5rIHgtaGVpZ2h0XCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKHJjLFxuc2MpO0RbYl09bmV3IEMoYiwxLCExLGEsbnVsbCl9KTtcInhsaW5rOmFjdHVhdGUgeGxpbms6YXJjcm9sZSB4bGluazpocmVmIHhsaW5rOnJvbGUgeGxpbms6c2hvdyB4bGluazp0aXRsZSB4bGluazp0eXBlXCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKHJjLHNjKTtEW2JdPW5ldyBDKGIsMSwhMSxhLFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGlua1wiKX0pO1tcInhtbDpiYXNlXCIsXCJ4bWw6bGFuZ1wiLFwieG1sOnNwYWNlXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKHJjLHNjKTtEW2JdPW5ldyBDKGIsMSwhMSxhLFwiaHR0cDovL3d3dy53My5vcmcvWE1MLzE5OTgvbmFtZXNwYWNlXCIpfSk7W1widGFiSW5kZXhcIixcImNyb3NzT3JpZ2luXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQyhhLDEsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwpfSk7XG5mdW5jdGlvbiB0YyhhLGIsYyxkKXt2YXIgZT1ELmhhc093blByb3BlcnR5KGIpP0RbYl06bnVsbDt2YXIgZj1udWxsIT09ZT8wPT09ZS50eXBlOmQ/ITE6ISgyPGIubGVuZ3RoKXx8XCJvXCIhPT1iWzBdJiZcIk9cIiE9PWJbMF18fFwiblwiIT09YlsxXSYmXCJOXCIhPT1iWzFdPyExOiEwO2Z8fChxYyhiLGMsZSxkKSYmKGM9bnVsbCksZHx8bnVsbD09PWU/b2MoYikmJihudWxsPT09Yz9hLnJlbW92ZUF0dHJpYnV0ZShiKTphLnNldEF0dHJpYnV0ZShiLFwiXCIrYykpOmUubXVzdFVzZVByb3BlcnR5P2FbZS5wcm9wZXJ0eU5hbWVdPW51bGw9PT1jPzM9PT1lLnR5cGU/ITE6XCJcIjpjOihiPWUuYXR0cmlidXRlTmFtZSxkPWUuYXR0cmlidXRlTmFtZXNwYWNlLG51bGw9PT1jP2EucmVtb3ZlQXR0cmlidXRlKGIpOihlPWUudHlwZSxjPTM9PT1lfHw0PT09ZSYmITA9PT1jP1wiXCI6XCJcIitjLGQ/YS5zZXRBdHRyaWJ1dGVOUyhkLGIsYyk6YS5zZXRBdHRyaWJ1dGUoYixjKSkpKX1cbmZ1bmN0aW9uIHVjKGEpe3N3aXRjaCh0eXBlb2YgYSl7Y2FzZSBcImJvb2xlYW5cIjpjYXNlIFwibnVtYmVyXCI6Y2FzZSBcIm9iamVjdFwiOmNhc2UgXCJzdHJpbmdcIjpjYXNlIFwidW5kZWZpbmVkXCI6cmV0dXJuIGE7ZGVmYXVsdDpyZXR1cm5cIlwifX1mdW5jdGlvbiB2YyhhLGIpe3ZhciBjPWIuY2hlY2tlZDtyZXR1cm4gbih7fSxiLHtkZWZhdWx0Q2hlY2tlZDp2b2lkIDAsZGVmYXVsdFZhbHVlOnZvaWQgMCx2YWx1ZTp2b2lkIDAsY2hlY2tlZDpudWxsIT1jP2M6YS5fd3JhcHBlclN0YXRlLmluaXRpYWxDaGVja2VkfSl9XG5mdW5jdGlvbiB3YyhhLGIpe3ZhciBjPW51bGw9PWIuZGVmYXVsdFZhbHVlP1wiXCI6Yi5kZWZhdWx0VmFsdWUsZD1udWxsIT1iLmNoZWNrZWQ/Yi5jaGVja2VkOmIuZGVmYXVsdENoZWNrZWQ7Yz11YyhudWxsIT1iLnZhbHVlP2IudmFsdWU6Yyk7YS5fd3JhcHBlclN0YXRlPXtpbml0aWFsQ2hlY2tlZDpkLGluaXRpYWxWYWx1ZTpjLGNvbnRyb2xsZWQ6XCJjaGVja2JveFwiPT09Yi50eXBlfHxcInJhZGlvXCI9PT1iLnR5cGU/bnVsbCE9Yi5jaGVja2VkOm51bGwhPWIudmFsdWV9fWZ1bmN0aW9uIHhjKGEsYil7Yj1iLmNoZWNrZWQ7bnVsbCE9YiYmdGMoYSxcImNoZWNrZWRcIixiLCExKX1cbmZ1bmN0aW9uIHljKGEsYil7eGMoYSxiKTt2YXIgYz11YyhiLnZhbHVlKSxkPWIudHlwZTtpZihudWxsIT1jKWlmKFwibnVtYmVyXCI9PT1kKXtpZigwPT09YyYmXCJcIj09PWEudmFsdWV8fGEudmFsdWUhPWMpYS52YWx1ZT1cIlwiK2N9ZWxzZSBhLnZhbHVlIT09XCJcIitjJiYoYS52YWx1ZT1cIlwiK2MpO2Vsc2UgaWYoXCJzdWJtaXRcIj09PWR8fFwicmVzZXRcIj09PWQpe2EucmVtb3ZlQXR0cmlidXRlKFwidmFsdWVcIik7cmV0dXJufWIuaGFzT3duUHJvcGVydHkoXCJ2YWx1ZVwiKT96YyhhLGIudHlwZSxjKTpiLmhhc093blByb3BlcnR5KFwiZGVmYXVsdFZhbHVlXCIpJiZ6YyhhLGIudHlwZSx1YyhiLmRlZmF1bHRWYWx1ZSkpO251bGw9PWIuY2hlY2tlZCYmbnVsbCE9Yi5kZWZhdWx0Q2hlY2tlZCYmKGEuZGVmYXVsdENoZWNrZWQ9ISFiLmRlZmF1bHRDaGVja2VkKX1cbmZ1bmN0aW9uIEFjKGEsYixjKXtpZihiLmhhc093blByb3BlcnR5KFwidmFsdWVcIil8fGIuaGFzT3duUHJvcGVydHkoXCJkZWZhdWx0VmFsdWVcIikpe3ZhciBkPWIudHlwZTtpZighKFwic3VibWl0XCIhPT1kJiZcInJlc2V0XCIhPT1kfHx2b2lkIDAhPT1iLnZhbHVlJiZudWxsIT09Yi52YWx1ZSkpcmV0dXJuO2I9XCJcIithLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlO2N8fGI9PT1hLnZhbHVlfHwoYS52YWx1ZT1iKTthLmRlZmF1bHRWYWx1ZT1ifWM9YS5uYW1lO1wiXCIhPT1jJiYoYS5uYW1lPVwiXCIpO2EuZGVmYXVsdENoZWNrZWQ9IWEuZGVmYXVsdENoZWNrZWQ7YS5kZWZhdWx0Q2hlY2tlZD0hIWEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsQ2hlY2tlZDtcIlwiIT09YyYmKGEubmFtZT1jKX1cbmZ1bmN0aW9uIHpjKGEsYixjKXtpZihcIm51bWJlclwiIT09Ynx8YS5vd25lckRvY3VtZW50LmFjdGl2ZUVsZW1lbnQhPT1hKW51bGw9PWM/YS5kZWZhdWx0VmFsdWU9XCJcIithLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlOmEuZGVmYXVsdFZhbHVlIT09XCJcIitjJiYoYS5kZWZhdWx0VmFsdWU9XCJcIitjKX12YXIgQmM9e2NoYW5nZTp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkNoYW5nZVwiLGNhcHR1cmVkOlwib25DaGFuZ2VDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcImJsdXIgY2hhbmdlIGNsaWNrIGZvY3VzIGlucHV0IGtleWRvd24ga2V5dXAgc2VsZWN0aW9uY2hhbmdlXCIuc3BsaXQoXCIgXCIpfX07ZnVuY3Rpb24gQ2MoYSxiLGMpe2E9eS5nZXRQb29sZWQoQmMuY2hhbmdlLGEsYixjKTthLnR5cGU9XCJjaGFuZ2VcIjtFYihjKTtRYShhKTtyZXR1cm4gYX12YXIgRGM9bnVsbCxFYz1udWxsO2Z1bmN0aW9uIEZjKGEpe0RhKGEpfVxuZnVuY3Rpb24gR2MoYSl7dmFyIGI9SmEoYSk7aWYoU2IoYikpcmV0dXJuIGF9ZnVuY3Rpb24gSGMoYSxiKXtpZihcImNoYW5nZVwiPT09YSlyZXR1cm4gYn12YXIgSWM9ITE7UmEmJihJYz1PYihcImlucHV0XCIpJiYoIWRvY3VtZW50LmRvY3VtZW50TW9kZXx8OTxkb2N1bWVudC5kb2N1bWVudE1vZGUpKTtmdW5jdGlvbiBKYygpe0RjJiYoRGMuZGV0YWNoRXZlbnQoXCJvbnByb3BlcnR5Y2hhbmdlXCIsS2MpLEVjPURjPW51bGwpfWZ1bmN0aW9uIEtjKGEpe1widmFsdWVcIj09PWEucHJvcGVydHlOYW1lJiZHYyhFYykmJihhPUNjKEVjLGEsTmIoYSkpLEtiKEZjLGEpKX1mdW5jdGlvbiBMYyhhLGIsYyl7XCJmb2N1c1wiPT09YT8oSmMoKSxEYz1iLEVjPWMsRGMuYXR0YWNoRXZlbnQoXCJvbnByb3BlcnR5Y2hhbmdlXCIsS2MpKTpcImJsdXJcIj09PWEmJkpjKCl9ZnVuY3Rpb24gTWMoYSl7aWYoXCJzZWxlY3Rpb25jaGFuZ2VcIj09PWF8fFwia2V5dXBcIj09PWF8fFwia2V5ZG93blwiPT09YSlyZXR1cm4gR2MoRWMpfVxuZnVuY3Rpb24gTmMoYSxiKXtpZihcImNsaWNrXCI9PT1hKXJldHVybiBHYyhiKX1mdW5jdGlvbiBPYyhhLGIpe2lmKFwiaW5wdXRcIj09PWF8fFwiY2hhbmdlXCI9PT1hKXJldHVybiBHYyhiKX1cbnZhciBQYz17ZXZlbnRUeXBlczpCYyxfaXNJbnB1dEV2ZW50U3VwcG9ydGVkOkljLGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9Yj9KYShiKTp3aW5kb3csZj12b2lkIDAsZz12b2lkIDAsaD1lLm5vZGVOYW1lJiZlLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7XCJzZWxlY3RcIj09PWh8fFwiaW5wdXRcIj09PWgmJlwiZmlsZVwiPT09ZS50eXBlP2Y9SGM6TWIoZSk/SWM/Zj1PYzooZj1NYyxnPUxjKTooaD1lLm5vZGVOYW1lKSYmXCJpbnB1dFwiPT09aC50b0xvd2VyQ2FzZSgpJiYoXCJjaGVja2JveFwiPT09ZS50eXBlfHxcInJhZGlvXCI9PT1lLnR5cGUpJiYoZj1OYyk7aWYoZiYmKGY9ZihhLGIpKSlyZXR1cm4gQ2MoZixjLGQpO2cmJmcoYSxlLGIpO1wiYmx1clwiPT09YSYmKGE9ZS5fd3JhcHBlclN0YXRlKSYmYS5jb250cm9sbGVkJiZcIm51bWJlclwiPT09ZS50eXBlJiZ6YyhlLFwibnVtYmVyXCIsZS52YWx1ZSl9fSxRYz15LmV4dGVuZCh7dmlldzpudWxsLGRldGFpbDpudWxsfSksUmM9e0FsdDpcImFsdEtleVwiLFxuQ29udHJvbDpcImN0cmxLZXlcIixNZXRhOlwibWV0YUtleVwiLFNoaWZ0Olwic2hpZnRLZXlcIn07ZnVuY3Rpb24gU2MoYSl7dmFyIGI9dGhpcy5uYXRpdmVFdmVudDtyZXR1cm4gYi5nZXRNb2RpZmllclN0YXRlP2IuZ2V0TW9kaWZpZXJTdGF0ZShhKTooYT1SY1thXSk/ISFiW2FdOiExfWZ1bmN0aW9uIFRjKCl7cmV0dXJuIFNjfVxudmFyIFVjPTAsVmM9MCxXYz0hMSxYYz0hMSxZYz1RYy5leHRlbmQoe3NjcmVlblg6bnVsbCxzY3JlZW5ZOm51bGwsY2xpZW50WDpudWxsLGNsaWVudFk6bnVsbCxwYWdlWDpudWxsLHBhZ2VZOm51bGwsY3RybEtleTpudWxsLHNoaWZ0S2V5Om51bGwsYWx0S2V5Om51bGwsbWV0YUtleTpudWxsLGdldE1vZGlmaWVyU3RhdGU6VGMsYnV0dG9uOm51bGwsYnV0dG9uczpudWxsLHJlbGF0ZWRUYXJnZXQ6ZnVuY3Rpb24oYSl7cmV0dXJuIGEucmVsYXRlZFRhcmdldHx8KGEuZnJvbUVsZW1lbnQ9PT1hLnNyY0VsZW1lbnQ/YS50b0VsZW1lbnQ6YS5mcm9tRWxlbWVudCl9LG1vdmVtZW50WDpmdW5jdGlvbihhKXtpZihcIm1vdmVtZW50WFwiaW4gYSlyZXR1cm4gYS5tb3ZlbWVudFg7dmFyIGI9VWM7VWM9YS5zY3JlZW5YO3JldHVybiBXYz9cIm1vdXNlbW92ZVwiPT09YS50eXBlP2Euc2NyZWVuWC1iOjA6KFdjPSEwLDApfSxtb3ZlbWVudFk6ZnVuY3Rpb24oYSl7aWYoXCJtb3ZlbWVudFlcImluIGEpcmV0dXJuIGEubW92ZW1lbnRZO1xudmFyIGI9VmM7VmM9YS5zY3JlZW5ZO3JldHVybiBYYz9cIm1vdXNlbW92ZVwiPT09YS50eXBlP2Euc2NyZWVuWS1iOjA6KFhjPSEwLDApfX0pLFpjPVljLmV4dGVuZCh7cG9pbnRlcklkOm51bGwsd2lkdGg6bnVsbCxoZWlnaHQ6bnVsbCxwcmVzc3VyZTpudWxsLHRhbmdlbnRpYWxQcmVzc3VyZTpudWxsLHRpbHRYOm51bGwsdGlsdFk6bnVsbCx0d2lzdDpudWxsLHBvaW50ZXJUeXBlOm51bGwsaXNQcmltYXJ5Om51bGx9KSwkYz17bW91c2VFbnRlcjp7cmVnaXN0cmF0aW9uTmFtZTpcIm9uTW91c2VFbnRlclwiLGRlcGVuZGVuY2llczpbXCJtb3VzZW91dFwiLFwibW91c2VvdmVyXCJdfSxtb3VzZUxlYXZlOntyZWdpc3RyYXRpb25OYW1lOlwib25Nb3VzZUxlYXZlXCIsZGVwZW5kZW5jaWVzOltcIm1vdXNlb3V0XCIsXCJtb3VzZW92ZXJcIl19LHBvaW50ZXJFbnRlcjp7cmVnaXN0cmF0aW9uTmFtZTpcIm9uUG9pbnRlckVudGVyXCIsZGVwZW5kZW5jaWVzOltcInBvaW50ZXJvdXRcIixcInBvaW50ZXJvdmVyXCJdfSxwb2ludGVyTGVhdmU6e3JlZ2lzdHJhdGlvbk5hbWU6XCJvblBvaW50ZXJMZWF2ZVwiLFxuZGVwZW5kZW5jaWVzOltcInBvaW50ZXJvdXRcIixcInBvaW50ZXJvdmVyXCJdfX0sYWQ9e2V2ZW50VHlwZXM6JGMsZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1cIm1vdXNlb3ZlclwiPT09YXx8XCJwb2ludGVyb3ZlclwiPT09YSxmPVwibW91c2VvdXRcIj09PWF8fFwicG9pbnRlcm91dFwiPT09YTtpZihlJiYoYy5yZWxhdGVkVGFyZ2V0fHxjLmZyb21FbGVtZW50KXx8IWYmJiFlKXJldHVybiBudWxsO2U9ZC53aW5kb3c9PT1kP2Q6KGU9ZC5vd25lckRvY3VtZW50KT9lLmRlZmF1bHRWaWV3fHxlLnBhcmVudFdpbmRvdzp3aW5kb3c7Zj8oZj1iLGI9KGI9Yy5yZWxhdGVkVGFyZ2V0fHxjLnRvRWxlbWVudCk/SGEoYik6bnVsbCk6Zj1udWxsO2lmKGY9PT1iKXJldHVybiBudWxsO3ZhciBnPXZvaWQgMCxoPXZvaWQgMCxsPXZvaWQgMCxrPXZvaWQgMDtpZihcIm1vdXNlb3V0XCI9PT1hfHxcIm1vdXNlb3ZlclwiPT09YSlnPVljLGg9JGMubW91c2VMZWF2ZSxsPSRjLm1vdXNlRW50ZXIsaz1cIm1vdXNlXCI7XG5lbHNlIGlmKFwicG9pbnRlcm91dFwiPT09YXx8XCJwb2ludGVyb3ZlclwiPT09YSlnPVpjLGg9JGMucG9pbnRlckxlYXZlLGw9JGMucG9pbnRlckVudGVyLGs9XCJwb2ludGVyXCI7dmFyIG09bnVsbD09Zj9lOkphKGYpO2U9bnVsbD09Yj9lOkphKGIpO2E9Zy5nZXRQb29sZWQoaCxmLGMsZCk7YS50eXBlPWsrXCJsZWF2ZVwiO2EudGFyZ2V0PW07YS5yZWxhdGVkVGFyZ2V0PWU7Yz1nLmdldFBvb2xlZChsLGIsYyxkKTtjLnR5cGU9aytcImVudGVyXCI7Yy50YXJnZXQ9ZTtjLnJlbGF0ZWRUYXJnZXQ9bTtkPWI7aWYoZiYmZClhOntiPWY7ZT1kO2s9MDtmb3IoZz1iO2c7Zz1MYShnKSlrKys7Zz0wO2ZvcihsPWU7bDtsPUxhKGwpKWcrKztmb3IoOzA8ay1nOyliPUxhKGIpLGstLTtmb3IoOzA8Zy1rOyllPUxhKGUpLGctLTtmb3IoO2stLTspe2lmKGI9PT1lfHxiPT09ZS5hbHRlcm5hdGUpYnJlYWsgYTtiPUxhKGIpO2U9TGEoZSl9Yj1udWxsfWVsc2UgYj1udWxsO2U9Yjtmb3IoYj1bXTtmJiZmIT09ZTspe2s9XG5mLmFsdGVybmF0ZTtpZihudWxsIT09ayYmaz09PWUpYnJlYWs7Yi5wdXNoKGYpO2Y9TGEoZil9Zm9yKGY9W107ZCYmZCE9PWU7KXtrPWQuYWx0ZXJuYXRlO2lmKG51bGwhPT1rJiZrPT09ZSlicmVhaztmLnB1c2goZCk7ZD1MYShkKX1mb3IoZD0wO2Q8Yi5sZW5ndGg7ZCsrKU9hKGJbZF0sXCJidWJibGVkXCIsYSk7Zm9yKGQ9Zi5sZW5ndGg7MDxkLS07KU9hKGZbZF0sXCJjYXB0dXJlZFwiLGMpO3JldHVyblthLGNdfX07ZnVuY3Rpb24gYmQoYSxiKXtyZXR1cm4gYT09PWImJigwIT09YXx8MS9hPT09MS9iKXx8YSE9PWEmJmIhPT1ifXZhciBjZD1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O1xuZnVuY3Rpb24gZGQoYSxiKXtpZihiZChhLGIpKXJldHVybiEwO2lmKFwib2JqZWN0XCIhPT10eXBlb2YgYXx8bnVsbD09PWF8fFwib2JqZWN0XCIhPT10eXBlb2YgYnx8bnVsbD09PWIpcmV0dXJuITE7dmFyIGM9T2JqZWN0LmtleXMoYSksZD1PYmplY3Qua2V5cyhiKTtpZihjLmxlbmd0aCE9PWQubGVuZ3RoKXJldHVybiExO2ZvcihkPTA7ZDxjLmxlbmd0aDtkKyspaWYoIWNkLmNhbGwoYixjW2RdKXx8IWJkKGFbY1tkXV0sYltjW2RdXSkpcmV0dXJuITE7cmV0dXJuITB9ZnVuY3Rpb24gZWQoYSl7dmFyIGI9YTtpZihhLmFsdGVybmF0ZSlmb3IoO2IucmV0dXJuOyliPWIucmV0dXJuO2Vsc2V7aWYoMCE9PShiLmVmZmVjdFRhZyYyKSlyZXR1cm4gMTtmb3IoO2IucmV0dXJuOylpZihiPWIucmV0dXJuLDAhPT0oYi5lZmZlY3RUYWcmMikpcmV0dXJuIDF9cmV0dXJuIDM9PT1iLnRhZz8yOjN9ZnVuY3Rpb24gZmQoYSl7MiE9PWVkKGEpP3goXCIxODhcIik6dm9pZCAwfVxuZnVuY3Rpb24gZ2QoYSl7dmFyIGI9YS5hbHRlcm5hdGU7aWYoIWIpcmV0dXJuIGI9ZWQoYSksMz09PWI/eChcIjE4OFwiKTp2b2lkIDAsMT09PWI/bnVsbDphO2Zvcih2YXIgYz1hLGQ9Yjs7KXt2YXIgZT1jLnJldHVybixmPWU/ZS5hbHRlcm5hdGU6bnVsbDtpZighZXx8IWYpYnJlYWs7aWYoZS5jaGlsZD09PWYuY2hpbGQpe2Zvcih2YXIgZz1lLmNoaWxkO2c7KXtpZihnPT09YylyZXR1cm4gZmQoZSksYTtpZihnPT09ZClyZXR1cm4gZmQoZSksYjtnPWcuc2libGluZ314KFwiMTg4XCIpfWlmKGMucmV0dXJuIT09ZC5yZXR1cm4pYz1lLGQ9ZjtlbHNle2c9ITE7Zm9yKHZhciBoPWUuY2hpbGQ7aDspe2lmKGg9PT1jKXtnPSEwO2M9ZTtkPWY7YnJlYWt9aWYoaD09PWQpe2c9ITA7ZD1lO2M9ZjticmVha31oPWguc2libGluZ31pZighZyl7Zm9yKGg9Zi5jaGlsZDtoOyl7aWYoaD09PWMpe2c9ITA7Yz1mO2Q9ZTticmVha31pZihoPT09ZCl7Zz0hMDtkPWY7Yz1lO2JyZWFrfWg9aC5zaWJsaW5nfWc/XG52b2lkIDA6eChcIjE4OVwiKX19Yy5hbHRlcm5hdGUhPT1kP3goXCIxOTBcIik6dm9pZCAwfTMhPT1jLnRhZz94KFwiMTg4XCIpOnZvaWQgMDtyZXR1cm4gYy5zdGF0ZU5vZGUuY3VycmVudD09PWM/YTpifWZ1bmN0aW9uIGhkKGEpe2E9Z2QoYSk7aWYoIWEpcmV0dXJuIG51bGw7Zm9yKHZhciBiPWE7Oyl7aWYoNT09PWIudGFnfHw2PT09Yi50YWcpcmV0dXJuIGI7aWYoYi5jaGlsZCliLmNoaWxkLnJldHVybj1iLGI9Yi5jaGlsZDtlbHNle2lmKGI9PT1hKWJyZWFrO2Zvcig7IWIuc2libGluZzspe2lmKCFiLnJldHVybnx8Yi5yZXR1cm49PT1hKXJldHVybiBudWxsO2I9Yi5yZXR1cm59Yi5zaWJsaW5nLnJldHVybj1iLnJldHVybjtiPWIuc2libGluZ319cmV0dXJuIG51bGx9XG52YXIgaWQ9eS5leHRlbmQoe2FuaW1hdGlvbk5hbWU6bnVsbCxlbGFwc2VkVGltZTpudWxsLHBzZXVkb0VsZW1lbnQ6bnVsbH0pLGpkPXkuZXh0ZW5kKHtjbGlwYm9hcmREYXRhOmZ1bmN0aW9uKGEpe3JldHVyblwiY2xpcGJvYXJkRGF0YVwiaW4gYT9hLmNsaXBib2FyZERhdGE6d2luZG93LmNsaXBib2FyZERhdGF9fSksa2Q9UWMuZXh0ZW5kKHtyZWxhdGVkVGFyZ2V0Om51bGx9KTtmdW5jdGlvbiBsZChhKXt2YXIgYj1hLmtleUNvZGU7XCJjaGFyQ29kZVwiaW4gYT8oYT1hLmNoYXJDb2RlLDA9PT1hJiYxMz09PWImJihhPTEzKSk6YT1iOzEwPT09YSYmKGE9MTMpO3JldHVybiAzMjw9YXx8MTM9PT1hP2E6MH1cbnZhciBtZD17RXNjOlwiRXNjYXBlXCIsU3BhY2ViYXI6XCIgXCIsTGVmdDpcIkFycm93TGVmdFwiLFVwOlwiQXJyb3dVcFwiLFJpZ2h0OlwiQXJyb3dSaWdodFwiLERvd246XCJBcnJvd0Rvd25cIixEZWw6XCJEZWxldGVcIixXaW46XCJPU1wiLE1lbnU6XCJDb250ZXh0TWVudVwiLEFwcHM6XCJDb250ZXh0TWVudVwiLFNjcm9sbDpcIlNjcm9sbExvY2tcIixNb3pQcmludGFibGVLZXk6XCJVbmlkZW50aWZpZWRcIn0sbmQ9ezg6XCJCYWNrc3BhY2VcIiw5OlwiVGFiXCIsMTI6XCJDbGVhclwiLDEzOlwiRW50ZXJcIiwxNjpcIlNoaWZ0XCIsMTc6XCJDb250cm9sXCIsMTg6XCJBbHRcIiwxOTpcIlBhdXNlXCIsMjA6XCJDYXBzTG9ja1wiLDI3OlwiRXNjYXBlXCIsMzI6XCIgXCIsMzM6XCJQYWdlVXBcIiwzNDpcIlBhZ2VEb3duXCIsMzU6XCJFbmRcIiwzNjpcIkhvbWVcIiwzNzpcIkFycm93TGVmdFwiLDM4OlwiQXJyb3dVcFwiLDM5OlwiQXJyb3dSaWdodFwiLDQwOlwiQXJyb3dEb3duXCIsNDU6XCJJbnNlcnRcIiw0NjpcIkRlbGV0ZVwiLDExMjpcIkYxXCIsMTEzOlwiRjJcIiwxMTQ6XCJGM1wiLDExNTpcIkY0XCIsXG4xMTY6XCJGNVwiLDExNzpcIkY2XCIsMTE4OlwiRjdcIiwxMTk6XCJGOFwiLDEyMDpcIkY5XCIsMTIxOlwiRjEwXCIsMTIyOlwiRjExXCIsMTIzOlwiRjEyXCIsMTQ0OlwiTnVtTG9ja1wiLDE0NTpcIlNjcm9sbExvY2tcIiwyMjQ6XCJNZXRhXCJ9LG9kPVFjLmV4dGVuZCh7a2V5OmZ1bmN0aW9uKGEpe2lmKGEua2V5KXt2YXIgYj1tZFthLmtleV18fGEua2V5O2lmKFwiVW5pZGVudGlmaWVkXCIhPT1iKXJldHVybiBifXJldHVyblwia2V5cHJlc3NcIj09PWEudHlwZT8oYT1sZChhKSwxMz09PWE/XCJFbnRlclwiOlN0cmluZy5mcm9tQ2hhckNvZGUoYSkpOlwia2V5ZG93blwiPT09YS50eXBlfHxcImtleXVwXCI9PT1hLnR5cGU/bmRbYS5rZXlDb2RlXXx8XCJVbmlkZW50aWZpZWRcIjpcIlwifSxsb2NhdGlvbjpudWxsLGN0cmxLZXk6bnVsbCxzaGlmdEtleTpudWxsLGFsdEtleTpudWxsLG1ldGFLZXk6bnVsbCxyZXBlYXQ6bnVsbCxsb2NhbGU6bnVsbCxnZXRNb2RpZmllclN0YXRlOlRjLGNoYXJDb2RlOmZ1bmN0aW9uKGEpe3JldHVyblwia2V5cHJlc3NcIj09PVxuYS50eXBlP2xkKGEpOjB9LGtleUNvZGU6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlkb3duXCI9PT1hLnR5cGV8fFwia2V5dXBcIj09PWEudHlwZT9hLmtleUNvZGU6MH0sd2hpY2g6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlwcmVzc1wiPT09YS50eXBlP2xkKGEpOlwia2V5ZG93blwiPT09YS50eXBlfHxcImtleXVwXCI9PT1hLnR5cGU/YS5rZXlDb2RlOjB9fSkscGQ9WWMuZXh0ZW5kKHtkYXRhVHJhbnNmZXI6bnVsbH0pLHFkPVFjLmV4dGVuZCh7dG91Y2hlczpudWxsLHRhcmdldFRvdWNoZXM6bnVsbCxjaGFuZ2VkVG91Y2hlczpudWxsLGFsdEtleTpudWxsLG1ldGFLZXk6bnVsbCxjdHJsS2V5Om51bGwsc2hpZnRLZXk6bnVsbCxnZXRNb2RpZmllclN0YXRlOlRjfSkscmQ9eS5leHRlbmQoe3Byb3BlcnR5TmFtZTpudWxsLGVsYXBzZWRUaW1lOm51bGwscHNldWRvRWxlbWVudDpudWxsfSksc2Q9WWMuZXh0ZW5kKHtkZWx0YVg6ZnVuY3Rpb24oYSl7cmV0dXJuXCJkZWx0YVhcImluIGE/YS5kZWx0YVg6XCJ3aGVlbERlbHRhWFwiaW5cbmE/LWEud2hlZWxEZWx0YVg6MH0sZGVsdGFZOmZ1bmN0aW9uKGEpe3JldHVyblwiZGVsdGFZXCJpbiBhP2EuZGVsdGFZOlwid2hlZWxEZWx0YVlcImluIGE/LWEud2hlZWxEZWx0YVk6XCJ3aGVlbERlbHRhXCJpbiBhPy1hLndoZWVsRGVsdGE6MH0sZGVsdGFaOm51bGwsZGVsdGFNb2RlOm51bGx9KSx0ZD1bW1wiYWJvcnRcIixcImFib3J0XCJdLFtYYSxcImFuaW1hdGlvbkVuZFwiXSxbWWEsXCJhbmltYXRpb25JdGVyYXRpb25cIl0sW1phLFwiYW5pbWF0aW9uU3RhcnRcIl0sW1wiY2FucGxheVwiLFwiY2FuUGxheVwiXSxbXCJjYW5wbGF5dGhyb3VnaFwiLFwiY2FuUGxheVRocm91Z2hcIl0sW1wiZHJhZ1wiLFwiZHJhZ1wiXSxbXCJkcmFnZW50ZXJcIixcImRyYWdFbnRlclwiXSxbXCJkcmFnZXhpdFwiLFwiZHJhZ0V4aXRcIl0sW1wiZHJhZ2xlYXZlXCIsXCJkcmFnTGVhdmVcIl0sW1wiZHJhZ292ZXJcIixcImRyYWdPdmVyXCJdLFtcImR1cmF0aW9uY2hhbmdlXCIsXCJkdXJhdGlvbkNoYW5nZVwiXSxbXCJlbXB0aWVkXCIsXCJlbXB0aWVkXCJdLFtcImVuY3J5cHRlZFwiLFwiZW5jcnlwdGVkXCJdLFxuW1wiZW5kZWRcIixcImVuZGVkXCJdLFtcImVycm9yXCIsXCJlcnJvclwiXSxbXCJnb3Rwb2ludGVyY2FwdHVyZVwiLFwiZ290UG9pbnRlckNhcHR1cmVcIl0sW1wibG9hZFwiLFwibG9hZFwiXSxbXCJsb2FkZWRkYXRhXCIsXCJsb2FkZWREYXRhXCJdLFtcImxvYWRlZG1ldGFkYXRhXCIsXCJsb2FkZWRNZXRhZGF0YVwiXSxbXCJsb2Fkc3RhcnRcIixcImxvYWRTdGFydFwiXSxbXCJsb3N0cG9pbnRlcmNhcHR1cmVcIixcImxvc3RQb2ludGVyQ2FwdHVyZVwiXSxbXCJtb3VzZW1vdmVcIixcIm1vdXNlTW92ZVwiXSxbXCJtb3VzZW91dFwiLFwibW91c2VPdXRcIl0sW1wibW91c2VvdmVyXCIsXCJtb3VzZU92ZXJcIl0sW1wicGxheWluZ1wiLFwicGxheWluZ1wiXSxbXCJwb2ludGVybW92ZVwiLFwicG9pbnRlck1vdmVcIl0sW1wicG9pbnRlcm91dFwiLFwicG9pbnRlck91dFwiXSxbXCJwb2ludGVyb3ZlclwiLFwicG9pbnRlck92ZXJcIl0sW1wicHJvZ3Jlc3NcIixcInByb2dyZXNzXCJdLFtcInNjcm9sbFwiLFwic2Nyb2xsXCJdLFtcInNlZWtpbmdcIixcInNlZWtpbmdcIl0sW1wic3RhbGxlZFwiLFwic3RhbGxlZFwiXSxcbltcInN1c3BlbmRcIixcInN1c3BlbmRcIl0sW1widGltZXVwZGF0ZVwiLFwidGltZVVwZGF0ZVwiXSxbXCJ0b2dnbGVcIixcInRvZ2dsZVwiXSxbXCJ0b3VjaG1vdmVcIixcInRvdWNoTW92ZVwiXSxbJGEsXCJ0cmFuc2l0aW9uRW5kXCJdLFtcIndhaXRpbmdcIixcIndhaXRpbmdcIl0sW1wid2hlZWxcIixcIndoZWVsXCJdXSx1ZD17fSx2ZD17fTtmdW5jdGlvbiB3ZChhLGIpe3ZhciBjPWFbMF07YT1hWzFdO3ZhciBkPVwib25cIisoYVswXS50b1VwcGVyQ2FzZSgpK2Euc2xpY2UoMSkpO2I9e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOmQsY2FwdHVyZWQ6ZCtcIkNhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOltjXSxpc0ludGVyYWN0aXZlOmJ9O3VkW2FdPWI7dmRbY109Yn1cbltbXCJibHVyXCIsXCJibHVyXCJdLFtcImNhbmNlbFwiLFwiY2FuY2VsXCJdLFtcImNsaWNrXCIsXCJjbGlja1wiXSxbXCJjbG9zZVwiLFwiY2xvc2VcIl0sW1wiY29udGV4dG1lbnVcIixcImNvbnRleHRNZW51XCJdLFtcImNvcHlcIixcImNvcHlcIl0sW1wiY3V0XCIsXCJjdXRcIl0sW1wiYXV4Y2xpY2tcIixcImF1eENsaWNrXCJdLFtcImRibGNsaWNrXCIsXCJkb3VibGVDbGlja1wiXSxbXCJkcmFnZW5kXCIsXCJkcmFnRW5kXCJdLFtcImRyYWdzdGFydFwiLFwiZHJhZ1N0YXJ0XCJdLFtcImRyb3BcIixcImRyb3BcIl0sW1wiZm9jdXNcIixcImZvY3VzXCJdLFtcImlucHV0XCIsXCJpbnB1dFwiXSxbXCJpbnZhbGlkXCIsXCJpbnZhbGlkXCJdLFtcImtleWRvd25cIixcImtleURvd25cIl0sW1wia2V5cHJlc3NcIixcImtleVByZXNzXCJdLFtcImtleXVwXCIsXCJrZXlVcFwiXSxbXCJtb3VzZWRvd25cIixcIm1vdXNlRG93blwiXSxbXCJtb3VzZXVwXCIsXCJtb3VzZVVwXCJdLFtcInBhc3RlXCIsXCJwYXN0ZVwiXSxbXCJwYXVzZVwiLFwicGF1c2VcIl0sW1wicGxheVwiLFwicGxheVwiXSxbXCJwb2ludGVyY2FuY2VsXCIsXCJwb2ludGVyQ2FuY2VsXCJdLFxuW1wicG9pbnRlcmRvd25cIixcInBvaW50ZXJEb3duXCJdLFtcInBvaW50ZXJ1cFwiLFwicG9pbnRlclVwXCJdLFtcInJhdGVjaGFuZ2VcIixcInJhdGVDaGFuZ2VcIl0sW1wicmVzZXRcIixcInJlc2V0XCJdLFtcInNlZWtlZFwiLFwic2Vla2VkXCJdLFtcInN1Ym1pdFwiLFwic3VibWl0XCJdLFtcInRvdWNoY2FuY2VsXCIsXCJ0b3VjaENhbmNlbFwiXSxbXCJ0b3VjaGVuZFwiLFwidG91Y2hFbmRcIl0sW1widG91Y2hzdGFydFwiLFwidG91Y2hTdGFydFwiXSxbXCJ2b2x1bWVjaGFuZ2VcIixcInZvbHVtZUNoYW5nZVwiXV0uZm9yRWFjaChmdW5jdGlvbihhKXt3ZChhLCEwKX0pO3RkLmZvckVhY2goZnVuY3Rpb24oYSl7d2QoYSwhMSl9KTtcbnZhciB4ZD17ZXZlbnRUeXBlczp1ZCxpc0ludGVyYWN0aXZlVG9wTGV2ZWxFdmVudFR5cGU6ZnVuY3Rpb24oYSl7YT12ZFthXTtyZXR1cm4gdm9pZCAwIT09YSYmITA9PT1hLmlzSW50ZXJhY3RpdmV9LGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9dmRbYV07aWYoIWUpcmV0dXJuIG51bGw7c3dpdGNoKGEpe2Nhc2UgXCJrZXlwcmVzc1wiOmlmKDA9PT1sZChjKSlyZXR1cm4gbnVsbDtjYXNlIFwia2V5ZG93blwiOmNhc2UgXCJrZXl1cFwiOmE9b2Q7YnJlYWs7Y2FzZSBcImJsdXJcIjpjYXNlIFwiZm9jdXNcIjphPWtkO2JyZWFrO2Nhc2UgXCJjbGlja1wiOmlmKDI9PT1jLmJ1dHRvbilyZXR1cm4gbnVsbDtjYXNlIFwiYXV4Y2xpY2tcIjpjYXNlIFwiZGJsY2xpY2tcIjpjYXNlIFwibW91c2Vkb3duXCI6Y2FzZSBcIm1vdXNlbW92ZVwiOmNhc2UgXCJtb3VzZXVwXCI6Y2FzZSBcIm1vdXNlb3V0XCI6Y2FzZSBcIm1vdXNlb3ZlclwiOmNhc2UgXCJjb250ZXh0bWVudVwiOmE9WWM7YnJlYWs7Y2FzZSBcImRyYWdcIjpjYXNlIFwiZHJhZ2VuZFwiOmNhc2UgXCJkcmFnZW50ZXJcIjpjYXNlIFwiZHJhZ2V4aXRcIjpjYXNlIFwiZHJhZ2xlYXZlXCI6Y2FzZSBcImRyYWdvdmVyXCI6Y2FzZSBcImRyYWdzdGFydFwiOmNhc2UgXCJkcm9wXCI6YT1cbnBkO2JyZWFrO2Nhc2UgXCJ0b3VjaGNhbmNlbFwiOmNhc2UgXCJ0b3VjaGVuZFwiOmNhc2UgXCJ0b3VjaG1vdmVcIjpjYXNlIFwidG91Y2hzdGFydFwiOmE9cWQ7YnJlYWs7Y2FzZSBYYTpjYXNlIFlhOmNhc2UgWmE6YT1pZDticmVhaztjYXNlICRhOmE9cmQ7YnJlYWs7Y2FzZSBcInNjcm9sbFwiOmE9UWM7YnJlYWs7Y2FzZSBcIndoZWVsXCI6YT1zZDticmVhaztjYXNlIFwiY29weVwiOmNhc2UgXCJjdXRcIjpjYXNlIFwicGFzdGVcIjphPWpkO2JyZWFrO2Nhc2UgXCJnb3Rwb2ludGVyY2FwdHVyZVwiOmNhc2UgXCJsb3N0cG9pbnRlcmNhcHR1cmVcIjpjYXNlIFwicG9pbnRlcmNhbmNlbFwiOmNhc2UgXCJwb2ludGVyZG93blwiOmNhc2UgXCJwb2ludGVybW92ZVwiOmNhc2UgXCJwb2ludGVyb3V0XCI6Y2FzZSBcInBvaW50ZXJvdmVyXCI6Y2FzZSBcInBvaW50ZXJ1cFwiOmE9WmM7YnJlYWs7ZGVmYXVsdDphPXl9Yj1hLmdldFBvb2xlZChlLGIsYyxkKTtRYShiKTtyZXR1cm4gYn19LHlkPXhkLmlzSW50ZXJhY3RpdmVUb3BMZXZlbEV2ZW50VHlwZSxcbnpkPVtdO2Z1bmN0aW9uIEFkKGEpe3ZhciBiPWEudGFyZ2V0SW5zdCxjPWI7ZG97aWYoIWMpe2EuYW5jZXN0b3JzLnB1c2goYyk7YnJlYWt9dmFyIGQ7Zm9yKGQ9YztkLnJldHVybjspZD1kLnJldHVybjtkPTMhPT1kLnRhZz9udWxsOmQuc3RhdGVOb2RlLmNvbnRhaW5lckluZm87aWYoIWQpYnJlYWs7YS5hbmNlc3RvcnMucHVzaChjKTtjPUhhKGQpfXdoaWxlKGMpO2ZvcihjPTA7YzxhLmFuY2VzdG9ycy5sZW5ndGg7YysrKXtiPWEuYW5jZXN0b3JzW2NdO3ZhciBlPU5iKGEubmF0aXZlRXZlbnQpO2Q9YS50b3BMZXZlbFR5cGU7Zm9yKHZhciBmPWEubmF0aXZlRXZlbnQsZz1udWxsLGg9MDtoPG9hLmxlbmd0aDtoKyspe3ZhciBsPW9hW2hdO2wmJihsPWwuZXh0cmFjdEV2ZW50cyhkLGIsZixlKSkmJihnPXhhKGcsbCkpfURhKGcpfX12YXIgQmQ9ITA7XG5mdW5jdGlvbiBFKGEsYil7aWYoIWIpcmV0dXJuIG51bGw7dmFyIGM9KHlkKGEpP0NkOkRkKS5iaW5kKG51bGwsYSk7Yi5hZGRFdmVudExpc3RlbmVyKGEsYywhMSl9ZnVuY3Rpb24gRWQoYSxiKXtpZighYilyZXR1cm4gbnVsbDt2YXIgYz0oeWQoYSk/Q2Q6RGQpLmJpbmQobnVsbCxhKTtiLmFkZEV2ZW50TGlzdGVuZXIoYSxjLCEwKX1mdW5jdGlvbiBDZChhLGIpe0hiKERkLGEsYil9XG5mdW5jdGlvbiBEZChhLGIpe2lmKEJkKXt2YXIgYz1OYihiKTtjPUhhKGMpO251bGw9PT1jfHxcIm51bWJlclwiIT09dHlwZW9mIGMudGFnfHwyPT09ZWQoYyl8fChjPW51bGwpO2lmKHpkLmxlbmd0aCl7dmFyIGQ9emQucG9wKCk7ZC50b3BMZXZlbFR5cGU9YTtkLm5hdGl2ZUV2ZW50PWI7ZC50YXJnZXRJbnN0PWM7YT1kfWVsc2UgYT17dG9wTGV2ZWxUeXBlOmEsbmF0aXZlRXZlbnQ6Yix0YXJnZXRJbnN0OmMsYW5jZXN0b3JzOltdfTt0cnl7S2IoQWQsYSl9ZmluYWxseXthLnRvcExldmVsVHlwZT1udWxsLGEubmF0aXZlRXZlbnQ9bnVsbCxhLnRhcmdldEluc3Q9bnVsbCxhLmFuY2VzdG9ycy5sZW5ndGg9MCwxMD56ZC5sZW5ndGgmJnpkLnB1c2goYSl9fX12YXIgRmQ9e30sR2Q9MCxIZD1cIl9yZWFjdExpc3RlbmVyc0lEXCIrKFwiXCIrTWF0aC5yYW5kb20oKSkuc2xpY2UoMik7XG5mdW5jdGlvbiBJZChhKXtPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoYSxIZCl8fChhW0hkXT1HZCsrLEZkW2FbSGRdXT17fSk7cmV0dXJuIEZkW2FbSGRdXX1mdW5jdGlvbiBKZChhKXthPWF8fChcInVuZGVmaW5lZFwiIT09dHlwZW9mIGRvY3VtZW50P2RvY3VtZW50OnZvaWQgMCk7aWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiBhKXJldHVybiBudWxsO3RyeXtyZXR1cm4gYS5hY3RpdmVFbGVtZW50fHxhLmJvZHl9Y2F0Y2goYil7cmV0dXJuIGEuYm9keX19ZnVuY3Rpb24gS2QoYSl7Zm9yKDthJiZhLmZpcnN0Q2hpbGQ7KWE9YS5maXJzdENoaWxkO3JldHVybiBhfVxuZnVuY3Rpb24gTGQoYSxiKXt2YXIgYz1LZChhKTthPTA7Zm9yKHZhciBkO2M7KXtpZigzPT09Yy5ub2RlVHlwZSl7ZD1hK2MudGV4dENvbnRlbnQubGVuZ3RoO2lmKGE8PWImJmQ+PWIpcmV0dXJue25vZGU6YyxvZmZzZXQ6Yi1hfTthPWR9YTp7Zm9yKDtjOyl7aWYoYy5uZXh0U2libGluZyl7Yz1jLm5leHRTaWJsaW5nO2JyZWFrIGF9Yz1jLnBhcmVudE5vZGV9Yz12b2lkIDB9Yz1LZChjKX19ZnVuY3Rpb24gTWQoYSxiKXtyZXR1cm4gYSYmYj9hPT09Yj8hMDphJiYzPT09YS5ub2RlVHlwZT8hMTpiJiYzPT09Yi5ub2RlVHlwZT9NZChhLGIucGFyZW50Tm9kZSk6XCJjb250YWluc1wiaW4gYT9hLmNvbnRhaW5zKGIpOmEuY29tcGFyZURvY3VtZW50UG9zaXRpb24/ISEoYS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbihiKSYxNik6ITE6ITF9XG5mdW5jdGlvbiBOZCgpe2Zvcih2YXIgYT13aW5kb3csYj1KZCgpO2IgaW5zdGFuY2VvZiBhLkhUTUxJRnJhbWVFbGVtZW50Oyl7dHJ5e3ZhciBjPVwic3RyaW5nXCI9PT10eXBlb2YgYi5jb250ZW50V2luZG93LmxvY2F0aW9uLmhyZWZ9Y2F0Y2goZCl7Yz0hMX1pZihjKWE9Yi5jb250ZW50V2luZG93O2Vsc2UgYnJlYWs7Yj1KZChhLmRvY3VtZW50KX1yZXR1cm4gYn1mdW5jdGlvbiBPZChhKXt2YXIgYj1hJiZhLm5vZGVOYW1lJiZhLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7cmV0dXJuIGImJihcImlucHV0XCI9PT1iJiYoXCJ0ZXh0XCI9PT1hLnR5cGV8fFwic2VhcmNoXCI9PT1hLnR5cGV8fFwidGVsXCI9PT1hLnR5cGV8fFwidXJsXCI9PT1hLnR5cGV8fFwicGFzc3dvcmRcIj09PWEudHlwZSl8fFwidGV4dGFyZWFcIj09PWJ8fFwidHJ1ZVwiPT09YS5jb250ZW50RWRpdGFibGUpfVxuZnVuY3Rpb24gUGQoKXt2YXIgYT1OZCgpO2lmKE9kKGEpKXtpZihcInNlbGVjdGlvblN0YXJ0XCJpbiBhKXZhciBiPXtzdGFydDphLnNlbGVjdGlvblN0YXJ0LGVuZDphLnNlbGVjdGlvbkVuZH07ZWxzZSBhOntiPShiPWEub3duZXJEb2N1bWVudCkmJmIuZGVmYXVsdFZpZXd8fHdpbmRvdzt2YXIgYz1iLmdldFNlbGVjdGlvbiYmYi5nZXRTZWxlY3Rpb24oKTtpZihjJiYwIT09Yy5yYW5nZUNvdW50KXtiPWMuYW5jaG9yTm9kZTt2YXIgZD1jLmFuY2hvck9mZnNldCxlPWMuZm9jdXNOb2RlO2M9Yy5mb2N1c09mZnNldDt0cnl7Yi5ub2RlVHlwZSxlLm5vZGVUeXBlfWNhdGNoKEEpe2I9bnVsbDticmVhayBhfXZhciBmPTAsZz0tMSxoPS0xLGw9MCxrPTAsbT1hLHA9bnVsbDtiOmZvcig7Oyl7Zm9yKHZhciB0Ozspe20hPT1ifHwwIT09ZCYmMyE9PW0ubm9kZVR5cGV8fChnPWYrZCk7bSE9PWV8fDAhPT1jJiYzIT09bS5ub2RlVHlwZXx8KGg9ZitjKTszPT09bS5ub2RlVHlwZSYmKGYrPW0ubm9kZVZhbHVlLmxlbmd0aCk7XG5pZihudWxsPT09KHQ9bS5maXJzdENoaWxkKSlicmVhaztwPW07bT10fWZvcig7Oyl7aWYobT09PWEpYnJlYWsgYjtwPT09YiYmKytsPT09ZCYmKGc9Zik7cD09PWUmJisraz09PWMmJihoPWYpO2lmKG51bGwhPT0odD1tLm5leHRTaWJsaW5nKSlicmVhazttPXA7cD1tLnBhcmVudE5vZGV9bT10fWI9LTE9PT1nfHwtMT09PWg/bnVsbDp7c3RhcnQ6ZyxlbmQ6aH19ZWxzZSBiPW51bGx9Yj1ifHx7c3RhcnQ6MCxlbmQ6MH19ZWxzZSBiPW51bGw7cmV0dXJue2ZvY3VzZWRFbGVtOmEsc2VsZWN0aW9uUmFuZ2U6Yn19XG5mdW5jdGlvbiBRZChhKXt2YXIgYj1OZCgpLGM9YS5mb2N1c2VkRWxlbSxkPWEuc2VsZWN0aW9uUmFuZ2U7aWYoYiE9PWMmJmMmJmMub3duZXJEb2N1bWVudCYmTWQoYy5vd25lckRvY3VtZW50LmRvY3VtZW50RWxlbWVudCxjKSl7aWYobnVsbCE9PWQmJk9kKGMpKWlmKGI9ZC5zdGFydCxhPWQuZW5kLHZvaWQgMD09PWEmJihhPWIpLFwic2VsZWN0aW9uU3RhcnRcImluIGMpYy5zZWxlY3Rpb25TdGFydD1iLGMuc2VsZWN0aW9uRW5kPU1hdGgubWluKGEsYy52YWx1ZS5sZW5ndGgpO2Vsc2UgaWYoYT0oYj1jLm93bmVyRG9jdW1lbnR8fGRvY3VtZW50KSYmYi5kZWZhdWx0Vmlld3x8d2luZG93LGEuZ2V0U2VsZWN0aW9uKXthPWEuZ2V0U2VsZWN0aW9uKCk7dmFyIGU9Yy50ZXh0Q29udGVudC5sZW5ndGgsZj1NYXRoLm1pbihkLnN0YXJ0LGUpO2Q9dm9pZCAwPT09ZC5lbmQ/ZjpNYXRoLm1pbihkLmVuZCxlKTshYS5leHRlbmQmJmY+ZCYmKGU9ZCxkPWYsZj1lKTtlPUxkKGMsZik7dmFyIGc9TGQoYyxcbmQpO2UmJmcmJigxIT09YS5yYW5nZUNvdW50fHxhLmFuY2hvck5vZGUhPT1lLm5vZGV8fGEuYW5jaG9yT2Zmc2V0IT09ZS5vZmZzZXR8fGEuZm9jdXNOb2RlIT09Zy5ub2RlfHxhLmZvY3VzT2Zmc2V0IT09Zy5vZmZzZXQpJiYoYj1iLmNyZWF0ZVJhbmdlKCksYi5zZXRTdGFydChlLm5vZGUsZS5vZmZzZXQpLGEucmVtb3ZlQWxsUmFuZ2VzKCksZj5kPyhhLmFkZFJhbmdlKGIpLGEuZXh0ZW5kKGcubm9kZSxnLm9mZnNldCkpOihiLnNldEVuZChnLm5vZGUsZy5vZmZzZXQpLGEuYWRkUmFuZ2UoYikpKX1iPVtdO2ZvcihhPWM7YT1hLnBhcmVudE5vZGU7KTE9PT1hLm5vZGVUeXBlJiZiLnB1c2goe2VsZW1lbnQ6YSxsZWZ0OmEuc2Nyb2xsTGVmdCx0b3A6YS5zY3JvbGxUb3B9KTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy5mb2N1cyYmYy5mb2N1cygpO2ZvcihjPTA7YzxiLmxlbmd0aDtjKyspYT1iW2NdLGEuZWxlbWVudC5zY3JvbGxMZWZ0PWEubGVmdCxhLmVsZW1lbnQuc2Nyb2xsVG9wPWEudG9wfX1cbnZhciBSZD1SYSYmXCJkb2N1bWVudE1vZGVcImluIGRvY3VtZW50JiYxMT49ZG9jdW1lbnQuZG9jdW1lbnRNb2RlLFNkPXtzZWxlY3Q6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25TZWxlY3RcIixjYXB0dXJlZDpcIm9uU2VsZWN0Q2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJibHVyIGNvbnRleHRtZW51IGRyYWdlbmQgZm9jdXMga2V5ZG93biBrZXl1cCBtb3VzZWRvd24gbW91c2V1cCBzZWxlY3Rpb25jaGFuZ2VcIi5zcGxpdChcIiBcIil9fSxUZD1udWxsLFVkPW51bGwsVmQ9bnVsbCxXZD0hMTtcbmZ1bmN0aW9uIFhkKGEsYil7dmFyIGM9Yi53aW5kb3c9PT1iP2IuZG9jdW1lbnQ6OT09PWIubm9kZVR5cGU/YjpiLm93bmVyRG9jdW1lbnQ7aWYoV2R8fG51bGw9PVRkfHxUZCE9PUpkKGMpKXJldHVybiBudWxsO2M9VGQ7XCJzZWxlY3Rpb25TdGFydFwiaW4gYyYmT2QoYyk/Yz17c3RhcnQ6Yy5zZWxlY3Rpb25TdGFydCxlbmQ6Yy5zZWxlY3Rpb25FbmR9OihjPShjLm93bmVyRG9jdW1lbnQmJmMub3duZXJEb2N1bWVudC5kZWZhdWx0Vmlld3x8d2luZG93KS5nZXRTZWxlY3Rpb24oKSxjPXthbmNob3JOb2RlOmMuYW5jaG9yTm9kZSxhbmNob3JPZmZzZXQ6Yy5hbmNob3JPZmZzZXQsZm9jdXNOb2RlOmMuZm9jdXNOb2RlLGZvY3VzT2Zmc2V0OmMuZm9jdXNPZmZzZXR9KTtyZXR1cm4gVmQmJmRkKFZkLGMpP251bGw6KFZkPWMsYT15LmdldFBvb2xlZChTZC5zZWxlY3QsVWQsYSxiKSxhLnR5cGU9XCJzZWxlY3RcIixhLnRhcmdldD1UZCxRYShhKSxhKX1cbnZhciBZZD17ZXZlbnRUeXBlczpTZCxleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPWQud2luZG93PT09ZD9kLmRvY3VtZW50Ojk9PT1kLm5vZGVUeXBlP2Q6ZC5vd25lckRvY3VtZW50LGY7aWYoIShmPSFlKSl7YTp7ZT1JZChlKTtmPXNhLm9uU2VsZWN0O2Zvcih2YXIgZz0wO2c8Zi5sZW5ndGg7ZysrKXt2YXIgaD1mW2ddO2lmKCFlLmhhc093blByb3BlcnR5KGgpfHwhZVtoXSl7ZT0hMTticmVhayBhfX1lPSEwfWY9IWV9aWYoZilyZXR1cm4gbnVsbDtlPWI/SmEoYik6d2luZG93O3N3aXRjaChhKXtjYXNlIFwiZm9jdXNcIjppZihNYihlKXx8XCJ0cnVlXCI9PT1lLmNvbnRlbnRFZGl0YWJsZSlUZD1lLFVkPWIsVmQ9bnVsbDticmVhaztjYXNlIFwiYmx1clwiOlZkPVVkPVRkPW51bGw7YnJlYWs7Y2FzZSBcIm1vdXNlZG93blwiOldkPSEwO2JyZWFrO2Nhc2UgXCJjb250ZXh0bWVudVwiOmNhc2UgXCJtb3VzZXVwXCI6Y2FzZSBcImRyYWdlbmRcIjpyZXR1cm4gV2Q9ITEsWGQoYyxkKTtjYXNlIFwic2VsZWN0aW9uY2hhbmdlXCI6aWYoUmQpYnJlYWs7XG5jYXNlIFwia2V5ZG93blwiOmNhc2UgXCJrZXl1cFwiOnJldHVybiBYZChjLGQpfXJldHVybiBudWxsfX07QmEuaW5qZWN0RXZlbnRQbHVnaW5PcmRlcihcIlJlc3BvbmRlckV2ZW50UGx1Z2luIFNpbXBsZUV2ZW50UGx1Z2luIEVudGVyTGVhdmVFdmVudFBsdWdpbiBDaGFuZ2VFdmVudFBsdWdpbiBTZWxlY3RFdmVudFBsdWdpbiBCZWZvcmVJbnB1dEV2ZW50UGx1Z2luXCIuc3BsaXQoXCIgXCIpKTt0YT1LYTt1YT1JYTt2YT1KYTtCYS5pbmplY3RFdmVudFBsdWdpbnNCeU5hbWUoe1NpbXBsZUV2ZW50UGx1Z2luOnhkLEVudGVyTGVhdmVFdmVudFBsdWdpbjphZCxDaGFuZ2VFdmVudFBsdWdpbjpQYyxTZWxlY3RFdmVudFBsdWdpbjpZZCxCZWZvcmVJbnB1dEV2ZW50UGx1Z2luOnpifSk7ZnVuY3Rpb24gWmQoYSl7dmFyIGI9XCJcIjthYS5DaGlsZHJlbi5mb3JFYWNoKGEsZnVuY3Rpb24oYSl7bnVsbCE9YSYmKGIrPWEpfSk7cmV0dXJuIGJ9XG5mdW5jdGlvbiAkZChhLGIpe2E9bih7Y2hpbGRyZW46dm9pZCAwfSxiKTtpZihiPVpkKGIuY2hpbGRyZW4pKWEuY2hpbGRyZW49YjtyZXR1cm4gYX1mdW5jdGlvbiBhZShhLGIsYyxkKXthPWEub3B0aW9ucztpZihiKXtiPXt9O2Zvcih2YXIgZT0wO2U8Yy5sZW5ndGg7ZSsrKWJbXCIkXCIrY1tlXV09ITA7Zm9yKGM9MDtjPGEubGVuZ3RoO2MrKyllPWIuaGFzT3duUHJvcGVydHkoXCIkXCIrYVtjXS52YWx1ZSksYVtjXS5zZWxlY3RlZCE9PWUmJihhW2NdLnNlbGVjdGVkPWUpLGUmJmQmJihhW2NdLmRlZmF1bHRTZWxlY3RlZD0hMCl9ZWxzZXtjPVwiXCIrdWMoYyk7Yj1udWxsO2ZvcihlPTA7ZTxhLmxlbmd0aDtlKyspe2lmKGFbZV0udmFsdWU9PT1jKXthW2VdLnNlbGVjdGVkPSEwO2QmJihhW2VdLmRlZmF1bHRTZWxlY3RlZD0hMCk7cmV0dXJufW51bGwhPT1ifHxhW2VdLmRpc2FibGVkfHwoYj1hW2VdKX1udWxsIT09YiYmKGIuc2VsZWN0ZWQ9ITApfX1cbmZ1bmN0aW9uIGJlKGEsYil7bnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTD94KFwiOTFcIik6dm9pZCAwO3JldHVybiBuKHt9LGIse3ZhbHVlOnZvaWQgMCxkZWZhdWx0VmFsdWU6dm9pZCAwLGNoaWxkcmVuOlwiXCIrYS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZX0pfWZ1bmN0aW9uIGNlKGEsYil7dmFyIGM9Yi52YWx1ZTtudWxsPT1jJiYoYz1iLmRlZmF1bHRWYWx1ZSxiPWIuY2hpbGRyZW4sbnVsbCE9YiYmKG51bGwhPWM/eChcIjkyXCIpOnZvaWQgMCxBcnJheS5pc0FycmF5KGIpJiYoMT49Yi5sZW5ndGg/dm9pZCAwOngoXCI5M1wiKSxiPWJbMF0pLGM9YiksbnVsbD09YyYmKGM9XCJcIikpO2EuX3dyYXBwZXJTdGF0ZT17aW5pdGlhbFZhbHVlOnVjKGMpfX1cbmZ1bmN0aW9uIGRlKGEsYil7dmFyIGM9dWMoYi52YWx1ZSksZD11YyhiLmRlZmF1bHRWYWx1ZSk7bnVsbCE9YyYmKGM9XCJcIitjLGMhPT1hLnZhbHVlJiYoYS52YWx1ZT1jKSxudWxsPT1iLmRlZmF1bHRWYWx1ZSYmYS5kZWZhdWx0VmFsdWUhPT1jJiYoYS5kZWZhdWx0VmFsdWU9YykpO251bGwhPWQmJihhLmRlZmF1bHRWYWx1ZT1cIlwiK2QpfWZ1bmN0aW9uIGVlKGEpe3ZhciBiPWEudGV4dENvbnRlbnQ7Yj09PWEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWUmJihhLnZhbHVlPWIpfXZhciBmZT17aHRtbDpcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIixtYXRobWw6XCJodHRwOi8vd3d3LnczLm9yZy8xOTk4L01hdGgvTWF0aE1MXCIsc3ZnOlwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIn07XG5mdW5jdGlvbiBnZShhKXtzd2l0Y2goYSl7Y2FzZSBcInN2Z1wiOnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIjtjYXNlIFwibWF0aFwiOnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMTk5OC9NYXRoL01hdGhNTFwiO2RlZmF1bHQ6cmV0dXJuXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCJ9fWZ1bmN0aW9uIGhlKGEsYil7cmV0dXJuIG51bGw9PWF8fFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiPT09YT9nZShiKTpcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI9PT1hJiZcImZvcmVpZ25PYmplY3RcIj09PWI/XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCI6YX1cbnZhciBpZT12b2lkIDAsamU9ZnVuY3Rpb24oYSl7cmV0dXJuXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBNU0FwcCYmTVNBcHAuZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24/ZnVuY3Rpb24oYixjLGQsZSl7TVNBcHAuZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24oZnVuY3Rpb24oKXtyZXR1cm4gYShiLGMsZCxlKX0pfTphfShmdW5jdGlvbihhLGIpe2lmKGEubmFtZXNwYWNlVVJJIT09ZmUuc3ZnfHxcImlubmVySFRNTFwiaW4gYSlhLmlubmVySFRNTD1iO2Vsc2V7aWU9aWV8fGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7aWUuaW5uZXJIVE1MPVwiPHN2Zz5cIitiK1wiPC9zdmc+XCI7Zm9yKGI9aWUuZmlyc3RDaGlsZDthLmZpcnN0Q2hpbGQ7KWEucmVtb3ZlQ2hpbGQoYS5maXJzdENoaWxkKTtmb3IoO2IuZmlyc3RDaGlsZDspYS5hcHBlbmRDaGlsZChiLmZpcnN0Q2hpbGQpfX0pO1xuZnVuY3Rpb24ga2UoYSxiKXtpZihiKXt2YXIgYz1hLmZpcnN0Q2hpbGQ7aWYoYyYmYz09PWEubGFzdENoaWxkJiYzPT09Yy5ub2RlVHlwZSl7Yy5ub2RlVmFsdWU9YjtyZXR1cm59fWEudGV4dENvbnRlbnQ9Yn1cbnZhciBsZT17YW5pbWF0aW9uSXRlcmF0aW9uQ291bnQ6ITAsYm9yZGVySW1hZ2VPdXRzZXQ6ITAsYm9yZGVySW1hZ2VTbGljZTohMCxib3JkZXJJbWFnZVdpZHRoOiEwLGJveEZsZXg6ITAsYm94RmxleEdyb3VwOiEwLGJveE9yZGluYWxHcm91cDohMCxjb2x1bW5Db3VudDohMCxjb2x1bW5zOiEwLGZsZXg6ITAsZmxleEdyb3c6ITAsZmxleFBvc2l0aXZlOiEwLGZsZXhTaHJpbms6ITAsZmxleE5lZ2F0aXZlOiEwLGZsZXhPcmRlcjohMCxncmlkQXJlYTohMCxncmlkUm93OiEwLGdyaWRSb3dFbmQ6ITAsZ3JpZFJvd1NwYW46ITAsZ3JpZFJvd1N0YXJ0OiEwLGdyaWRDb2x1bW46ITAsZ3JpZENvbHVtbkVuZDohMCxncmlkQ29sdW1uU3BhbjohMCxncmlkQ29sdW1uU3RhcnQ6ITAsZm9udFdlaWdodDohMCxsaW5lQ2xhbXA6ITAsbGluZUhlaWdodDohMCxvcGFjaXR5OiEwLG9yZGVyOiEwLG9ycGhhbnM6ITAsdGFiU2l6ZTohMCx3aWRvd3M6ITAsekluZGV4OiEwLHpvb206ITAsZmlsbE9wYWNpdHk6ITAsXG5mbG9vZE9wYWNpdHk6ITAsc3RvcE9wYWNpdHk6ITAsc3Ryb2tlRGFzaGFycmF5OiEwLHN0cm9rZURhc2hvZmZzZXQ6ITAsc3Ryb2tlTWl0ZXJsaW1pdDohMCxzdHJva2VPcGFjaXR5OiEwLHN0cm9rZVdpZHRoOiEwfSxtZT1bXCJXZWJraXRcIixcIm1zXCIsXCJNb3pcIixcIk9cIl07T2JqZWN0LmtleXMobGUpLmZvckVhY2goZnVuY3Rpb24oYSl7bWUuZm9yRWFjaChmdW5jdGlvbihiKXtiPWIrYS5jaGFyQXQoMCkudG9VcHBlckNhc2UoKSthLnN1YnN0cmluZygxKTtsZVtiXT1sZVthXX0pfSk7ZnVuY3Rpb24gbmUoYSxiLGMpe3JldHVybiBudWxsPT1ifHxcImJvb2xlYW5cIj09PXR5cGVvZiBifHxcIlwiPT09Yj9cIlwiOmN8fFwibnVtYmVyXCIhPT10eXBlb2YgYnx8MD09PWJ8fGxlLmhhc093blByb3BlcnR5KGEpJiZsZVthXT8oXCJcIitiKS50cmltKCk6YitcInB4XCJ9XG5mdW5jdGlvbiBvZShhLGIpe2E9YS5zdHlsZTtmb3IodmFyIGMgaW4gYilpZihiLmhhc093blByb3BlcnR5KGMpKXt2YXIgZD0wPT09Yy5pbmRleE9mKFwiLS1cIiksZT1uZShjLGJbY10sZCk7XCJmbG9hdFwiPT09YyYmKGM9XCJjc3NGbG9hdFwiKTtkP2Euc2V0UHJvcGVydHkoYyxlKTphW2NdPWV9fXZhciBwZT1uKHttZW51aXRlbTohMH0se2FyZWE6ITAsYmFzZTohMCxicjohMCxjb2w6ITAsZW1iZWQ6ITAsaHI6ITAsaW1nOiEwLGlucHV0OiEwLGtleWdlbjohMCxsaW5rOiEwLG1ldGE6ITAscGFyYW06ITAsc291cmNlOiEwLHRyYWNrOiEwLHdicjohMH0pO1xuZnVuY3Rpb24gcWUoYSxiKXtiJiYocGVbYV0mJihudWxsIT1iLmNoaWxkcmVufHxudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MP3goXCIxMzdcIixhLFwiXCIpOnZvaWQgMCksbnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCYmKG51bGwhPWIuY2hpbGRyZW4/eChcIjYwXCIpOnZvaWQgMCxcIm9iamVjdFwiPT09dHlwZW9mIGIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJlwiX19odG1sXCJpbiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MP3ZvaWQgMDp4KFwiNjFcIikpLG51bGwhPWIuc3R5bGUmJlwib2JqZWN0XCIhPT10eXBlb2YgYi5zdHlsZT94KFwiNjJcIixcIlwiKTp2b2lkIDApfVxuZnVuY3Rpb24gcmUoYSxiKXtpZigtMT09PWEuaW5kZXhPZihcIi1cIikpcmV0dXJuXCJzdHJpbmdcIj09PXR5cGVvZiBiLmlzO3N3aXRjaChhKXtjYXNlIFwiYW5ub3RhdGlvbi14bWxcIjpjYXNlIFwiY29sb3ItcHJvZmlsZVwiOmNhc2UgXCJmb250LWZhY2VcIjpjYXNlIFwiZm9udC1mYWNlLXNyY1wiOmNhc2UgXCJmb250LWZhY2UtdXJpXCI6Y2FzZSBcImZvbnQtZmFjZS1mb3JtYXRcIjpjYXNlIFwiZm9udC1mYWNlLW5hbWVcIjpjYXNlIFwibWlzc2luZy1nbHlwaFwiOnJldHVybiExO2RlZmF1bHQ6cmV0dXJuITB9fVxuZnVuY3Rpb24gc2UoYSxiKXthPTk9PT1hLm5vZGVUeXBlfHwxMT09PWEubm9kZVR5cGU/YTphLm93bmVyRG9jdW1lbnQ7dmFyIGM9SWQoYSk7Yj1zYVtiXTtmb3IodmFyIGQ9MDtkPGIubGVuZ3RoO2QrKyl7dmFyIGU9YltkXTtpZighYy5oYXNPd25Qcm9wZXJ0eShlKXx8IWNbZV0pe3N3aXRjaChlKXtjYXNlIFwic2Nyb2xsXCI6RWQoXCJzY3JvbGxcIixhKTticmVhaztjYXNlIFwiZm9jdXNcIjpjYXNlIFwiYmx1clwiOkVkKFwiZm9jdXNcIixhKTtFZChcImJsdXJcIixhKTtjLmJsdXI9ITA7Yy5mb2N1cz0hMDticmVhaztjYXNlIFwiY2FuY2VsXCI6Y2FzZSBcImNsb3NlXCI6T2IoZSkmJkVkKGUsYSk7YnJlYWs7Y2FzZSBcImludmFsaWRcIjpjYXNlIFwic3VibWl0XCI6Y2FzZSBcInJlc2V0XCI6YnJlYWs7ZGVmYXVsdDotMT09PWFiLmluZGV4T2YoZSkmJkUoZSxhKX1jW2VdPSEwfX19ZnVuY3Rpb24gdGUoKXt9dmFyIHVlPW51bGwsdmU9bnVsbDtcbmZ1bmN0aW9uIHdlKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJidXR0b25cIjpjYXNlIFwiaW5wdXRcIjpjYXNlIFwic2VsZWN0XCI6Y2FzZSBcInRleHRhcmVhXCI6cmV0dXJuISFiLmF1dG9Gb2N1c31yZXR1cm4hMX1mdW5jdGlvbiB4ZShhLGIpe3JldHVyblwidGV4dGFyZWFcIj09PWF8fFwib3B0aW9uXCI9PT1hfHxcIm5vc2NyaXB0XCI9PT1hfHxcInN0cmluZ1wiPT09dHlwZW9mIGIuY2hpbGRyZW58fFwibnVtYmVyXCI9PT10eXBlb2YgYi5jaGlsZHJlbnx8XCJvYmplY3RcIj09PXR5cGVvZiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiZudWxsIT09Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCYmbnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTC5fX2h0bWx9XG52YXIgeWU9XCJmdW5jdGlvblwiPT09dHlwZW9mIHNldFRpbWVvdXQ/c2V0VGltZW91dDp2b2lkIDAsemU9XCJmdW5jdGlvblwiPT09dHlwZW9mIGNsZWFyVGltZW91dD9jbGVhclRpbWVvdXQ6dm9pZCAwLEFlPXIudW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjayxCZT1yLnVuc3RhYmxlX2NhbmNlbENhbGxiYWNrO1xuZnVuY3Rpb24gQ2UoYSxiLGMsZCxlKXthW0dhXT1lO1wiaW5wdXRcIj09PWMmJlwicmFkaW9cIj09PWUudHlwZSYmbnVsbCE9ZS5uYW1lJiZ4YyhhLGUpO3JlKGMsZCk7ZD1yZShjLGUpO2Zvcih2YXIgZj0wO2Y8Yi5sZW5ndGg7Zis9Mil7dmFyIGc9YltmXSxoPWJbZisxXTtcInN0eWxlXCI9PT1nP29lKGEsaCk6XCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiPT09Zz9qZShhLGgpOlwiY2hpbGRyZW5cIj09PWc/a2UoYSxoKTp0YyhhLGcsaCxkKX1zd2l0Y2goYyl7Y2FzZSBcImlucHV0XCI6eWMoYSxlKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpkZShhLGUpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpiPWEuX3dyYXBwZXJTdGF0ZS53YXNNdWx0aXBsZSxhLl93cmFwcGVyU3RhdGUud2FzTXVsdGlwbGU9ISFlLm11bHRpcGxlLGM9ZS52YWx1ZSxudWxsIT1jP2FlKGEsISFlLm11bHRpcGxlLGMsITEpOmIhPT0hIWUubXVsdGlwbGUmJihudWxsIT1lLmRlZmF1bHRWYWx1ZT9hZShhLCEhZS5tdWx0aXBsZSxlLmRlZmF1bHRWYWx1ZSxcbiEwKTphZShhLCEhZS5tdWx0aXBsZSxlLm11bHRpcGxlP1tdOlwiXCIsITEpKX19ZnVuY3Rpb24gRGUoYSl7Zm9yKGE9YS5uZXh0U2libGluZzthJiYxIT09YS5ub2RlVHlwZSYmMyE9PWEubm9kZVR5cGU7KWE9YS5uZXh0U2libGluZztyZXR1cm4gYX1mdW5jdGlvbiBFZShhKXtmb3IoYT1hLmZpcnN0Q2hpbGQ7YSYmMSE9PWEubm9kZVR5cGUmJjMhPT1hLm5vZGVUeXBlOylhPWEubmV4dFNpYmxpbmc7cmV0dXJuIGF9bmV3IFNldDt2YXIgRmU9W10sR2U9LTE7ZnVuY3Rpb24gRihhKXswPkdlfHwoYS5jdXJyZW50PUZlW0dlXSxGZVtHZV09bnVsbCxHZS0tKX1mdW5jdGlvbiBHKGEsYil7R2UrKztGZVtHZV09YS5jdXJyZW50O2EuY3VycmVudD1ifXZhciBIZT17fSxIPXtjdXJyZW50OkhlfSxJPXtjdXJyZW50OiExfSxJZT1IZTtcbmZ1bmN0aW9uIEplKGEsYil7dmFyIGM9YS50eXBlLmNvbnRleHRUeXBlcztpZighYylyZXR1cm4gSGU7dmFyIGQ9YS5zdGF0ZU5vZGU7aWYoZCYmZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PT09YilyZXR1cm4gZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dDt2YXIgZT17fSxmO2ZvcihmIGluIGMpZVtmXT1iW2ZdO2QmJihhPWEuc3RhdGVOb2RlLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dD1iLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQ9ZSk7cmV0dXJuIGV9ZnVuY3Rpb24gSihhKXthPWEuY2hpbGRDb250ZXh0VHlwZXM7cmV0dXJuIG51bGwhPT1hJiZ2b2lkIDAhPT1hfWZ1bmN0aW9uIEtlKGEpe0YoSSxhKTtGKEgsYSl9ZnVuY3Rpb24gTGUoYSl7RihJLGEpO0YoSCxhKX1cbmZ1bmN0aW9uIE1lKGEsYixjKXtILmN1cnJlbnQhPT1IZT94KFwiMTY4XCIpOnZvaWQgMDtHKEgsYixhKTtHKEksYyxhKX1mdW5jdGlvbiBOZShhLGIsYyl7dmFyIGQ9YS5zdGF0ZU5vZGU7YT1iLmNoaWxkQ29udGV4dFR5cGVzO2lmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBkLmdldENoaWxkQ29udGV4dClyZXR1cm4gYztkPWQuZ2V0Q2hpbGRDb250ZXh0KCk7Zm9yKHZhciBlIGluIGQpZSBpbiBhP3ZvaWQgMDp4KFwiMTA4XCIsaWMoYil8fFwiVW5rbm93blwiLGUpO3JldHVybiBuKHt9LGMsZCl9ZnVuY3Rpb24gT2UoYSl7dmFyIGI9YS5zdGF0ZU5vZGU7Yj1iJiZiLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0fHxIZTtJZT1ILmN1cnJlbnQ7RyhILGIsYSk7RyhJLEkuY3VycmVudCxhKTtyZXR1cm4hMH1cbmZ1bmN0aW9uIFBlKGEsYixjKXt2YXIgZD1hLnN0YXRlTm9kZTtkP3ZvaWQgMDp4KFwiMTY5XCIpO2M/KGI9TmUoYSxiLEllKSxkLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0PWIsRihJLGEpLEYoSCxhKSxHKEgsYixhKSk6RihJLGEpO0coSSxjLGEpfXZhciBRZT1udWxsLFJlPW51bGw7ZnVuY3Rpb24gU2UoYSl7cmV0dXJuIGZ1bmN0aW9uKGIpe3RyeXtyZXR1cm4gYShiKX1jYXRjaChjKXt9fX1cbmZ1bmN0aW9uIFRlKGEpe2lmKFwidW5kZWZpbmVkXCI9PT10eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fKXJldHVybiExO3ZhciBiPV9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXztpZihiLmlzRGlzYWJsZWR8fCFiLnN1cHBvcnRzRmliZXIpcmV0dXJuITA7dHJ5e3ZhciBjPWIuaW5qZWN0KGEpO1FlPVNlKGZ1bmN0aW9uKGEpe3JldHVybiBiLm9uQ29tbWl0RmliZXJSb290KGMsYSl9KTtSZT1TZShmdW5jdGlvbihhKXtyZXR1cm4gYi5vbkNvbW1pdEZpYmVyVW5tb3VudChjLGEpfSl9Y2F0Y2goZCl7fXJldHVybiEwfVxuZnVuY3Rpb24gVWUoYSxiLGMsZCl7dGhpcy50YWc9YTt0aGlzLmtleT1jO3RoaXMuc2libGluZz10aGlzLmNoaWxkPXRoaXMucmV0dXJuPXRoaXMuc3RhdGVOb2RlPXRoaXMudHlwZT10aGlzLmVsZW1lbnRUeXBlPW51bGw7dGhpcy5pbmRleD0wO3RoaXMucmVmPW51bGw7dGhpcy5wZW5kaW5nUHJvcHM9Yjt0aGlzLmNvbnRleHREZXBlbmRlbmNpZXM9dGhpcy5tZW1vaXplZFN0YXRlPXRoaXMudXBkYXRlUXVldWU9dGhpcy5tZW1vaXplZFByb3BzPW51bGw7dGhpcy5tb2RlPWQ7dGhpcy5lZmZlY3RUYWc9MDt0aGlzLmxhc3RFZmZlY3Q9dGhpcy5maXJzdEVmZmVjdD10aGlzLm5leHRFZmZlY3Q9bnVsbDt0aGlzLmNoaWxkRXhwaXJhdGlvblRpbWU9dGhpcy5leHBpcmF0aW9uVGltZT0wO3RoaXMuYWx0ZXJuYXRlPW51bGx9ZnVuY3Rpb24gSyhhLGIsYyxkKXtyZXR1cm4gbmV3IFVlKGEsYixjLGQpfVxuZnVuY3Rpb24gVmUoYSl7YT1hLnByb3RvdHlwZTtyZXR1cm4hKCFhfHwhYS5pc1JlYWN0Q29tcG9uZW50KX1mdW5jdGlvbiBXZShhKXtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSlyZXR1cm4gVmUoYSk/MTowO2lmKHZvaWQgMCE9PWEmJm51bGwhPT1hKXthPWEuJCR0eXBlb2Y7aWYoYT09PWNjKXJldHVybiAxMTtpZihhPT09ZWMpcmV0dXJuIDE0fXJldHVybiAyfVxuZnVuY3Rpb24gWGUoYSxiKXt2YXIgYz1hLmFsdGVybmF0ZTtudWxsPT09Yz8oYz1LKGEudGFnLGIsYS5rZXksYS5tb2RlKSxjLmVsZW1lbnRUeXBlPWEuZWxlbWVudFR5cGUsYy50eXBlPWEudHlwZSxjLnN0YXRlTm9kZT1hLnN0YXRlTm9kZSxjLmFsdGVybmF0ZT1hLGEuYWx0ZXJuYXRlPWMpOihjLnBlbmRpbmdQcm9wcz1iLGMuZWZmZWN0VGFnPTAsYy5uZXh0RWZmZWN0PW51bGwsYy5maXJzdEVmZmVjdD1udWxsLGMubGFzdEVmZmVjdD1udWxsKTtjLmNoaWxkRXhwaXJhdGlvblRpbWU9YS5jaGlsZEV4cGlyYXRpb25UaW1lO2MuZXhwaXJhdGlvblRpbWU9YS5leHBpcmF0aW9uVGltZTtjLmNoaWxkPWEuY2hpbGQ7Yy5tZW1vaXplZFByb3BzPWEubWVtb2l6ZWRQcm9wcztjLm1lbW9pemVkU3RhdGU9YS5tZW1vaXplZFN0YXRlO2MudXBkYXRlUXVldWU9YS51cGRhdGVRdWV1ZTtjLmNvbnRleHREZXBlbmRlbmNpZXM9YS5jb250ZXh0RGVwZW5kZW5jaWVzO2Muc2libGluZz1hLnNpYmxpbmc7XG5jLmluZGV4PWEuaW5kZXg7Yy5yZWY9YS5yZWY7cmV0dXJuIGN9XG5mdW5jdGlvbiBZZShhLGIsYyxkLGUsZil7dmFyIGc9MjtkPWE7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEpVmUoYSkmJihnPTEpO2Vsc2UgaWYoXCJzdHJpbmdcIj09PXR5cGVvZiBhKWc9NTtlbHNlIGE6c3dpdGNoKGEpe2Nhc2UgWGI6cmV0dXJuIFplKGMuY2hpbGRyZW4sZSxmLGIpO2Nhc2UgYmM6cmV0dXJuICRlKGMsZXwzLGYsYik7Y2FzZSBZYjpyZXR1cm4gJGUoYyxlfDIsZixiKTtjYXNlIFpiOnJldHVybiBhPUsoMTIsYyxiLGV8NCksYS5lbGVtZW50VHlwZT1aYixhLnR5cGU9WmIsYS5leHBpcmF0aW9uVGltZT1mLGE7Y2FzZSBkYzpyZXR1cm4gYT1LKDEzLGMsYixlKSxhLmVsZW1lbnRUeXBlPWRjLGEudHlwZT1kYyxhLmV4cGlyYXRpb25UaW1lPWYsYTtkZWZhdWx0OmlmKFwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEpc3dpdGNoKGEuJCR0eXBlb2Ype2Nhc2UgJGI6Zz0xMDticmVhayBhO2Nhc2UgYWM6Zz05O2JyZWFrIGE7Y2FzZSBjYzpnPTExO2JyZWFrIGE7Y2FzZSBlYzpnPVxuMTQ7YnJlYWsgYTtjYXNlIGZjOmc9MTY7ZD1udWxsO2JyZWFrIGF9eChcIjEzMFwiLG51bGw9PWE/YTp0eXBlb2YgYSxcIlwiKX1iPUsoZyxjLGIsZSk7Yi5lbGVtZW50VHlwZT1hO2IudHlwZT1kO2IuZXhwaXJhdGlvblRpbWU9ZjtyZXR1cm4gYn1mdW5jdGlvbiBaZShhLGIsYyxkKXthPUsoNyxhLGQsYik7YS5leHBpcmF0aW9uVGltZT1jO3JldHVybiBhfWZ1bmN0aW9uICRlKGEsYixjLGQpe2E9Syg4LGEsZCxiKTtiPTA9PT0oYiYxKT9ZYjpiYzthLmVsZW1lbnRUeXBlPWI7YS50eXBlPWI7YS5leHBpcmF0aW9uVGltZT1jO3JldHVybiBhfWZ1bmN0aW9uIGFmKGEsYixjKXthPUsoNixhLG51bGwsYik7YS5leHBpcmF0aW9uVGltZT1jO3JldHVybiBhfVxuZnVuY3Rpb24gYmYoYSxiLGMpe2I9Syg0LG51bGwhPT1hLmNoaWxkcmVuP2EuY2hpbGRyZW46W10sYS5rZXksYik7Yi5leHBpcmF0aW9uVGltZT1jO2Iuc3RhdGVOb2RlPXtjb250YWluZXJJbmZvOmEuY29udGFpbmVySW5mbyxwZW5kaW5nQ2hpbGRyZW46bnVsbCxpbXBsZW1lbnRhdGlvbjphLmltcGxlbWVudGF0aW9ufTtyZXR1cm4gYn1mdW5jdGlvbiBjZihhLGIpe2EuZGlkRXJyb3I9ITE7dmFyIGM9YS5lYXJsaWVzdFBlbmRpbmdUaW1lOzA9PT1jP2EuZWFybGllc3RQZW5kaW5nVGltZT1hLmxhdGVzdFBlbmRpbmdUaW1lPWI6YzxiP2EuZWFybGllc3RQZW5kaW5nVGltZT1iOmEubGF0ZXN0UGVuZGluZ1RpbWU+YiYmKGEubGF0ZXN0UGVuZGluZ1RpbWU9Yik7ZGYoYixhKX1cbmZ1bmN0aW9uIGVmKGEsYil7YS5kaWRFcnJvcj0hMTtpZigwPT09YilhLmVhcmxpZXN0UGVuZGluZ1RpbWU9MCxhLmxhdGVzdFBlbmRpbmdUaW1lPTAsYS5lYXJsaWVzdFN1c3BlbmRlZFRpbWU9MCxhLmxhdGVzdFN1c3BlbmRlZFRpbWU9MCxhLmxhdGVzdFBpbmdlZFRpbWU9MDtlbHNle2I8YS5sYXRlc3RQaW5nZWRUaW1lJiYoYS5sYXRlc3RQaW5nZWRUaW1lPTApO3ZhciBjPWEubGF0ZXN0UGVuZGluZ1RpbWU7MCE9PWMmJihjPmI/YS5lYXJsaWVzdFBlbmRpbmdUaW1lPWEubGF0ZXN0UGVuZGluZ1RpbWU9MDphLmVhcmxpZXN0UGVuZGluZ1RpbWU+YiYmKGEuZWFybGllc3RQZW5kaW5nVGltZT1hLmxhdGVzdFBlbmRpbmdUaW1lKSk7Yz1hLmVhcmxpZXN0U3VzcGVuZGVkVGltZTswPT09Yz9jZihhLGIpOmI8YS5sYXRlc3RTdXNwZW5kZWRUaW1lPyhhLmVhcmxpZXN0U3VzcGVuZGVkVGltZT0wLGEubGF0ZXN0U3VzcGVuZGVkVGltZT0wLGEubGF0ZXN0UGluZ2VkVGltZT0wLGNmKGEsYikpOlxuYj5jJiZjZihhLGIpfWRmKDAsYSl9ZnVuY3Rpb24gZmYoYSxiKXthLmRpZEVycm9yPSExO2EubGF0ZXN0UGluZ2VkVGltZT49YiYmKGEubGF0ZXN0UGluZ2VkVGltZT0wKTt2YXIgYz1hLmVhcmxpZXN0UGVuZGluZ1RpbWUsZD1hLmxhdGVzdFBlbmRpbmdUaW1lO2M9PT1iP2EuZWFybGllc3RQZW5kaW5nVGltZT1kPT09Yj9hLmxhdGVzdFBlbmRpbmdUaW1lPTA6ZDpkPT09YiYmKGEubGF0ZXN0UGVuZGluZ1RpbWU9Yyk7Yz1hLmVhcmxpZXN0U3VzcGVuZGVkVGltZTtkPWEubGF0ZXN0U3VzcGVuZGVkVGltZTswPT09Yz9hLmVhcmxpZXN0U3VzcGVuZGVkVGltZT1hLmxhdGVzdFN1c3BlbmRlZFRpbWU9YjpjPGI/YS5lYXJsaWVzdFN1c3BlbmRlZFRpbWU9YjpkPmImJihhLmxhdGVzdFN1c3BlbmRlZFRpbWU9Yik7ZGYoYixhKX1cbmZ1bmN0aW9uIGdmKGEsYil7dmFyIGM9YS5lYXJsaWVzdFBlbmRpbmdUaW1lO2E9YS5lYXJsaWVzdFN1c3BlbmRlZFRpbWU7Yz5iJiYoYj1jKTthPmImJihiPWEpO3JldHVybiBifWZ1bmN0aW9uIGRmKGEsYil7dmFyIGM9Yi5lYXJsaWVzdFN1c3BlbmRlZFRpbWUsZD1iLmxhdGVzdFN1c3BlbmRlZFRpbWUsZT1iLmVhcmxpZXN0UGVuZGluZ1RpbWUsZj1iLmxhdGVzdFBpbmdlZFRpbWU7ZT0wIT09ZT9lOmY7MD09PWUmJigwPT09YXx8ZDxhKSYmKGU9ZCk7YT1lOzAhPT1hJiZjPmEmJihhPWMpO2IubmV4dEV4cGlyYXRpb25UaW1lVG9Xb3JrT249ZTtiLmV4cGlyYXRpb25UaW1lPWF9ZnVuY3Rpb24gTChhLGIpe2lmKGEmJmEuZGVmYXVsdFByb3BzKXtiPW4oe30sYik7YT1hLmRlZmF1bHRQcm9wcztmb3IodmFyIGMgaW4gYSl2b2lkIDA9PT1iW2NdJiYoYltjXT1hW2NdKX1yZXR1cm4gYn1cbmZ1bmN0aW9uIGhmKGEpe3ZhciBiPWEuX3Jlc3VsdDtzd2l0Y2goYS5fc3RhdHVzKXtjYXNlIDE6cmV0dXJuIGI7Y2FzZSAyOnRocm93IGI7Y2FzZSAwOnRocm93IGI7ZGVmYXVsdDphLl9zdGF0dXM9MDtiPWEuX2N0b3I7Yj1iKCk7Yi50aGVuKGZ1bmN0aW9uKGIpezA9PT1hLl9zdGF0dXMmJihiPWIuZGVmYXVsdCxhLl9zdGF0dXM9MSxhLl9yZXN1bHQ9Yil9LGZ1bmN0aW9uKGIpezA9PT1hLl9zdGF0dXMmJihhLl9zdGF0dXM9MixhLl9yZXN1bHQ9Yil9KTtzd2l0Y2goYS5fc3RhdHVzKXtjYXNlIDE6cmV0dXJuIGEuX3Jlc3VsdDtjYXNlIDI6dGhyb3cgYS5fcmVzdWx0O31hLl9yZXN1bHQ9Yjt0aHJvdyBiO319dmFyIGpmPShuZXcgYWEuQ29tcG9uZW50KS5yZWZzO1xuZnVuY3Rpb24ga2YoYSxiLGMsZCl7Yj1hLm1lbW9pemVkU3RhdGU7Yz1jKGQsYik7Yz1udWxsPT09Y3x8dm9pZCAwPT09Yz9iOm4oe30sYixjKTthLm1lbW9pemVkU3RhdGU9YztkPWEudXBkYXRlUXVldWU7bnVsbCE9PWQmJjA9PT1hLmV4cGlyYXRpb25UaW1lJiYoZC5iYXNlU3RhdGU9Yyl9XG52YXIgdGY9e2lzTW91bnRlZDpmdW5jdGlvbihhKXtyZXR1cm4oYT1hLl9yZWFjdEludGVybmFsRmliZXIpPzI9PT1lZChhKTohMX0sZW5xdWV1ZVNldFN0YXRlOmZ1bmN0aW9uKGEsYixjKXthPWEuX3JlYWN0SW50ZXJuYWxGaWJlcjt2YXIgZD1sZigpO2Q9bWYoZCxhKTt2YXIgZT1uZihkKTtlLnBheWxvYWQ9Yjt2b2lkIDAhPT1jJiZudWxsIT09YyYmKGUuY2FsbGJhY2s9Yyk7b2YoKTtwZihhLGUpO3FmKGEsZCl9LGVucXVldWVSZXBsYWNlU3RhdGU6ZnVuY3Rpb24oYSxiLGMpe2E9YS5fcmVhY3RJbnRlcm5hbEZpYmVyO3ZhciBkPWxmKCk7ZD1tZihkLGEpO3ZhciBlPW5mKGQpO2UudGFnPXJmO2UucGF5bG9hZD1iO3ZvaWQgMCE9PWMmJm51bGwhPT1jJiYoZS5jYWxsYmFjaz1jKTtvZigpO3BmKGEsZSk7cWYoYSxkKX0sZW5xdWV1ZUZvcmNlVXBkYXRlOmZ1bmN0aW9uKGEsYil7YT1hLl9yZWFjdEludGVybmFsRmliZXI7dmFyIGM9bGYoKTtjPW1mKGMsYSk7dmFyIGQ9bmYoYyk7ZC50YWc9XG5zZjt2b2lkIDAhPT1iJiZudWxsIT09YiYmKGQuY2FsbGJhY2s9Yik7b2YoKTtwZihhLGQpO3FmKGEsYyl9fTtmdW5jdGlvbiB1ZihhLGIsYyxkLGUsZixnKXthPWEuc3RhdGVOb2RlO3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBhLnNob3VsZENvbXBvbmVudFVwZGF0ZT9hLnNob3VsZENvbXBvbmVudFVwZGF0ZShkLGYsZyk6Yi5wcm90b3R5cGUmJmIucHJvdG90eXBlLmlzUHVyZVJlYWN0Q29tcG9uZW50PyFkZChjLGQpfHwhZGQoZSxmKTohMH1cbmZ1bmN0aW9uIHZmKGEsYixjKXt2YXIgZD0hMSxlPUhlO3ZhciBmPWIuY29udGV4dFR5cGU7XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09Zj9mPU0oZik6KGU9SihiKT9JZTpILmN1cnJlbnQsZD1iLmNvbnRleHRUeXBlcyxmPShkPW51bGwhPT1kJiZ2b2lkIDAhPT1kKT9KZShhLGUpOkhlKTtiPW5ldyBiKGMsZik7YS5tZW1vaXplZFN0YXRlPW51bGwhPT1iLnN0YXRlJiZ2b2lkIDAhPT1iLnN0YXRlP2Iuc3RhdGU6bnVsbDtiLnVwZGF0ZXI9dGY7YS5zdGF0ZU5vZGU9YjtiLl9yZWFjdEludGVybmFsRmliZXI9YTtkJiYoYT1hLnN0YXRlTm9kZSxhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQ9ZSxhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0PWYpO3JldHVybiBifVxuZnVuY3Rpb24gd2YoYSxiLGMsZCl7YT1iLnN0YXRlO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBiLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJmIuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhjLGQpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBiLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZiLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKGMsZCk7Yi5zdGF0ZSE9PWEmJnRmLmVucXVldWVSZXBsYWNlU3RhdGUoYixiLnN0YXRlLG51bGwpfVxuZnVuY3Rpb24geGYoYSxiLGMsZCl7dmFyIGU9YS5zdGF0ZU5vZGU7ZS5wcm9wcz1jO2Uuc3RhdGU9YS5tZW1vaXplZFN0YXRlO2UucmVmcz1qZjt2YXIgZj1iLmNvbnRleHRUeXBlO1wib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWY/ZS5jb250ZXh0PU0oZik6KGY9SihiKT9JZTpILmN1cnJlbnQsZS5jb250ZXh0PUplKGEsZikpO2Y9YS51cGRhdGVRdWV1ZTtudWxsIT09ZiYmKHlmKGEsZixjLGUsZCksZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGUpO2Y9Yi5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHM7XCJmdW5jdGlvblwiPT09dHlwZW9mIGYmJihrZihhLGIsZixjKSxlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZSk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGIuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZXx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGUuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmXCJmdW5jdGlvblwiIT09XG50eXBlb2YgZS5jb21wb25lbnRXaWxsTW91bnR8fChiPWUuc3RhdGUsXCJmdW5jdGlvblwiPT09dHlwZW9mIGUuY29tcG9uZW50V2lsbE1vdW50JiZlLmNvbXBvbmVudFdpbGxNb3VudCgpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJmUuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCgpLGIhPT1lLnN0YXRlJiZ0Zi5lbnF1ZXVlUmVwbGFjZVN0YXRlKGUsZS5zdGF0ZSxudWxsKSxmPWEudXBkYXRlUXVldWUsbnVsbCE9PWYmJih5ZihhLGYsYyxlLGQpLGUuc3RhdGU9YS5tZW1vaXplZFN0YXRlKSk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGUuY29tcG9uZW50RGlkTW91bnQmJihhLmVmZmVjdFRhZ3w9NCl9dmFyIHpmPUFycmF5LmlzQXJyYXk7XG5mdW5jdGlvbiBBZihhLGIsYyl7YT1jLnJlZjtpZihudWxsIT09YSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGEmJlwib2JqZWN0XCIhPT10eXBlb2YgYSl7aWYoYy5fb3duZXIpe2M9Yy5fb3duZXI7dmFyIGQ9dm9pZCAwO2MmJigxIT09Yy50YWc/eChcIjMwOVwiKTp2b2lkIDAsZD1jLnN0YXRlTm9kZSk7ZD92b2lkIDA6eChcIjE0N1wiLGEpO3ZhciBlPVwiXCIrYTtpZihudWxsIT09YiYmbnVsbCE9PWIucmVmJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5yZWYmJmIucmVmLl9zdHJpbmdSZWY9PT1lKXJldHVybiBiLnJlZjtiPWZ1bmN0aW9uKGEpe3ZhciBiPWQucmVmcztiPT09amYmJihiPWQucmVmcz17fSk7bnVsbD09PWE/ZGVsZXRlIGJbZV06YltlXT1hfTtiLl9zdHJpbmdSZWY9ZTtyZXR1cm4gYn1cInN0cmluZ1wiIT09dHlwZW9mIGE/eChcIjI4NFwiKTp2b2lkIDA7Yy5fb3duZXI/dm9pZCAwOngoXCIyOTBcIixhKX1yZXR1cm4gYX1cbmZ1bmN0aW9uIEJmKGEsYil7XCJ0ZXh0YXJlYVwiIT09YS50eXBlJiZ4KFwiMzFcIixcIltvYmplY3QgT2JqZWN0XVwiPT09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGIpP1wib2JqZWN0IHdpdGgga2V5cyB7XCIrT2JqZWN0LmtleXMoYikuam9pbihcIiwgXCIpK1wifVwiOmIsXCJcIil9XG5mdW5jdGlvbiBDZihhKXtmdW5jdGlvbiBiKGIsYyl7aWYoYSl7dmFyIGQ9Yi5sYXN0RWZmZWN0O251bGwhPT1kPyhkLm5leHRFZmZlY3Q9YyxiLmxhc3RFZmZlY3Q9Yyk6Yi5maXJzdEVmZmVjdD1iLmxhc3RFZmZlY3Q9YztjLm5leHRFZmZlY3Q9bnVsbDtjLmVmZmVjdFRhZz04fX1mdW5jdGlvbiBjKGMsZCl7aWYoIWEpcmV0dXJuIG51bGw7Zm9yKDtudWxsIT09ZDspYihjLGQpLGQ9ZC5zaWJsaW5nO3JldHVybiBudWxsfWZ1bmN0aW9uIGQoYSxiKXtmb3IoYT1uZXcgTWFwO251bGwhPT1iOyludWxsIT09Yi5rZXk/YS5zZXQoYi5rZXksYik6YS5zZXQoYi5pbmRleCxiKSxiPWIuc2libGluZztyZXR1cm4gYX1mdW5jdGlvbiBlKGEsYixjKXthPVhlKGEsYixjKTthLmluZGV4PTA7YS5zaWJsaW5nPW51bGw7cmV0dXJuIGF9ZnVuY3Rpb24gZihiLGMsZCl7Yi5pbmRleD1kO2lmKCFhKXJldHVybiBjO2Q9Yi5hbHRlcm5hdGU7aWYobnVsbCE9PWQpcmV0dXJuIGQ9ZC5pbmRleCxkPGM/KGIuZWZmZWN0VGFnPVxuMixjKTpkO2IuZWZmZWN0VGFnPTI7cmV0dXJuIGN9ZnVuY3Rpb24gZyhiKXthJiZudWxsPT09Yi5hbHRlcm5hdGUmJihiLmVmZmVjdFRhZz0yKTtyZXR1cm4gYn1mdW5jdGlvbiBoKGEsYixjLGQpe2lmKG51bGw9PT1ifHw2IT09Yi50YWcpcmV0dXJuIGI9YWYoYyxhLm1vZGUsZCksYi5yZXR1cm49YSxiO2I9ZShiLGMsZCk7Yi5yZXR1cm49YTtyZXR1cm4gYn1mdW5jdGlvbiBsKGEsYixjLGQpe2lmKG51bGwhPT1iJiZiLmVsZW1lbnRUeXBlPT09Yy50eXBlKXJldHVybiBkPWUoYixjLnByb3BzLGQpLGQucmVmPUFmKGEsYixjKSxkLnJldHVybj1hLGQ7ZD1ZZShjLnR5cGUsYy5rZXksYy5wcm9wcyxudWxsLGEubW9kZSxkKTtkLnJlZj1BZihhLGIsYyk7ZC5yZXR1cm49YTtyZXR1cm4gZH1mdW5jdGlvbiBrKGEsYixjLGQpe2lmKG51bGw9PT1ifHw0IT09Yi50YWd8fGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8hPT1jLmNvbnRhaW5lckluZm98fGIuc3RhdGVOb2RlLmltcGxlbWVudGF0aW9uIT09XG5jLmltcGxlbWVudGF0aW9uKXJldHVybiBiPWJmKGMsYS5tb2RlLGQpLGIucmV0dXJuPWEsYjtiPWUoYixjLmNoaWxkcmVufHxbXSxkKTtiLnJldHVybj1hO3JldHVybiBifWZ1bmN0aW9uIG0oYSxiLGMsZCxmKXtpZihudWxsPT09Ynx8NyE9PWIudGFnKXJldHVybiBiPVplKGMsYS5tb2RlLGQsZiksYi5yZXR1cm49YSxiO2I9ZShiLGMsZCk7Yi5yZXR1cm49YTtyZXR1cm4gYn1mdW5jdGlvbiBwKGEsYixjKXtpZihcInN0cmluZ1wiPT09dHlwZW9mIGJ8fFwibnVtYmVyXCI9PT10eXBlb2YgYilyZXR1cm4gYj1hZihcIlwiK2IsYS5tb2RlLGMpLGIucmV0dXJuPWEsYjtpZihcIm9iamVjdFwiPT09dHlwZW9mIGImJm51bGwhPT1iKXtzd2l0Y2goYi4kJHR5cGVvZil7Y2FzZSBWYjpyZXR1cm4gYz1ZZShiLnR5cGUsYi5rZXksYi5wcm9wcyxudWxsLGEubW9kZSxjKSxjLnJlZj1BZihhLG51bGwsYiksYy5yZXR1cm49YSxjO2Nhc2UgV2I6cmV0dXJuIGI9YmYoYixhLm1vZGUsYyksYi5yZXR1cm49YSxifWlmKHpmKGIpfHxcbmhjKGIpKXJldHVybiBiPVplKGIsYS5tb2RlLGMsbnVsbCksYi5yZXR1cm49YSxiO0JmKGEsYil9cmV0dXJuIG51bGx9ZnVuY3Rpb24gdChhLGIsYyxkKXt2YXIgZT1udWxsIT09Yj9iLmtleTpudWxsO2lmKFwic3RyaW5nXCI9PT10eXBlb2YgY3x8XCJudW1iZXJcIj09PXR5cGVvZiBjKXJldHVybiBudWxsIT09ZT9udWxsOmgoYSxiLFwiXCIrYyxkKTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGMmJm51bGwhPT1jKXtzd2l0Y2goYy4kJHR5cGVvZil7Y2FzZSBWYjpyZXR1cm4gYy5rZXk9PT1lP2MudHlwZT09PVhiP20oYSxiLGMucHJvcHMuY2hpbGRyZW4sZCxlKTpsKGEsYixjLGQpOm51bGw7Y2FzZSBXYjpyZXR1cm4gYy5rZXk9PT1lP2soYSxiLGMsZCk6bnVsbH1pZih6ZihjKXx8aGMoYykpcmV0dXJuIG51bGwhPT1lP251bGw6bShhLGIsYyxkLG51bGwpO0JmKGEsYyl9cmV0dXJuIG51bGx9ZnVuY3Rpb24gQShhLGIsYyxkLGUpe2lmKFwic3RyaW5nXCI9PT10eXBlb2YgZHx8XCJudW1iZXJcIj09PXR5cGVvZiBkKXJldHVybiBhPVxuYS5nZXQoYyl8fG51bGwsaChiLGEsXCJcIitkLGUpO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgZCYmbnVsbCE9PWQpe3N3aXRjaChkLiQkdHlwZW9mKXtjYXNlIFZiOnJldHVybiBhPWEuZ2V0KG51bGw9PT1kLmtleT9jOmQua2V5KXx8bnVsbCxkLnR5cGU9PT1YYj9tKGIsYSxkLnByb3BzLmNoaWxkcmVuLGUsZC5rZXkpOmwoYixhLGQsZSk7Y2FzZSBXYjpyZXR1cm4gYT1hLmdldChudWxsPT09ZC5rZXk/YzpkLmtleSl8fG51bGwsayhiLGEsZCxlKX1pZih6ZihkKXx8aGMoZCkpcmV0dXJuIGE9YS5nZXQoYyl8fG51bGwsbShiLGEsZCxlLG51bGwpO0JmKGIsZCl9cmV0dXJuIG51bGx9ZnVuY3Rpb24gdihlLGcsaCxrKXtmb3IodmFyIGw9bnVsbCxtPW51bGwscT1nLHU9Zz0wLEI9bnVsbDtudWxsIT09cSYmdTxoLmxlbmd0aDt1Kyspe3EuaW5kZXg+dT8oQj1xLHE9bnVsbCk6Qj1xLnNpYmxpbmc7dmFyIHc9dChlLHEsaFt1XSxrKTtpZihudWxsPT09dyl7bnVsbD09PXEmJihxPUIpO2JyZWFrfWEmJlxucSYmbnVsbD09PXcuYWx0ZXJuYXRlJiZiKGUscSk7Zz1mKHcsZyx1KTtudWxsPT09bT9sPXc6bS5zaWJsaW5nPXc7bT13O3E9Qn1pZih1PT09aC5sZW5ndGgpcmV0dXJuIGMoZSxxKSxsO2lmKG51bGw9PT1xKXtmb3IoO3U8aC5sZW5ndGg7dSsrKWlmKHE9cChlLGhbdV0saykpZz1mKHEsZyx1KSxudWxsPT09bT9sPXE6bS5zaWJsaW5nPXEsbT1xO3JldHVybiBsfWZvcihxPWQoZSxxKTt1PGgubGVuZ3RoO3UrKylpZihCPUEocSxlLHUsaFt1XSxrKSlhJiZudWxsIT09Qi5hbHRlcm5hdGUmJnEuZGVsZXRlKG51bGw9PT1CLmtleT91OkIua2V5KSxnPWYoQixnLHUpLG51bGw9PT1tP2w9QjptLnNpYmxpbmc9QixtPUI7YSYmcS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3JldHVybiBiKGUsYSl9KTtyZXR1cm4gbH1mdW5jdGlvbiBSKGUsZyxoLGspe3ZhciBsPWhjKGgpO1wiZnVuY3Rpb25cIiE9PXR5cGVvZiBsP3goXCIxNTBcIik6dm9pZCAwO2g9bC5jYWxsKGgpO251bGw9PWg/eChcIjE1MVwiKTp2b2lkIDA7XG5mb3IodmFyIG09bD1udWxsLHE9Zyx1PWc9MCxCPW51bGwsdz1oLm5leHQoKTtudWxsIT09cSYmIXcuZG9uZTt1Kyssdz1oLm5leHQoKSl7cS5pbmRleD51PyhCPXEscT1udWxsKTpCPXEuc2libGluZzt2YXIgdj10KGUscSx3LnZhbHVlLGspO2lmKG51bGw9PT12KXtxfHwocT1CKTticmVha31hJiZxJiZudWxsPT09di5hbHRlcm5hdGUmJmIoZSxxKTtnPWYodixnLHUpO251bGw9PT1tP2w9djptLnNpYmxpbmc9djttPXY7cT1CfWlmKHcuZG9uZSlyZXR1cm4gYyhlLHEpLGw7aWYobnVsbD09PXEpe2Zvcig7IXcuZG9uZTt1Kyssdz1oLm5leHQoKSl3PXAoZSx3LnZhbHVlLGspLG51bGwhPT13JiYoZz1mKHcsZyx1KSxudWxsPT09bT9sPXc6bS5zaWJsaW5nPXcsbT13KTtyZXR1cm4gbH1mb3IocT1kKGUscSk7IXcuZG9uZTt1Kyssdz1oLm5leHQoKSl3PUEocSxlLHUsdy52YWx1ZSxrKSxudWxsIT09dyYmKGEmJm51bGwhPT13LmFsdGVybmF0ZSYmcS5kZWxldGUobnVsbD09PXcua2V5P3U6XG53LmtleSksZz1mKHcsZyx1KSxudWxsPT09bT9sPXc6bS5zaWJsaW5nPXcsbT13KTthJiZxLmZvckVhY2goZnVuY3Rpb24oYSl7cmV0dXJuIGIoZSxhKX0pO3JldHVybiBsfXJldHVybiBmdW5jdGlvbihhLGQsZixoKXt2YXIgaz1cIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mJiZmLnR5cGU9PT1YYiYmbnVsbD09PWYua2V5O2smJihmPWYucHJvcHMuY2hpbGRyZW4pO3ZhciBsPVwib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWY7aWYobClzd2l0Y2goZi4kJHR5cGVvZil7Y2FzZSBWYjphOntsPWYua2V5O2ZvcihrPWQ7bnVsbCE9PWs7KXtpZihrLmtleT09PWwpaWYoNz09PWsudGFnP2YudHlwZT09PVhiOmsuZWxlbWVudFR5cGU9PT1mLnR5cGUpe2MoYSxrLnNpYmxpbmcpO2Q9ZShrLGYudHlwZT09PVhiP2YucHJvcHMuY2hpbGRyZW46Zi5wcm9wcyxoKTtkLnJlZj1BZihhLGssZik7ZC5yZXR1cm49YTthPWQ7YnJlYWsgYX1lbHNle2MoYSxrKTticmVha31lbHNlIGIoYSxrKTtrPVxuay5zaWJsaW5nfWYudHlwZT09PVhiPyhkPVplKGYucHJvcHMuY2hpbGRyZW4sYS5tb2RlLGgsZi5rZXkpLGQucmV0dXJuPWEsYT1kKTooaD1ZZShmLnR5cGUsZi5rZXksZi5wcm9wcyxudWxsLGEubW9kZSxoKSxoLnJlZj1BZihhLGQsZiksaC5yZXR1cm49YSxhPWgpfXJldHVybiBnKGEpO2Nhc2UgV2I6YTp7Zm9yKGs9Zi5rZXk7bnVsbCE9PWQ7KXtpZihkLmtleT09PWspaWYoND09PWQudGFnJiZkLnN0YXRlTm9kZS5jb250YWluZXJJbmZvPT09Zi5jb250YWluZXJJbmZvJiZkLnN0YXRlTm9kZS5pbXBsZW1lbnRhdGlvbj09PWYuaW1wbGVtZW50YXRpb24pe2MoYSxkLnNpYmxpbmcpO2Q9ZShkLGYuY2hpbGRyZW58fFtdLGgpO2QucmV0dXJuPWE7YT1kO2JyZWFrIGF9ZWxzZXtjKGEsZCk7YnJlYWt9ZWxzZSBiKGEsZCk7ZD1kLnNpYmxpbmd9ZD1iZihmLGEubW9kZSxoKTtkLnJldHVybj1hO2E9ZH1yZXR1cm4gZyhhKX1pZihcInN0cmluZ1wiPT09dHlwZW9mIGZ8fFwibnVtYmVyXCI9PT10eXBlb2YgZilyZXR1cm4gZj1cblwiXCIrZixudWxsIT09ZCYmNj09PWQudGFnPyhjKGEsZC5zaWJsaW5nKSxkPWUoZCxmLGgpLGQucmV0dXJuPWEsYT1kKTooYyhhLGQpLGQ9YWYoZixhLm1vZGUsaCksZC5yZXR1cm49YSxhPWQpLGcoYSk7aWYoemYoZikpcmV0dXJuIHYoYSxkLGYsaCk7aWYoaGMoZikpcmV0dXJuIFIoYSxkLGYsaCk7bCYmQmYoYSxmKTtpZihcInVuZGVmaW5lZFwiPT09dHlwZW9mIGYmJiFrKXN3aXRjaChhLnRhZyl7Y2FzZSAxOmNhc2UgMDpoPWEudHlwZSx4KFwiMTUyXCIsaC5kaXNwbGF5TmFtZXx8aC5uYW1lfHxcIkNvbXBvbmVudFwiKX1yZXR1cm4gYyhhLGQpfX12YXIgRGY9Q2YoITApLEVmPUNmKCExKSxGZj17fSxOPXtjdXJyZW50OkZmfSxHZj17Y3VycmVudDpGZn0sSGY9e2N1cnJlbnQ6RmZ9O2Z1bmN0aW9uIElmKGEpe2E9PT1GZj94KFwiMTc0XCIpOnZvaWQgMDtyZXR1cm4gYX1cbmZ1bmN0aW9uIEpmKGEsYil7RyhIZixiLGEpO0coR2YsYSxhKTtHKE4sRmYsYSk7dmFyIGM9Yi5ub2RlVHlwZTtzd2l0Y2goYyl7Y2FzZSA5OmNhc2UgMTE6Yj0oYj1iLmRvY3VtZW50RWxlbWVudCk/Yi5uYW1lc3BhY2VVUkk6aGUobnVsbCxcIlwiKTticmVhaztkZWZhdWx0OmM9OD09PWM/Yi5wYXJlbnROb2RlOmIsYj1jLm5hbWVzcGFjZVVSSXx8bnVsbCxjPWMudGFnTmFtZSxiPWhlKGIsYyl9RihOLGEpO0coTixiLGEpfWZ1bmN0aW9uIEtmKGEpe0YoTixhKTtGKEdmLGEpO0YoSGYsYSl9ZnVuY3Rpb24gTGYoYSl7SWYoSGYuY3VycmVudCk7dmFyIGI9SWYoTi5jdXJyZW50KTt2YXIgYz1oZShiLGEudHlwZSk7YiE9PWMmJihHKEdmLGEsYSksRyhOLGMsYSkpfWZ1bmN0aW9uIE1mKGEpe0dmLmN1cnJlbnQ9PT1hJiYoRihOLGEpLEYoR2YsYSkpfVxudmFyIE5mPTAsT2Y9MixQZj00LFFmPTgsUmY9MTYsU2Y9MzIsVGY9NjQsVWY9MTI4LFZmPVRiLlJlYWN0Q3VycmVudERpc3BhdGNoZXIsV2Y9MCxYZj1udWxsLE89bnVsbCxQPW51bGwsWWY9bnVsbCxRPW51bGwsWmY9bnVsbCwkZj0wLGFnPW51bGwsYmc9MCxjZz0hMSxkZz1udWxsLGVnPTA7ZnVuY3Rpb24gZmcoKXt4KFwiMzIxXCIpfWZ1bmN0aW9uIGdnKGEsYil7aWYobnVsbD09PWIpcmV0dXJuITE7Zm9yKHZhciBjPTA7YzxiLmxlbmd0aCYmYzxhLmxlbmd0aDtjKyspaWYoIWJkKGFbY10sYltjXSkpcmV0dXJuITE7cmV0dXJuITB9XG5mdW5jdGlvbiBoZyhhLGIsYyxkLGUsZil7V2Y9ZjtYZj1iO1A9bnVsbCE9PWE/YS5tZW1vaXplZFN0YXRlOm51bGw7VmYuY3VycmVudD1udWxsPT09UD9pZzpqZztiPWMoZCxlKTtpZihjZyl7ZG8gY2c9ITEsZWcrPTEsUD1udWxsIT09YT9hLm1lbW9pemVkU3RhdGU6bnVsbCxaZj1ZZixhZz1RPU89bnVsbCxWZi5jdXJyZW50PWpnLGI9YyhkLGUpO3doaWxlKGNnKTtkZz1udWxsO2VnPTB9VmYuY3VycmVudD1rZzthPVhmO2EubWVtb2l6ZWRTdGF0ZT1ZZjthLmV4cGlyYXRpb25UaW1lPSRmO2EudXBkYXRlUXVldWU9YWc7YS5lZmZlY3RUYWd8PWJnO2E9bnVsbCE9PU8mJm51bGwhPT1PLm5leHQ7V2Y9MDtaZj1RPVlmPVA9Tz1YZj1udWxsOyRmPTA7YWc9bnVsbDtiZz0wO2E/eChcIjMwMFwiKTp2b2lkIDA7cmV0dXJuIGJ9ZnVuY3Rpb24gbGcoKXtWZi5jdXJyZW50PWtnO1dmPTA7WmY9UT1ZZj1QPU89WGY9bnVsbDskZj0wO2FnPW51bGw7Ymc9MDtjZz0hMTtkZz1udWxsO2VnPTB9XG5mdW5jdGlvbiBtZygpe3ZhciBhPXttZW1vaXplZFN0YXRlOm51bGwsYmFzZVN0YXRlOm51bGwscXVldWU6bnVsbCxiYXNlVXBkYXRlOm51bGwsbmV4dDpudWxsfTtudWxsPT09UT9ZZj1RPWE6UT1RLm5leHQ9YTtyZXR1cm4gUX1mdW5jdGlvbiBuZygpe2lmKG51bGwhPT1aZilRPVpmLFpmPVEubmV4dCxPPVAsUD1udWxsIT09Tz9PLm5leHQ6bnVsbDtlbHNle251bGw9PT1QP3goXCIzMTBcIik6dm9pZCAwO089UDt2YXIgYT17bWVtb2l6ZWRTdGF0ZTpPLm1lbW9pemVkU3RhdGUsYmFzZVN0YXRlOk8uYmFzZVN0YXRlLHF1ZXVlOk8ucXVldWUsYmFzZVVwZGF0ZTpPLmJhc2VVcGRhdGUsbmV4dDpudWxsfTtRPW51bGw9PT1RP1lmPWE6US5uZXh0PWE7UD1PLm5leHR9cmV0dXJuIFF9ZnVuY3Rpb24gb2coYSxiKXtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYj9iKGEpOmJ9XG5mdW5jdGlvbiBwZyhhKXt2YXIgYj1uZygpLGM9Yi5xdWV1ZTtudWxsPT09Yz94KFwiMzExXCIpOnZvaWQgMDtjLmxhc3RSZW5kZXJlZFJlZHVjZXI9YTtpZigwPGVnKXt2YXIgZD1jLmRpc3BhdGNoO2lmKG51bGwhPT1kZyl7dmFyIGU9ZGcuZ2V0KGMpO2lmKHZvaWQgMCE9PWUpe2RnLmRlbGV0ZShjKTt2YXIgZj1iLm1lbW9pemVkU3RhdGU7ZG8gZj1hKGYsZS5hY3Rpb24pLGU9ZS5uZXh0O3doaWxlKG51bGwhPT1lKTtiZChmLGIubWVtb2l6ZWRTdGF0ZSl8fChxZz0hMCk7Yi5tZW1vaXplZFN0YXRlPWY7Yi5iYXNlVXBkYXRlPT09Yy5sYXN0JiYoYi5iYXNlU3RhdGU9Zik7Yy5sYXN0UmVuZGVyZWRTdGF0ZT1mO3JldHVybltmLGRdfX1yZXR1cm5bYi5tZW1vaXplZFN0YXRlLGRdfWQ9Yy5sYXN0O3ZhciBnPWIuYmFzZVVwZGF0ZTtmPWIuYmFzZVN0YXRlO251bGwhPT1nPyhudWxsIT09ZCYmKGQubmV4dD1udWxsKSxkPWcubmV4dCk6ZD1udWxsIT09ZD9kLm5leHQ6bnVsbDtpZihudWxsIT09XG5kKXt2YXIgaD1lPW51bGwsbD1kLGs9ITE7ZG97dmFyIG09bC5leHBpcmF0aW9uVGltZTttPFdmPyhrfHwoaz0hMCxoPWcsZT1mKSxtPiRmJiYoJGY9bSkpOmY9bC5lYWdlclJlZHVjZXI9PT1hP2wuZWFnZXJTdGF0ZTphKGYsbC5hY3Rpb24pO2c9bDtsPWwubmV4dH13aGlsZShudWxsIT09bCYmbCE9PWQpO2t8fChoPWcsZT1mKTtiZChmLGIubWVtb2l6ZWRTdGF0ZSl8fChxZz0hMCk7Yi5tZW1vaXplZFN0YXRlPWY7Yi5iYXNlVXBkYXRlPWg7Yi5iYXNlU3RhdGU9ZTtjLmxhc3RSZW5kZXJlZFN0YXRlPWZ9cmV0dXJuW2IubWVtb2l6ZWRTdGF0ZSxjLmRpc3BhdGNoXX1cbmZ1bmN0aW9uIHJnKGEsYixjLGQpe2E9e3RhZzphLGNyZWF0ZTpiLGRlc3Ryb3k6YyxkZXBzOmQsbmV4dDpudWxsfTtudWxsPT09YWc/KGFnPXtsYXN0RWZmZWN0Om51bGx9LGFnLmxhc3RFZmZlY3Q9YS5uZXh0PWEpOihiPWFnLmxhc3RFZmZlY3QsbnVsbD09PWI/YWcubGFzdEVmZmVjdD1hLm5leHQ9YTooYz1iLm5leHQsYi5uZXh0PWEsYS5uZXh0PWMsYWcubGFzdEVmZmVjdD1hKSk7cmV0dXJuIGF9ZnVuY3Rpb24gc2coYSxiLGMsZCl7dmFyIGU9bWcoKTtiZ3w9YTtlLm1lbW9pemVkU3RhdGU9cmcoYixjLHZvaWQgMCx2b2lkIDA9PT1kP251bGw6ZCl9XG5mdW5jdGlvbiB0ZyhhLGIsYyxkKXt2YXIgZT1uZygpO2Q9dm9pZCAwPT09ZD9udWxsOmQ7dmFyIGY9dm9pZCAwO2lmKG51bGwhPT1PKXt2YXIgZz1PLm1lbW9pemVkU3RhdGU7Zj1nLmRlc3Ryb3k7aWYobnVsbCE9PWQmJmdnKGQsZy5kZXBzKSl7cmcoTmYsYyxmLGQpO3JldHVybn19Ymd8PWE7ZS5tZW1vaXplZFN0YXRlPXJnKGIsYyxmLGQpfWZ1bmN0aW9uIHVnKGEsYil7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGIpcmV0dXJuIGE9YSgpLGIoYSksZnVuY3Rpb24oKXtiKG51bGwpfTtpZihudWxsIT09YiYmdm9pZCAwIT09YilyZXR1cm4gYT1hKCksYi5jdXJyZW50PWEsZnVuY3Rpb24oKXtiLmN1cnJlbnQ9bnVsbH19ZnVuY3Rpb24gdmcoKXt9XG5mdW5jdGlvbiB3ZyhhLGIsYyl7MjU+ZWc/dm9pZCAwOngoXCIzMDFcIik7dmFyIGQ9YS5hbHRlcm5hdGU7aWYoYT09PVhmfHxudWxsIT09ZCYmZD09PVhmKWlmKGNnPSEwLGE9e2V4cGlyYXRpb25UaW1lOldmLGFjdGlvbjpjLGVhZ2VyUmVkdWNlcjpudWxsLGVhZ2VyU3RhdGU6bnVsbCxuZXh0Om51bGx9LG51bGw9PT1kZyYmKGRnPW5ldyBNYXApLGM9ZGcuZ2V0KGIpLHZvaWQgMD09PWMpZGcuc2V0KGIsYSk7ZWxzZXtmb3IoYj1jO251bGwhPT1iLm5leHQ7KWI9Yi5uZXh0O2IubmV4dD1hfWVsc2V7b2YoKTt2YXIgZT1sZigpO2U9bWYoZSxhKTt2YXIgZj17ZXhwaXJhdGlvblRpbWU6ZSxhY3Rpb246YyxlYWdlclJlZHVjZXI6bnVsbCxlYWdlclN0YXRlOm51bGwsbmV4dDpudWxsfSxnPWIubGFzdDtpZihudWxsPT09ZylmLm5leHQ9ZjtlbHNle3ZhciBoPWcubmV4dDtudWxsIT09aCYmKGYubmV4dD1oKTtnLm5leHQ9Zn1iLmxhc3Q9ZjtpZigwPT09YS5leHBpcmF0aW9uVGltZSYmKG51bGw9PT1cbmR8fDA9PT1kLmV4cGlyYXRpb25UaW1lKSYmKGQ9Yi5sYXN0UmVuZGVyZWRSZWR1Y2VyLG51bGwhPT1kKSl0cnl7dmFyIGw9Yi5sYXN0UmVuZGVyZWRTdGF0ZSxrPWQobCxjKTtmLmVhZ2VyUmVkdWNlcj1kO2YuZWFnZXJTdGF0ZT1rO2lmKGJkKGssbCkpcmV0dXJufWNhdGNoKG0pe31maW5hbGx5e31xZihhLGUpfX1cbnZhciBrZz17cmVhZENvbnRleHQ6TSx1c2VDYWxsYmFjazpmZyx1c2VDb250ZXh0OmZnLHVzZUVmZmVjdDpmZyx1c2VJbXBlcmF0aXZlSGFuZGxlOmZnLHVzZUxheW91dEVmZmVjdDpmZyx1c2VNZW1vOmZnLHVzZVJlZHVjZXI6ZmcsdXNlUmVmOmZnLHVzZVN0YXRlOmZnLHVzZURlYnVnVmFsdWU6Zmd9LGlnPXtyZWFkQ29udGV4dDpNLHVzZUNhbGxiYWNrOmZ1bmN0aW9uKGEsYil7bWcoKS5tZW1vaXplZFN0YXRlPVthLHZvaWQgMD09PWI/bnVsbDpiXTtyZXR1cm4gYX0sdXNlQ29udGV4dDpNLHVzZUVmZmVjdDpmdW5jdGlvbihhLGIpe3JldHVybiBzZyg1MTYsVWZ8VGYsYSxiKX0sdXNlSW1wZXJhdGl2ZUhhbmRsZTpmdW5jdGlvbihhLGIsYyl7Yz1udWxsIT09YyYmdm9pZCAwIT09Yz9jLmNvbmNhdChbYV0pOm51bGw7cmV0dXJuIHNnKDQsUGZ8U2YsdWcuYmluZChudWxsLGIsYSksYyl9LHVzZUxheW91dEVmZmVjdDpmdW5jdGlvbihhLGIpe3JldHVybiBzZyg0LFBmfFNmLGEsYil9LFxudXNlTWVtbzpmdW5jdGlvbihhLGIpe3ZhciBjPW1nKCk7Yj12b2lkIDA9PT1iP251bGw6YjthPWEoKTtjLm1lbW9pemVkU3RhdGU9W2EsYl07cmV0dXJuIGF9LHVzZVJlZHVjZXI6ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPW1nKCk7Yj12b2lkIDAhPT1jP2MoYik6YjtkLm1lbW9pemVkU3RhdGU9ZC5iYXNlU3RhdGU9YjthPWQucXVldWU9e2xhc3Q6bnVsbCxkaXNwYXRjaDpudWxsLGxhc3RSZW5kZXJlZFJlZHVjZXI6YSxsYXN0UmVuZGVyZWRTdGF0ZTpifTthPWEuZGlzcGF0Y2g9d2cuYmluZChudWxsLFhmLGEpO3JldHVybltkLm1lbW9pemVkU3RhdGUsYV19LHVzZVJlZjpmdW5jdGlvbihhKXt2YXIgYj1tZygpO2E9e2N1cnJlbnQ6YX07cmV0dXJuIGIubWVtb2l6ZWRTdGF0ZT1hfSx1c2VTdGF0ZTpmdW5jdGlvbihhKXt2YXIgYj1tZygpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBhJiYoYT1hKCkpO2IubWVtb2l6ZWRTdGF0ZT1iLmJhc2VTdGF0ZT1hO2E9Yi5xdWV1ZT17bGFzdDpudWxsLGRpc3BhdGNoOm51bGwsXG5sYXN0UmVuZGVyZWRSZWR1Y2VyOm9nLGxhc3RSZW5kZXJlZFN0YXRlOmF9O2E9YS5kaXNwYXRjaD13Zy5iaW5kKG51bGwsWGYsYSk7cmV0dXJuW2IubWVtb2l6ZWRTdGF0ZSxhXX0sdXNlRGVidWdWYWx1ZTp2Z30samc9e3JlYWRDb250ZXh0Ok0sdXNlQ2FsbGJhY2s6ZnVuY3Rpb24oYSxiKXt2YXIgYz1uZygpO2I9dm9pZCAwPT09Yj9udWxsOmI7dmFyIGQ9Yy5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1kJiZudWxsIT09YiYmZ2coYixkWzFdKSlyZXR1cm4gZFswXTtjLm1lbW9pemVkU3RhdGU9W2EsYl07cmV0dXJuIGF9LHVzZUNvbnRleHQ6TSx1c2VFZmZlY3Q6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gdGcoNTE2LFVmfFRmLGEsYil9LHVzZUltcGVyYXRpdmVIYW5kbGU6ZnVuY3Rpb24oYSxiLGMpe2M9bnVsbCE9PWMmJnZvaWQgMCE9PWM/Yy5jb25jYXQoW2FdKTpudWxsO3JldHVybiB0Zyg0LFBmfFNmLHVnLmJpbmQobnVsbCxiLGEpLGMpfSx1c2VMYXlvdXRFZmZlY3Q6ZnVuY3Rpb24oYSxcbmIpe3JldHVybiB0Zyg0LFBmfFNmLGEsYil9LHVzZU1lbW86ZnVuY3Rpb24oYSxiKXt2YXIgYz1uZygpO2I9dm9pZCAwPT09Yj9udWxsOmI7dmFyIGQ9Yy5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1kJiZudWxsIT09YiYmZ2coYixkWzFdKSlyZXR1cm4gZFswXTthPWEoKTtjLm1lbW9pemVkU3RhdGU9W2EsYl07cmV0dXJuIGF9LHVzZVJlZHVjZXI6cGcsdXNlUmVmOmZ1bmN0aW9uKCl7cmV0dXJuIG5nKCkubWVtb2l6ZWRTdGF0ZX0sdXNlU3RhdGU6ZnVuY3Rpb24oYSl7cmV0dXJuIHBnKG9nLGEpfSx1c2VEZWJ1Z1ZhbHVlOnZnfSx4Zz1udWxsLHlnPW51bGwsemc9ITE7XG5mdW5jdGlvbiBBZyhhLGIpe3ZhciBjPUsoNSxudWxsLG51bGwsMCk7Yy5lbGVtZW50VHlwZT1cIkRFTEVURURcIjtjLnR5cGU9XCJERUxFVEVEXCI7Yy5zdGF0ZU5vZGU9YjtjLnJldHVybj1hO2MuZWZmZWN0VGFnPTg7bnVsbCE9PWEubGFzdEVmZmVjdD8oYS5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9YyxhLmxhc3RFZmZlY3Q9Yyk6YS5maXJzdEVmZmVjdD1hLmxhc3RFZmZlY3Q9Y31mdW5jdGlvbiBCZyhhLGIpe3N3aXRjaChhLnRhZyl7Y2FzZSA1OnZhciBjPWEudHlwZTtiPTEhPT1iLm5vZGVUeXBlfHxjLnRvTG93ZXJDYXNlKCkhPT1iLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk/bnVsbDpiO3JldHVybiBudWxsIT09Yj8oYS5zdGF0ZU5vZGU9YiwhMCk6ITE7Y2FzZSA2OnJldHVybiBiPVwiXCI9PT1hLnBlbmRpbmdQcm9wc3x8MyE9PWIubm9kZVR5cGU/bnVsbDpiLG51bGwhPT1iPyhhLnN0YXRlTm9kZT1iLCEwKTohMTtjYXNlIDEzOnJldHVybiExO2RlZmF1bHQ6cmV0dXJuITF9fVxuZnVuY3Rpb24gQ2coYSl7aWYoemcpe3ZhciBiPXlnO2lmKGIpe3ZhciBjPWI7aWYoIUJnKGEsYikpe2I9RGUoYyk7aWYoIWJ8fCFCZyhhLGIpKXthLmVmZmVjdFRhZ3w9Mjt6Zz0hMTt4Zz1hO3JldHVybn1BZyh4ZyxjKX14Zz1hO3lnPUVlKGIpfWVsc2UgYS5lZmZlY3RUYWd8PTIsemc9ITEseGc9YX19ZnVuY3Rpb24gRGcoYSl7Zm9yKGE9YS5yZXR1cm47bnVsbCE9PWEmJjUhPT1hLnRhZyYmMyE9PWEudGFnJiYxOCE9PWEudGFnOylhPWEucmV0dXJuO3hnPWF9ZnVuY3Rpb24gRWcoYSl7aWYoYSE9PXhnKXJldHVybiExO2lmKCF6ZylyZXR1cm4gRGcoYSksemc9ITAsITE7dmFyIGI9YS50eXBlO2lmKDUhPT1hLnRhZ3x8XCJoZWFkXCIhPT1iJiZcImJvZHlcIiE9PWImJiF4ZShiLGEubWVtb2l6ZWRQcm9wcykpZm9yKGI9eWc7YjspQWcoYSxiKSxiPURlKGIpO0RnKGEpO3lnPXhnP0RlKGEuc3RhdGVOb2RlKTpudWxsO3JldHVybiEwfWZ1bmN0aW9uIEZnKCl7eWc9eGc9bnVsbDt6Zz0hMX1cbnZhciBHZz1UYi5SZWFjdEN1cnJlbnRPd25lcixxZz0hMTtmdW5jdGlvbiBTKGEsYixjLGQpe2IuY2hpbGQ9bnVsbD09PWE/RWYoYixudWxsLGMsZCk6RGYoYixhLmNoaWxkLGMsZCl9ZnVuY3Rpb24gSGcoYSxiLGMsZCxlKXtjPWMucmVuZGVyO3ZhciBmPWIucmVmO0lnKGIsZSk7ZD1oZyhhLGIsYyxkLGYsZSk7aWYobnVsbCE9PWEmJiFxZylyZXR1cm4gYi51cGRhdGVRdWV1ZT1hLnVwZGF0ZVF1ZXVlLGIuZWZmZWN0VGFnJj0tNTE3LGEuZXhwaXJhdGlvblRpbWU8PWUmJihhLmV4cGlyYXRpb25UaW1lPTApLEpnKGEsYixlKTtiLmVmZmVjdFRhZ3w9MTtTKGEsYixkLGUpO3JldHVybiBiLmNoaWxkfVxuZnVuY3Rpb24gS2coYSxiLGMsZCxlLGYpe2lmKG51bGw9PT1hKXt2YXIgZz1jLnR5cGU7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGcmJiFWZShnKSYmdm9pZCAwPT09Zy5kZWZhdWx0UHJvcHMmJm51bGw9PT1jLmNvbXBhcmUmJnZvaWQgMD09PWMuZGVmYXVsdFByb3BzKXJldHVybiBiLnRhZz0xNSxiLnR5cGU9ZyxMZyhhLGIsZyxkLGUsZik7YT1ZZShjLnR5cGUsbnVsbCxkLG51bGwsYi5tb2RlLGYpO2EucmVmPWIucmVmO2EucmV0dXJuPWI7cmV0dXJuIGIuY2hpbGQ9YX1nPWEuY2hpbGQ7aWYoZTxmJiYoZT1nLm1lbW9pemVkUHJvcHMsYz1jLmNvbXBhcmUsYz1udWxsIT09Yz9jOmRkLGMoZSxkKSYmYS5yZWY9PT1iLnJlZikpcmV0dXJuIEpnKGEsYixmKTtiLmVmZmVjdFRhZ3w9MTthPVhlKGcsZCxmKTthLnJlZj1iLnJlZjthLnJldHVybj1iO3JldHVybiBiLmNoaWxkPWF9XG5mdW5jdGlvbiBMZyhhLGIsYyxkLGUsZil7cmV0dXJuIG51bGwhPT1hJiZkZChhLm1lbW9pemVkUHJvcHMsZCkmJmEucmVmPT09Yi5yZWYmJihxZz0hMSxlPGYpP0pnKGEsYixmKTpNZyhhLGIsYyxkLGYpfWZ1bmN0aW9uIE5nKGEsYil7dmFyIGM9Yi5yZWY7aWYobnVsbD09PWEmJm51bGwhPT1jfHxudWxsIT09YSYmYS5yZWYhPT1jKWIuZWZmZWN0VGFnfD0xMjh9ZnVuY3Rpb24gTWcoYSxiLGMsZCxlKXt2YXIgZj1KKGMpP0llOkguY3VycmVudDtmPUplKGIsZik7SWcoYixlKTtjPWhnKGEsYixjLGQsZixlKTtpZihudWxsIT09YSYmIXFnKXJldHVybiBiLnVwZGF0ZVF1ZXVlPWEudXBkYXRlUXVldWUsYi5lZmZlY3RUYWcmPS01MTcsYS5leHBpcmF0aW9uVGltZTw9ZSYmKGEuZXhwaXJhdGlvblRpbWU9MCksSmcoYSxiLGUpO2IuZWZmZWN0VGFnfD0xO1MoYSxiLGMsZSk7cmV0dXJuIGIuY2hpbGR9XG5mdW5jdGlvbiBPZyhhLGIsYyxkLGUpe2lmKEooYykpe3ZhciBmPSEwO09lKGIpfWVsc2UgZj0hMTtJZyhiLGUpO2lmKG51bGw9PT1iLnN0YXRlTm9kZSludWxsIT09YSYmKGEuYWx0ZXJuYXRlPW51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmVmZmVjdFRhZ3w9MiksdmYoYixjLGQsZSkseGYoYixjLGQsZSksZD0hMDtlbHNlIGlmKG51bGw9PT1hKXt2YXIgZz1iLnN0YXRlTm9kZSxoPWIubWVtb2l6ZWRQcm9wcztnLnByb3BzPWg7dmFyIGw9Zy5jb250ZXh0LGs9Yy5jb250ZXh0VHlwZTtcIm9iamVjdFwiPT09dHlwZW9mIGsmJm51bGwhPT1rP2s9TShrKTooaz1KKGMpP0llOkguY3VycmVudCxrPUplKGIsaykpO3ZhciBtPWMuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzLHA9XCJmdW5jdGlvblwiPT09dHlwZW9mIG18fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlO3B8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZcblwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHN8fChoIT09ZHx8bCE9PWspJiZ3ZihiLGcsZCxrKTtQZz0hMTt2YXIgdD1iLm1lbW9pemVkU3RhdGU7bD1nLnN0YXRlPXQ7dmFyIEE9Yi51cGRhdGVRdWV1ZTtudWxsIT09QSYmKHlmKGIsQSxkLGcsZSksbD1iLm1lbW9pemVkU3RhdGUpO2ghPT1kfHx0IT09bHx8SS5jdXJyZW50fHxQZz8oXCJmdW5jdGlvblwiPT09dHlwZW9mIG0mJihrZihiLGMsbSxkKSxsPWIubWVtb2l6ZWRTdGF0ZSksKGg9UGd8fHVmKGIsYyxoLGQsdCxsLGspKT8ocHx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbE1vdW50fHwoXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50V2lsbE1vdW50JiZnLmNvbXBvbmVudFdpbGxNb3VudCgpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJlxuZy5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50KCkpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZE1vdW50JiYoYi5lZmZlY3RUYWd8PTQpKTooXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkTW91bnQmJihiLmVmZmVjdFRhZ3w9NCksYi5tZW1vaXplZFByb3BzPWQsYi5tZW1vaXplZFN0YXRlPWwpLGcucHJvcHM9ZCxnLnN0YXRlPWwsZy5jb250ZXh0PWssZD1oKTooXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkTW91bnQmJihiLmVmZmVjdFRhZ3w9NCksZD0hMSl9ZWxzZSBnPWIuc3RhdGVOb2RlLGg9Yi5tZW1vaXplZFByb3BzLGcucHJvcHM9Yi50eXBlPT09Yi5lbGVtZW50VHlwZT9oOkwoYi50eXBlLGgpLGw9Zy5jb250ZXh0LGs9Yy5jb250ZXh0VHlwZSxcIm9iamVjdFwiPT09dHlwZW9mIGsmJm51bGwhPT1rP2s9TShrKTooaz1KKGMpP0llOkguY3VycmVudCxrPUplKGIsaykpLG09Yy5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMsKHA9XCJmdW5jdGlvblwiPT09XG50eXBlb2YgbXx8XCJmdW5jdGlvblwiPT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUpfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wc3x8KGghPT1kfHxsIT09aykmJndmKGIsZyxkLGspLFBnPSExLGw9Yi5tZW1vaXplZFN0YXRlLHQ9Zy5zdGF0ZT1sLEE9Yi51cGRhdGVRdWV1ZSxudWxsIT09QSYmKHlmKGIsQSxkLGcsZSksdD1iLm1lbW9pemVkU3RhdGUpLGghPT1kfHxsIT09dHx8SS5jdXJyZW50fHxQZz8oXCJmdW5jdGlvblwiPT09dHlwZW9mIG0mJihrZihiLGMsbSxkKSx0PWIubWVtb2l6ZWRTdGF0ZSksKG09UGd8fHVmKGIsYyxoLGQsbCx0LGspKT8ocHx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxVcGRhdGV8fChcImZ1bmN0aW9uXCI9PT1cbnR5cGVvZiBnLmNvbXBvbmVudFdpbGxVcGRhdGUmJmcuY29tcG9uZW50V2lsbFVwZGF0ZShkLHQsayksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUmJmcuVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUoZCx0LGspKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnREaWRVcGRhdGUmJihiLmVmZmVjdFRhZ3w9NCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUmJihiLmVmZmVjdFRhZ3w9MjU2KSk6KFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudERpZFVwZGF0ZXx8aD09PWEubWVtb2l6ZWRQcm9wcyYmbD09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZWZmZWN0VGFnfD00KSxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZXx8aD09PWEubWVtb2l6ZWRQcm9wcyYmbD09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZWZmZWN0VGFnfD0yNTYpLGIubWVtb2l6ZWRQcm9wcz1kLGIubWVtb2l6ZWRTdGF0ZT1cbnQpLGcucHJvcHM9ZCxnLnN0YXRlPXQsZy5jb250ZXh0PWssZD1tKTooXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50RGlkVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZsPT09YS5tZW1vaXplZFN0YXRlfHwoYi5lZmZlY3RUYWd8PTQpLFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZsPT09YS5tZW1vaXplZFN0YXRlfHwoYi5lZmZlY3RUYWd8PTI1NiksZD0hMSk7cmV0dXJuIFFnKGEsYixjLGQsZixlKX1cbmZ1bmN0aW9uIFFnKGEsYixjLGQsZSxmKXtOZyhhLGIpO3ZhciBnPTAhPT0oYi5lZmZlY3RUYWcmNjQpO2lmKCFkJiYhZylyZXR1cm4gZSYmUGUoYixjLCExKSxKZyhhLGIsZik7ZD1iLnN0YXRlTm9kZTtHZy5jdXJyZW50PWI7dmFyIGg9ZyYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGMuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yP251bGw6ZC5yZW5kZXIoKTtiLmVmZmVjdFRhZ3w9MTtudWxsIT09YSYmZz8oYi5jaGlsZD1EZihiLGEuY2hpbGQsbnVsbCxmKSxiLmNoaWxkPURmKGIsbnVsbCxoLGYpKTpTKGEsYixoLGYpO2IubWVtb2l6ZWRTdGF0ZT1kLnN0YXRlO2UmJlBlKGIsYywhMCk7cmV0dXJuIGIuY2hpbGR9ZnVuY3Rpb24gUmcoYSl7dmFyIGI9YS5zdGF0ZU5vZGU7Yi5wZW5kaW5nQ29udGV4dD9NZShhLGIucGVuZGluZ0NvbnRleHQsYi5wZW5kaW5nQ29udGV4dCE9PWIuY29udGV4dCk6Yi5jb250ZXh0JiZNZShhLGIuY29udGV4dCwhMSk7SmYoYSxiLmNvbnRhaW5lckluZm8pfVxuZnVuY3Rpb24gU2coYSxiLGMpe3ZhciBkPWIubW9kZSxlPWIucGVuZGluZ1Byb3BzLGY9Yi5tZW1vaXplZFN0YXRlO2lmKDA9PT0oYi5lZmZlY3RUYWcmNjQpKXtmPW51bGw7dmFyIGc9ITF9ZWxzZSBmPXt0aW1lZE91dEF0Om51bGwhPT1mP2YudGltZWRPdXRBdDowfSxnPSEwLGIuZWZmZWN0VGFnJj0tNjU7aWYobnVsbD09PWEpaWYoZyl7dmFyIGg9ZS5mYWxsYmFjazthPVplKG51bGwsZCwwLG51bGwpOzA9PT0oYi5tb2RlJjEpJiYoYS5jaGlsZD1udWxsIT09Yi5tZW1vaXplZFN0YXRlP2IuY2hpbGQuY2hpbGQ6Yi5jaGlsZCk7ZD1aZShoLGQsYyxudWxsKTthLnNpYmxpbmc9ZDtjPWE7Yy5yZXR1cm49ZC5yZXR1cm49Yn1lbHNlIGM9ZD1FZihiLG51bGwsZS5jaGlsZHJlbixjKTtlbHNlIG51bGwhPT1hLm1lbW9pemVkU3RhdGU/KGQ9YS5jaGlsZCxoPWQuc2libGluZyxnPyhjPWUuZmFsbGJhY2ssZT1YZShkLGQucGVuZGluZ1Byb3BzLDApLDA9PT0oYi5tb2RlJjEpJiYoZz1udWxsIT09XG5iLm1lbW9pemVkU3RhdGU/Yi5jaGlsZC5jaGlsZDpiLmNoaWxkLGchPT1kLmNoaWxkJiYoZS5jaGlsZD1nKSksZD1lLnNpYmxpbmc9WGUoaCxjLGguZXhwaXJhdGlvblRpbWUpLGM9ZSxlLmNoaWxkRXhwaXJhdGlvblRpbWU9MCxjLnJldHVybj1kLnJldHVybj1iKTpjPWQ9RGYoYixkLmNoaWxkLGUuY2hpbGRyZW4sYykpOihoPWEuY2hpbGQsZz8oZz1lLmZhbGxiYWNrLGU9WmUobnVsbCxkLDAsbnVsbCksZS5jaGlsZD1oLDA9PT0oYi5tb2RlJjEpJiYoZS5jaGlsZD1udWxsIT09Yi5tZW1vaXplZFN0YXRlP2IuY2hpbGQuY2hpbGQ6Yi5jaGlsZCksZD1lLnNpYmxpbmc9WmUoZyxkLGMsbnVsbCksZC5lZmZlY3RUYWd8PTIsYz1lLGUuY2hpbGRFeHBpcmF0aW9uVGltZT0wLGMucmV0dXJuPWQucmV0dXJuPWIpOmQ9Yz1EZihiLGgsZS5jaGlsZHJlbixjKSksYi5zdGF0ZU5vZGU9YS5zdGF0ZU5vZGU7Yi5tZW1vaXplZFN0YXRlPWY7Yi5jaGlsZD1jO3JldHVybiBkfVxuZnVuY3Rpb24gSmcoYSxiLGMpe251bGwhPT1hJiYoYi5jb250ZXh0RGVwZW5kZW5jaWVzPWEuY29udGV4dERlcGVuZGVuY2llcyk7aWYoYi5jaGlsZEV4cGlyYXRpb25UaW1lPGMpcmV0dXJuIG51bGw7bnVsbCE9PWEmJmIuY2hpbGQhPT1hLmNoaWxkP3goXCIxNTNcIik6dm9pZCAwO2lmKG51bGwhPT1iLmNoaWxkKXthPWIuY2hpbGQ7Yz1YZShhLGEucGVuZGluZ1Byb3BzLGEuZXhwaXJhdGlvblRpbWUpO2IuY2hpbGQ9Yztmb3IoYy5yZXR1cm49YjtudWxsIT09YS5zaWJsaW5nOylhPWEuc2libGluZyxjPWMuc2libGluZz1YZShhLGEucGVuZGluZ1Byb3BzLGEuZXhwaXJhdGlvblRpbWUpLGMucmV0dXJuPWI7Yy5zaWJsaW5nPW51bGx9cmV0dXJuIGIuY2hpbGR9XG5mdW5jdGlvbiBUZyhhLGIsYyl7dmFyIGQ9Yi5leHBpcmF0aW9uVGltZTtpZihudWxsIT09YSlpZihhLm1lbW9pemVkUHJvcHMhPT1iLnBlbmRpbmdQcm9wc3x8SS5jdXJyZW50KXFnPSEwO2Vsc2V7aWYoZDxjKXtxZz0hMTtzd2l0Y2goYi50YWcpe2Nhc2UgMzpSZyhiKTtGZygpO2JyZWFrO2Nhc2UgNTpMZihiKTticmVhaztjYXNlIDE6SihiLnR5cGUpJiZPZShiKTticmVhaztjYXNlIDQ6SmYoYixiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvKTticmVhaztjYXNlIDEwOlVnKGIsYi5tZW1vaXplZFByb3BzLnZhbHVlKTticmVhaztjYXNlIDEzOmlmKG51bGwhPT1iLm1lbW9pemVkU3RhdGUpe2Q9Yi5jaGlsZC5jaGlsZEV4cGlyYXRpb25UaW1lO2lmKDAhPT1kJiZkPj1jKXJldHVybiBTZyhhLGIsYyk7Yj1KZyhhLGIsYyk7cmV0dXJuIG51bGwhPT1iP2Iuc2libGluZzpudWxsfX1yZXR1cm4gSmcoYSxiLGMpfX1lbHNlIHFnPSExO2IuZXhwaXJhdGlvblRpbWU9MDtzd2l0Y2goYi50YWcpe2Nhc2UgMjpkPVxuYi5lbGVtZW50VHlwZTtudWxsIT09YSYmKGEuYWx0ZXJuYXRlPW51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmVmZmVjdFRhZ3w9Mik7YT1iLnBlbmRpbmdQcm9wczt2YXIgZT1KZShiLEguY3VycmVudCk7SWcoYixjKTtlPWhnKG51bGwsYixkLGEsZSxjKTtiLmVmZmVjdFRhZ3w9MTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGUmJm51bGwhPT1lJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5yZW5kZXImJnZvaWQgMD09PWUuJCR0eXBlb2Ype2IudGFnPTE7bGcoKTtpZihKKGQpKXt2YXIgZj0hMDtPZShiKX1lbHNlIGY9ITE7Yi5tZW1vaXplZFN0YXRlPW51bGwhPT1lLnN0YXRlJiZ2b2lkIDAhPT1lLnN0YXRlP2Uuc3RhdGU6bnVsbDt2YXIgZz1kLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcztcImZ1bmN0aW9uXCI9PT10eXBlb2YgZyYma2YoYixkLGcsYSk7ZS51cGRhdGVyPXRmO2Iuc3RhdGVOb2RlPWU7ZS5fcmVhY3RJbnRlcm5hbEZpYmVyPWI7eGYoYixkLGEsYyk7Yj1RZyhudWxsLGIsZCwhMCxmLFxuYyl9ZWxzZSBiLnRhZz0wLFMobnVsbCxiLGUsYyksYj1iLmNoaWxkO3JldHVybiBiO2Nhc2UgMTY6ZT1iLmVsZW1lbnRUeXBlO251bGwhPT1hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZWZmZWN0VGFnfD0yKTtmPWIucGVuZGluZ1Byb3BzO2E9aGYoZSk7Yi50eXBlPWE7ZT1iLnRhZz1XZShhKTtmPUwoYSxmKTtnPXZvaWQgMDtzd2l0Y2goZSl7Y2FzZSAwOmc9TWcobnVsbCxiLGEsZixjKTticmVhaztjYXNlIDE6Zz1PZyhudWxsLGIsYSxmLGMpO2JyZWFrO2Nhc2UgMTE6Zz1IZyhudWxsLGIsYSxmLGMpO2JyZWFrO2Nhc2UgMTQ6Zz1LZyhudWxsLGIsYSxMKGEudHlwZSxmKSxkLGMpO2JyZWFrO2RlZmF1bHQ6eChcIjMwNlwiLGEsXCJcIil9cmV0dXJuIGc7Y2FzZSAwOnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PWQ/ZTpMKGQsZSksTWcoYSxiLGQsZSxjKTtjYXNlIDE6cmV0dXJuIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsXG5lPWIuZWxlbWVudFR5cGU9PT1kP2U6TChkLGUpLE9nKGEsYixkLGUsYyk7Y2FzZSAzOlJnKGIpO2Q9Yi51cGRhdGVRdWV1ZTtudWxsPT09ZD94KFwiMjgyXCIpOnZvaWQgMDtlPWIubWVtb2l6ZWRTdGF0ZTtlPW51bGwhPT1lP2UuZWxlbWVudDpudWxsO3lmKGIsZCxiLnBlbmRpbmdQcm9wcyxudWxsLGMpO2Q9Yi5tZW1vaXplZFN0YXRlLmVsZW1lbnQ7aWYoZD09PWUpRmcoKSxiPUpnKGEsYixjKTtlbHNle2U9Yi5zdGF0ZU5vZGU7aWYoZT0obnVsbD09PWF8fG51bGw9PT1hLmNoaWxkKSYmZS5oeWRyYXRlKXlnPUVlKGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pLHhnPWIsZT16Zz0hMDtlPyhiLmVmZmVjdFRhZ3w9MixiLmNoaWxkPUVmKGIsbnVsbCxkLGMpKTooUyhhLGIsZCxjKSxGZygpKTtiPWIuY2hpbGR9cmV0dXJuIGI7Y2FzZSA1OnJldHVybiBMZihiKSxudWxsPT09YSYmQ2coYiksZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxmPW51bGwhPT1hP2EubWVtb2l6ZWRQcm9wczpudWxsLFxuZz1lLmNoaWxkcmVuLHhlKGQsZSk/Zz1udWxsOm51bGwhPT1mJiZ4ZShkLGYpJiYoYi5lZmZlY3RUYWd8PTE2KSxOZyhhLGIpLDEhPT1jJiZiLm1vZGUmMSYmZS5oaWRkZW4/KGIuZXhwaXJhdGlvblRpbWU9Yi5jaGlsZEV4cGlyYXRpb25UaW1lPTEsYj1udWxsKTooUyhhLGIsZyxjKSxiPWIuY2hpbGQpLGI7Y2FzZSA2OnJldHVybiBudWxsPT09YSYmQ2coYiksbnVsbDtjYXNlIDEzOnJldHVybiBTZyhhLGIsYyk7Y2FzZSA0OnJldHVybiBKZihiLGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pLGQ9Yi5wZW5kaW5nUHJvcHMsbnVsbD09PWE/Yi5jaGlsZD1EZihiLG51bGwsZCxjKTpTKGEsYixkLGMpLGIuY2hpbGQ7Y2FzZSAxMTpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6TChkLGUpLEhnKGEsYixkLGUsYyk7Y2FzZSA3OnJldHVybiBTKGEsYixiLnBlbmRpbmdQcm9wcyxjKSxiLmNoaWxkO2Nhc2UgODpyZXR1cm4gUyhhLGIsYi5wZW5kaW5nUHJvcHMuY2hpbGRyZW4sXG5jKSxiLmNoaWxkO2Nhc2UgMTI6cmV0dXJuIFMoYSxiLGIucGVuZGluZ1Byb3BzLmNoaWxkcmVuLGMpLGIuY2hpbGQ7Y2FzZSAxMDphOntkPWIudHlwZS5fY29udGV4dDtlPWIucGVuZGluZ1Byb3BzO2c9Yi5tZW1vaXplZFByb3BzO2Y9ZS52YWx1ZTtVZyhiLGYpO2lmKG51bGwhPT1nKXt2YXIgaD1nLnZhbHVlO2Y9YmQoaCxmKT8wOihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5fY2FsY3VsYXRlQ2hhbmdlZEJpdHM/ZC5fY2FsY3VsYXRlQ2hhbmdlZEJpdHMoaCxmKToxMDczNzQxODIzKXwwO2lmKDA9PT1mKXtpZihnLmNoaWxkcmVuPT09ZS5jaGlsZHJlbiYmIUkuY3VycmVudCl7Yj1KZyhhLGIsYyk7YnJlYWsgYX19ZWxzZSBmb3IoaD1iLmNoaWxkLG51bGwhPT1oJiYoaC5yZXR1cm49Yik7bnVsbCE9PWg7KXt2YXIgbD1oLmNvbnRleHREZXBlbmRlbmNpZXM7aWYobnVsbCE9PWwpe2c9aC5jaGlsZDtmb3IodmFyIGs9bC5maXJzdDtudWxsIT09azspe2lmKGsuY29udGV4dD09PWQmJjAhPT1cbihrLm9ic2VydmVkQml0cyZmKSl7MT09PWgudGFnJiYoaz1uZihjKSxrLnRhZz1zZixwZihoLGspKTtoLmV4cGlyYXRpb25UaW1lPGMmJihoLmV4cGlyYXRpb25UaW1lPWMpO2s9aC5hbHRlcm5hdGU7bnVsbCE9PWsmJmsuZXhwaXJhdGlvblRpbWU8YyYmKGsuZXhwaXJhdGlvblRpbWU9Yyk7az1jO2Zvcih2YXIgbT1oLnJldHVybjtudWxsIT09bTspe3ZhciBwPW0uYWx0ZXJuYXRlO2lmKG0uY2hpbGRFeHBpcmF0aW9uVGltZTxrKW0uY2hpbGRFeHBpcmF0aW9uVGltZT1rLG51bGwhPT1wJiZwLmNoaWxkRXhwaXJhdGlvblRpbWU8ayYmKHAuY2hpbGRFeHBpcmF0aW9uVGltZT1rKTtlbHNlIGlmKG51bGwhPT1wJiZwLmNoaWxkRXhwaXJhdGlvblRpbWU8aylwLmNoaWxkRXhwaXJhdGlvblRpbWU9aztlbHNlIGJyZWFrO209bS5yZXR1cm59bC5leHBpcmF0aW9uVGltZTxjJiYobC5leHBpcmF0aW9uVGltZT1jKTticmVha31rPWsubmV4dH19ZWxzZSBnPTEwPT09aC50YWc/aC50eXBlPT09Yi50eXBlP1xubnVsbDpoLmNoaWxkOmguY2hpbGQ7aWYobnVsbCE9PWcpZy5yZXR1cm49aDtlbHNlIGZvcihnPWg7bnVsbCE9PWc7KXtpZihnPT09Yil7Zz1udWxsO2JyZWFrfWg9Zy5zaWJsaW5nO2lmKG51bGwhPT1oKXtoLnJldHVybj1nLnJldHVybjtnPWg7YnJlYWt9Zz1nLnJldHVybn1oPWd9fVMoYSxiLGUuY2hpbGRyZW4sYyk7Yj1iLmNoaWxkfXJldHVybiBiO2Nhc2UgOTpyZXR1cm4gZT1iLnR5cGUsZj1iLnBlbmRpbmdQcm9wcyxkPWYuY2hpbGRyZW4sSWcoYixjKSxlPU0oZSxmLnVuc3RhYmxlX29ic2VydmVkQml0cyksZD1kKGUpLGIuZWZmZWN0VGFnfD0xLFMoYSxiLGQsYyksYi5jaGlsZDtjYXNlIDE0OnJldHVybiBlPWIudHlwZSxmPUwoZSxiLnBlbmRpbmdQcm9wcyksZj1MKGUudHlwZSxmKSxLZyhhLGIsZSxmLGQsYyk7Y2FzZSAxNTpyZXR1cm4gTGcoYSxiLGIudHlwZSxiLnBlbmRpbmdQcm9wcyxkLGMpO2Nhc2UgMTc6cmV0dXJuIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZT1iLmVsZW1lbnRUeXBlPT09XG5kP2U6TChkLGUpLG51bGwhPT1hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZWZmZWN0VGFnfD0yKSxiLnRhZz0xLEooZCk/KGE9ITAsT2UoYikpOmE9ITEsSWcoYixjKSx2ZihiLGQsZSxjKSx4ZihiLGQsZSxjKSxRZyhudWxsLGIsZCwhMCxhLGMpfXgoXCIxNTZcIil9dmFyIFZnPXtjdXJyZW50Om51bGx9LFdnPW51bGwsWGc9bnVsbCxZZz1udWxsO2Z1bmN0aW9uIFVnKGEsYil7dmFyIGM9YS50eXBlLl9jb250ZXh0O0coVmcsYy5fY3VycmVudFZhbHVlLGEpO2MuX2N1cnJlbnRWYWx1ZT1ifWZ1bmN0aW9uIFpnKGEpe3ZhciBiPVZnLmN1cnJlbnQ7RihWZyxhKTthLnR5cGUuX2NvbnRleHQuX2N1cnJlbnRWYWx1ZT1ifWZ1bmN0aW9uIElnKGEsYil7V2c9YTtZZz1YZz1udWxsO3ZhciBjPWEuY29udGV4dERlcGVuZGVuY2llcztudWxsIT09YyYmYy5leHBpcmF0aW9uVGltZT49YiYmKHFnPSEwKTthLmNvbnRleHREZXBlbmRlbmNpZXM9bnVsbH1cbmZ1bmN0aW9uIE0oYSxiKXtpZihZZyE9PWEmJiExIT09YiYmMCE9PWIpe2lmKFwibnVtYmVyXCIhPT10eXBlb2YgYnx8MTA3Mzc0MTgyMz09PWIpWWc9YSxiPTEwNzM3NDE4MjM7Yj17Y29udGV4dDphLG9ic2VydmVkQml0czpiLG5leHQ6bnVsbH07bnVsbD09PVhnPyhudWxsPT09V2c/eChcIjMwOFwiKTp2b2lkIDAsWGc9YixXZy5jb250ZXh0RGVwZW5kZW5jaWVzPXtmaXJzdDpiLGV4cGlyYXRpb25UaW1lOjB9KTpYZz1YZy5uZXh0PWJ9cmV0dXJuIGEuX2N1cnJlbnRWYWx1ZX12YXIgJGc9MCxyZj0xLHNmPTIsYWg9MyxQZz0hMTtmdW5jdGlvbiBiaChhKXtyZXR1cm57YmFzZVN0YXRlOmEsZmlyc3RVcGRhdGU6bnVsbCxsYXN0VXBkYXRlOm51bGwsZmlyc3RDYXB0dXJlZFVwZGF0ZTpudWxsLGxhc3RDYXB0dXJlZFVwZGF0ZTpudWxsLGZpcnN0RWZmZWN0Om51bGwsbGFzdEVmZmVjdDpudWxsLGZpcnN0Q2FwdHVyZWRFZmZlY3Q6bnVsbCxsYXN0Q2FwdHVyZWRFZmZlY3Q6bnVsbH19XG5mdW5jdGlvbiBjaChhKXtyZXR1cm57YmFzZVN0YXRlOmEuYmFzZVN0YXRlLGZpcnN0VXBkYXRlOmEuZmlyc3RVcGRhdGUsbGFzdFVwZGF0ZTphLmxhc3RVcGRhdGUsZmlyc3RDYXB0dXJlZFVwZGF0ZTpudWxsLGxhc3RDYXB0dXJlZFVwZGF0ZTpudWxsLGZpcnN0RWZmZWN0Om51bGwsbGFzdEVmZmVjdDpudWxsLGZpcnN0Q2FwdHVyZWRFZmZlY3Q6bnVsbCxsYXN0Q2FwdHVyZWRFZmZlY3Q6bnVsbH19ZnVuY3Rpb24gbmYoYSl7cmV0dXJue2V4cGlyYXRpb25UaW1lOmEsdGFnOiRnLHBheWxvYWQ6bnVsbCxjYWxsYmFjazpudWxsLG5leHQ6bnVsbCxuZXh0RWZmZWN0Om51bGx9fWZ1bmN0aW9uIGRoKGEsYil7bnVsbD09PWEubGFzdFVwZGF0ZT9hLmZpcnN0VXBkYXRlPWEubGFzdFVwZGF0ZT1iOihhLmxhc3RVcGRhdGUubmV4dD1iLGEubGFzdFVwZGF0ZT1iKX1cbmZ1bmN0aW9uIHBmKGEsYil7dmFyIGM9YS5hbHRlcm5hdGU7aWYobnVsbD09PWMpe3ZhciBkPWEudXBkYXRlUXVldWU7dmFyIGU9bnVsbDtudWxsPT09ZCYmKGQ9YS51cGRhdGVRdWV1ZT1iaChhLm1lbW9pemVkU3RhdGUpKX1lbHNlIGQ9YS51cGRhdGVRdWV1ZSxlPWMudXBkYXRlUXVldWUsbnVsbD09PWQ/bnVsbD09PWU/KGQ9YS51cGRhdGVRdWV1ZT1iaChhLm1lbW9pemVkU3RhdGUpLGU9Yy51cGRhdGVRdWV1ZT1iaChjLm1lbW9pemVkU3RhdGUpKTpkPWEudXBkYXRlUXVldWU9Y2goZSk6bnVsbD09PWUmJihlPWMudXBkYXRlUXVldWU9Y2goZCkpO251bGw9PT1lfHxkPT09ZT9kaChkLGIpOm51bGw9PT1kLmxhc3RVcGRhdGV8fG51bGw9PT1lLmxhc3RVcGRhdGU/KGRoKGQsYiksZGgoZSxiKSk6KGRoKGQsYiksZS5sYXN0VXBkYXRlPWIpfVxuZnVuY3Rpb24gZWgoYSxiKXt2YXIgYz1hLnVwZGF0ZVF1ZXVlO2M9bnVsbD09PWM/YS51cGRhdGVRdWV1ZT1iaChhLm1lbW9pemVkU3RhdGUpOmZoKGEsYyk7bnVsbD09PWMubGFzdENhcHR1cmVkVXBkYXRlP2MuZmlyc3RDYXB0dXJlZFVwZGF0ZT1jLmxhc3RDYXB0dXJlZFVwZGF0ZT1iOihjLmxhc3RDYXB0dXJlZFVwZGF0ZS5uZXh0PWIsYy5sYXN0Q2FwdHVyZWRVcGRhdGU9Yil9ZnVuY3Rpb24gZmgoYSxiKXt2YXIgYz1hLmFsdGVybmF0ZTtudWxsIT09YyYmYj09PWMudXBkYXRlUXVldWUmJihiPWEudXBkYXRlUXVldWU9Y2goYikpO3JldHVybiBifVxuZnVuY3Rpb24gZ2goYSxiLGMsZCxlLGYpe3N3aXRjaChjLnRhZyl7Y2FzZSByZjpyZXR1cm4gYT1jLnBheWxvYWQsXCJmdW5jdGlvblwiPT09dHlwZW9mIGE/YS5jYWxsKGYsZCxlKTphO2Nhc2UgYWg6YS5lZmZlY3RUYWc9YS5lZmZlY3RUYWcmLTIwNDl8NjQ7Y2FzZSAkZzphPWMucGF5bG9hZDtlPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBhP2EuY2FsbChmLGQsZSk6YTtpZihudWxsPT09ZXx8dm9pZCAwPT09ZSlicmVhaztyZXR1cm4gbih7fSxkLGUpO2Nhc2Ugc2Y6UGc9ITB9cmV0dXJuIGR9XG5mdW5jdGlvbiB5ZihhLGIsYyxkLGUpe1BnPSExO2I9ZmgoYSxiKTtmb3IodmFyIGY9Yi5iYXNlU3RhdGUsZz1udWxsLGg9MCxsPWIuZmlyc3RVcGRhdGUsaz1mO251bGwhPT1sOyl7dmFyIG09bC5leHBpcmF0aW9uVGltZTttPGU/KG51bGw9PT1nJiYoZz1sLGY9ayksaDxtJiYoaD1tKSk6KGs9Z2goYSxiLGwsayxjLGQpLG51bGwhPT1sLmNhbGxiYWNrJiYoYS5lZmZlY3RUYWd8PTMyLGwubmV4dEVmZmVjdD1udWxsLG51bGw9PT1iLmxhc3RFZmZlY3Q/Yi5maXJzdEVmZmVjdD1iLmxhc3RFZmZlY3Q9bDooYi5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9bCxiLmxhc3RFZmZlY3Q9bCkpKTtsPWwubmV4dH1tPW51bGw7Zm9yKGw9Yi5maXJzdENhcHR1cmVkVXBkYXRlO251bGwhPT1sOyl7dmFyIHA9bC5leHBpcmF0aW9uVGltZTtwPGU/KG51bGw9PT1tJiYobT1sLG51bGw9PT1nJiYoZj1rKSksaDxwJiYoaD1wKSk6KGs9Z2goYSxiLGwsayxjLGQpLG51bGwhPT1sLmNhbGxiYWNrJiYoYS5lZmZlY3RUYWd8PVxuMzIsbC5uZXh0RWZmZWN0PW51bGwsbnVsbD09PWIubGFzdENhcHR1cmVkRWZmZWN0P2IuZmlyc3RDYXB0dXJlZEVmZmVjdD1iLmxhc3RDYXB0dXJlZEVmZmVjdD1sOihiLmxhc3RDYXB0dXJlZEVmZmVjdC5uZXh0RWZmZWN0PWwsYi5sYXN0Q2FwdHVyZWRFZmZlY3Q9bCkpKTtsPWwubmV4dH1udWxsPT09ZyYmKGIubGFzdFVwZGF0ZT1udWxsKTtudWxsPT09bT9iLmxhc3RDYXB0dXJlZFVwZGF0ZT1udWxsOmEuZWZmZWN0VGFnfD0zMjtudWxsPT09ZyYmbnVsbD09PW0mJihmPWspO2IuYmFzZVN0YXRlPWY7Yi5maXJzdFVwZGF0ZT1nO2IuZmlyc3RDYXB0dXJlZFVwZGF0ZT1tO2EuZXhwaXJhdGlvblRpbWU9aDthLm1lbW9pemVkU3RhdGU9a31cbmZ1bmN0aW9uIGhoKGEsYixjKXtudWxsIT09Yi5maXJzdENhcHR1cmVkVXBkYXRlJiYobnVsbCE9PWIubGFzdFVwZGF0ZSYmKGIubGFzdFVwZGF0ZS5uZXh0PWIuZmlyc3RDYXB0dXJlZFVwZGF0ZSxiLmxhc3RVcGRhdGU9Yi5sYXN0Q2FwdHVyZWRVcGRhdGUpLGIuZmlyc3RDYXB0dXJlZFVwZGF0ZT1iLmxhc3RDYXB0dXJlZFVwZGF0ZT1udWxsKTtpaChiLmZpcnN0RWZmZWN0LGMpO2IuZmlyc3RFZmZlY3Q9Yi5sYXN0RWZmZWN0PW51bGw7aWgoYi5maXJzdENhcHR1cmVkRWZmZWN0LGMpO2IuZmlyc3RDYXB0dXJlZEVmZmVjdD1iLmxhc3RDYXB0dXJlZEVmZmVjdD1udWxsfWZ1bmN0aW9uIGloKGEsYil7Zm9yKDtudWxsIT09YTspe3ZhciBjPWEuY2FsbGJhY2s7aWYobnVsbCE9PWMpe2EuY2FsbGJhY2s9bnVsbDt2YXIgZD1iO1wiZnVuY3Rpb25cIiE9PXR5cGVvZiBjP3goXCIxOTFcIixjKTp2b2lkIDA7Yy5jYWxsKGQpfWE9YS5uZXh0RWZmZWN0fX1cbmZ1bmN0aW9uIGpoKGEsYil7cmV0dXJue3ZhbHVlOmEsc291cmNlOmIsc3RhY2s6amMoYil9fWZ1bmN0aW9uIGtoKGEpe2EuZWZmZWN0VGFnfD00fXZhciBsaD12b2lkIDAsbWg9dm9pZCAwLG5oPXZvaWQgMCxvaD12b2lkIDA7bGg9ZnVuY3Rpb24oYSxiKXtmb3IodmFyIGM9Yi5jaGlsZDtudWxsIT09Yzspe2lmKDU9PT1jLnRhZ3x8Nj09PWMudGFnKWEuYXBwZW5kQ2hpbGQoYy5zdGF0ZU5vZGUpO2Vsc2UgaWYoNCE9PWMudGFnJiZudWxsIT09Yy5jaGlsZCl7Yy5jaGlsZC5yZXR1cm49YztjPWMuY2hpbGQ7Y29udGludWV9aWYoYz09PWIpYnJlYWs7Zm9yKDtudWxsPT09Yy5zaWJsaW5nOyl7aWYobnVsbD09PWMucmV0dXJufHxjLnJldHVybj09PWIpcmV0dXJuO2M9Yy5yZXR1cm59Yy5zaWJsaW5nLnJldHVybj1jLnJldHVybjtjPWMuc2libGluZ319O21oPWZ1bmN0aW9uKCl7fTtcbm5oPWZ1bmN0aW9uKGEsYixjLGQsZSl7dmFyIGY9YS5tZW1vaXplZFByb3BzO2lmKGYhPT1kKXt2YXIgZz1iLnN0YXRlTm9kZTtJZihOLmN1cnJlbnQpO2E9bnVsbDtzd2l0Y2goYyl7Y2FzZSBcImlucHV0XCI6Zj12YyhnLGYpO2Q9dmMoZyxkKTthPVtdO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjpmPSRkKGcsZik7ZD0kZChnLGQpO2E9W107YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmY9bih7fSxmLHt2YWx1ZTp2b2lkIDB9KTtkPW4oe30sZCx7dmFsdWU6dm9pZCAwfSk7YT1bXTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpmPWJlKGcsZik7ZD1iZShnLGQpO2E9W107YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCIhPT10eXBlb2YgZi5vbkNsaWNrJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5vbkNsaWNrJiYoZy5vbmNsaWNrPXRlKX1xZShjLGQpO2c9Yz12b2lkIDA7dmFyIGg9bnVsbDtmb3IoYyBpbiBmKWlmKCFkLmhhc093blByb3BlcnR5KGMpJiZmLmhhc093blByb3BlcnR5KGMpJiZudWxsIT1mW2NdKWlmKFwic3R5bGVcIj09PVxuYyl7dmFyIGw9ZltjXTtmb3IoZyBpbiBsKWwuaGFzT3duUHJvcGVydHkoZykmJihofHwoaD17fSksaFtnXT1cIlwiKX1lbHNlXCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiIT09YyYmXCJjaGlsZHJlblwiIT09YyYmXCJzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmdcIiE9PWMmJlwic3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nXCIhPT1jJiZcImF1dG9Gb2N1c1wiIT09YyYmKHJhLmhhc093blByb3BlcnR5KGMpP2F8fChhPVtdKTooYT1hfHxbXSkucHVzaChjLG51bGwpKTtmb3IoYyBpbiBkKXt2YXIgaz1kW2NdO2w9bnVsbCE9Zj9mW2NdOnZvaWQgMDtpZihkLmhhc093blByb3BlcnR5KGMpJiZrIT09bCYmKG51bGwhPWt8fG51bGwhPWwpKWlmKFwic3R5bGVcIj09PWMpaWYobCl7Zm9yKGcgaW4gbCkhbC5oYXNPd25Qcm9wZXJ0eShnKXx8ayYmay5oYXNPd25Qcm9wZXJ0eShnKXx8KGh8fChoPXt9KSxoW2ddPVwiXCIpO2ZvcihnIGluIGspay5oYXNPd25Qcm9wZXJ0eShnKSYmbFtnXSE9PWtbZ10mJihofHxcbihoPXt9KSxoW2ddPWtbZ10pfWVsc2UgaHx8KGF8fChhPVtdKSxhLnB1c2goYyxoKSksaD1rO2Vsc2VcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCI9PT1jPyhrPWs/ay5fX2h0bWw6dm9pZCAwLGw9bD9sLl9faHRtbDp2b2lkIDAsbnVsbCE9ayYmbCE9PWsmJihhPWF8fFtdKS5wdXNoKGMsXCJcIitrKSk6XCJjaGlsZHJlblwiPT09Yz9sPT09a3x8XCJzdHJpbmdcIiE9PXR5cGVvZiBrJiZcIm51bWJlclwiIT09dHlwZW9mIGt8fChhPWF8fFtdKS5wdXNoKGMsXCJcIitrKTpcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09YyYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWMmJihyYS5oYXNPd25Qcm9wZXJ0eShjKT8obnVsbCE9ayYmc2UoZSxjKSxhfHxsPT09a3x8KGE9W10pKTooYT1hfHxbXSkucHVzaChjLGspKX1oJiYoYT1hfHxbXSkucHVzaChcInN0eWxlXCIsaCk7ZT1hOyhiLnVwZGF0ZVF1ZXVlPWUpJiZraChiKX19O29oPWZ1bmN0aW9uKGEsYixjLGQpe2MhPT1kJiZraChiKX07XG52YXIgcGg9XCJmdW5jdGlvblwiPT09dHlwZW9mIFdlYWtTZXQ/V2Vha1NldDpTZXQ7ZnVuY3Rpb24gcWgoYSxiKXt2YXIgYz1iLnNvdXJjZSxkPWIuc3RhY2s7bnVsbD09PWQmJm51bGwhPT1jJiYoZD1qYyhjKSk7bnVsbCE9PWMmJmljKGMudHlwZSk7Yj1iLnZhbHVlO251bGwhPT1hJiYxPT09YS50YWcmJmljKGEudHlwZSk7dHJ5e2NvbnNvbGUuZXJyb3IoYil9Y2F0Y2goZSl7c2V0VGltZW91dChmdW5jdGlvbigpe3Rocm93IGU7fSl9fWZ1bmN0aW9uIHJoKGEpe3ZhciBiPWEucmVmO2lmKG51bGwhPT1iKWlmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBiKXRyeXtiKG51bGwpfWNhdGNoKGMpe3NoKGEsYyl9ZWxzZSBiLmN1cnJlbnQ9bnVsbH1cbmZ1bmN0aW9uIHRoKGEsYixjKXtjPWMudXBkYXRlUXVldWU7Yz1udWxsIT09Yz9jLmxhc3RFZmZlY3Q6bnVsbDtpZihudWxsIT09Yyl7dmFyIGQ9Yz1jLm5leHQ7ZG97aWYoKGQudGFnJmEpIT09TmYpe3ZhciBlPWQuZGVzdHJveTtkLmRlc3Ryb3k9dm9pZCAwO3ZvaWQgMCE9PWUmJmUoKX0oZC50YWcmYikhPT1OZiYmKGU9ZC5jcmVhdGUsZC5kZXN0cm95PWUoKSk7ZD1kLm5leHR9d2hpbGUoZCE9PWMpfX1cbmZ1bmN0aW9uIHVoKGEsYil7Zm9yKHZhciBjPWE7Oyl7aWYoNT09PWMudGFnKXt2YXIgZD1jLnN0YXRlTm9kZTtpZihiKWQuc3R5bGUuZGlzcGxheT1cIm5vbmVcIjtlbHNle2Q9Yy5zdGF0ZU5vZGU7dmFyIGU9Yy5tZW1vaXplZFByb3BzLnN0eWxlO2U9dm9pZCAwIT09ZSYmbnVsbCE9PWUmJmUuaGFzT3duUHJvcGVydHkoXCJkaXNwbGF5XCIpP2UuZGlzcGxheTpudWxsO2Quc3R5bGUuZGlzcGxheT1uZShcImRpc3BsYXlcIixlKX19ZWxzZSBpZig2PT09Yy50YWcpYy5zdGF0ZU5vZGUubm9kZVZhbHVlPWI/XCJcIjpjLm1lbW9pemVkUHJvcHM7ZWxzZSBpZigxMz09PWMudGFnJiZudWxsIT09Yy5tZW1vaXplZFN0YXRlKXtkPWMuY2hpbGQuc2libGluZztkLnJldHVybj1jO2M9ZDtjb250aW51ZX1lbHNlIGlmKG51bGwhPT1jLmNoaWxkKXtjLmNoaWxkLnJldHVybj1jO2M9Yy5jaGlsZDtjb250aW51ZX1pZihjPT09YSlicmVhaztmb3IoO251bGw9PT1jLnNpYmxpbmc7KXtpZihudWxsPT09Yy5yZXR1cm58fFxuYy5yZXR1cm49PT1hKXJldHVybjtjPWMucmV0dXJufWMuc2libGluZy5yZXR1cm49Yy5yZXR1cm47Yz1jLnNpYmxpbmd9fVxuZnVuY3Rpb24gdmgoYSl7XCJmdW5jdGlvblwiPT09dHlwZW9mIFJlJiZSZShhKTtzd2l0Y2goYS50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTQ6Y2FzZSAxNTp2YXIgYj1hLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1iJiYoYj1iLmxhc3RFZmZlY3QsbnVsbCE9PWIpKXt2YXIgYz1iPWIubmV4dDtkb3t2YXIgZD1jLmRlc3Ryb3k7aWYodm9pZCAwIT09ZCl7dmFyIGU9YTt0cnl7ZCgpfWNhdGNoKGYpe3NoKGUsZil9fWM9Yy5uZXh0fXdoaWxlKGMhPT1iKX1icmVhaztjYXNlIDE6cmgoYSk7Yj1hLnN0YXRlTm9kZTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5jb21wb25lbnRXaWxsVW5tb3VudCl0cnl7Yi5wcm9wcz1hLm1lbW9pemVkUHJvcHMsYi5zdGF0ZT1hLm1lbW9pemVkU3RhdGUsYi5jb21wb25lbnRXaWxsVW5tb3VudCgpfWNhdGNoKGYpe3NoKGEsZil9YnJlYWs7Y2FzZSA1OnJoKGEpO2JyZWFrO2Nhc2UgNDp3aChhKX19XG5mdW5jdGlvbiB4aChhKXtyZXR1cm4gNT09PWEudGFnfHwzPT09YS50YWd8fDQ9PT1hLnRhZ31cbmZ1bmN0aW9uIHloKGEpe2E6e2Zvcih2YXIgYj1hLnJldHVybjtudWxsIT09Yjspe2lmKHhoKGIpKXt2YXIgYz1iO2JyZWFrIGF9Yj1iLnJldHVybn14KFwiMTYwXCIpO2M9dm9pZCAwfXZhciBkPWI9dm9pZCAwO3N3aXRjaChjLnRhZyl7Y2FzZSA1OmI9Yy5zdGF0ZU5vZGU7ZD0hMTticmVhaztjYXNlIDM6Yj1jLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2Q9ITA7YnJlYWs7Y2FzZSA0OmI9Yy5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztkPSEwO2JyZWFrO2RlZmF1bHQ6eChcIjE2MVwiKX1jLmVmZmVjdFRhZyYxNiYmKGtlKGIsXCJcIiksYy5lZmZlY3RUYWcmPS0xNyk7YTpiOmZvcihjPWE7Oyl7Zm9yKDtudWxsPT09Yy5zaWJsaW5nOyl7aWYobnVsbD09PWMucmV0dXJufHx4aChjLnJldHVybikpe2M9bnVsbDticmVhayBhfWM9Yy5yZXR1cm59Yy5zaWJsaW5nLnJldHVybj1jLnJldHVybjtmb3IoYz1jLnNpYmxpbmc7NSE9PWMudGFnJiY2IT09Yy50YWcmJjE4IT09Yy50YWc7KXtpZihjLmVmZmVjdFRhZyZcbjIpY29udGludWUgYjtpZihudWxsPT09Yy5jaGlsZHx8ND09PWMudGFnKWNvbnRpbnVlIGI7ZWxzZSBjLmNoaWxkLnJldHVybj1jLGM9Yy5jaGlsZH1pZighKGMuZWZmZWN0VGFnJjIpKXtjPWMuc3RhdGVOb2RlO2JyZWFrIGF9fWZvcih2YXIgZT1hOzspe2lmKDU9PT1lLnRhZ3x8Nj09PWUudGFnKWlmKGMpaWYoZCl7dmFyIGY9YixnPWUuc3RhdGVOb2RlLGg9Yzs4PT09Zi5ub2RlVHlwZT9mLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGcsaCk6Zi5pbnNlcnRCZWZvcmUoZyxoKX1lbHNlIGIuaW5zZXJ0QmVmb3JlKGUuc3RhdGVOb2RlLGMpO2Vsc2UgZD8oZz1iLGg9ZS5zdGF0ZU5vZGUsOD09PWcubm9kZVR5cGU/KGY9Zy5wYXJlbnROb2RlLGYuaW5zZXJ0QmVmb3JlKGgsZykpOihmPWcsZi5hcHBlbmRDaGlsZChoKSksZz1nLl9yZWFjdFJvb3RDb250YWluZXIsbnVsbCE9PWcmJnZvaWQgMCE9PWd8fG51bGwhPT1mLm9uY2xpY2t8fChmLm9uY2xpY2s9dGUpKTpiLmFwcGVuZENoaWxkKGUuc3RhdGVOb2RlKTtcbmVsc2UgaWYoNCE9PWUudGFnJiZudWxsIT09ZS5jaGlsZCl7ZS5jaGlsZC5yZXR1cm49ZTtlPWUuY2hpbGQ7Y29udGludWV9aWYoZT09PWEpYnJlYWs7Zm9yKDtudWxsPT09ZS5zaWJsaW5nOyl7aWYobnVsbD09PWUucmV0dXJufHxlLnJldHVybj09PWEpcmV0dXJuO2U9ZS5yZXR1cm59ZS5zaWJsaW5nLnJldHVybj1lLnJldHVybjtlPWUuc2libGluZ319XG5mdW5jdGlvbiB3aChhKXtmb3IodmFyIGI9YSxjPSExLGQ9dm9pZCAwLGU9dm9pZCAwOzspe2lmKCFjKXtjPWIucmV0dXJuO2E6Zm9yKDs7KXtudWxsPT09Yz94KFwiMTYwXCIpOnZvaWQgMDtzd2l0Y2goYy50YWcpe2Nhc2UgNTpkPWMuc3RhdGVOb2RlO2U9ITE7YnJlYWsgYTtjYXNlIDM6ZD1jLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2U9ITA7YnJlYWsgYTtjYXNlIDQ6ZD1jLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2U9ITA7YnJlYWsgYX1jPWMucmV0dXJufWM9ITB9aWYoNT09PWIudGFnfHw2PT09Yi50YWcpe2E6Zm9yKHZhciBmPWIsZz1mOzspaWYodmgoZyksbnVsbCE9PWcuY2hpbGQmJjQhPT1nLnRhZylnLmNoaWxkLnJldHVybj1nLGc9Zy5jaGlsZDtlbHNle2lmKGc9PT1mKWJyZWFrO2Zvcig7bnVsbD09PWcuc2libGluZzspe2lmKG51bGw9PT1nLnJldHVybnx8Zy5yZXR1cm49PT1mKWJyZWFrIGE7Zz1nLnJldHVybn1nLnNpYmxpbmcucmV0dXJuPWcucmV0dXJuO2c9Zy5zaWJsaW5nfWU/XG4oZj1kLGc9Yi5zdGF0ZU5vZGUsOD09PWYubm9kZVR5cGU/Zi5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGcpOmYucmVtb3ZlQ2hpbGQoZykpOmQucmVtb3ZlQ2hpbGQoYi5zdGF0ZU5vZGUpfWVsc2UgaWYoND09PWIudGFnKXtpZihudWxsIT09Yi5jaGlsZCl7ZD1iLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2U9ITA7Yi5jaGlsZC5yZXR1cm49YjtiPWIuY2hpbGQ7Y29udGludWV9fWVsc2UgaWYodmgoYiksbnVsbCE9PWIuY2hpbGQpe2IuY2hpbGQucmV0dXJuPWI7Yj1iLmNoaWxkO2NvbnRpbnVlfWlmKGI9PT1hKWJyZWFrO2Zvcig7bnVsbD09PWIuc2libGluZzspe2lmKG51bGw9PT1iLnJldHVybnx8Yi5yZXR1cm49PT1hKXJldHVybjtiPWIucmV0dXJuOzQ9PT1iLnRhZyYmKGM9ITEpfWIuc2libGluZy5yZXR1cm49Yi5yZXR1cm47Yj1iLnNpYmxpbmd9fVxuZnVuY3Rpb24gemgoYSxiKXtzd2l0Y2goYi50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTQ6Y2FzZSAxNTp0aChQZixRZixiKTticmVhaztjYXNlIDE6YnJlYWs7Y2FzZSA1OnZhciBjPWIuc3RhdGVOb2RlO2lmKG51bGwhPWMpe3ZhciBkPWIubWVtb2l6ZWRQcm9wczthPW51bGwhPT1hP2EubWVtb2l6ZWRQcm9wczpkO3ZhciBlPWIudHlwZSxmPWIudXBkYXRlUXVldWU7Yi51cGRhdGVRdWV1ZT1udWxsO251bGwhPT1mJiZDZShjLGYsZSxhLGQsYil9YnJlYWs7Y2FzZSA2Om51bGw9PT1iLnN0YXRlTm9kZT94KFwiMTYyXCIpOnZvaWQgMDtiLnN0YXRlTm9kZS5ub2RlVmFsdWU9Yi5tZW1vaXplZFByb3BzO2JyZWFrO2Nhc2UgMzpicmVhaztjYXNlIDEyOmJyZWFrO2Nhc2UgMTM6Yz1iLm1lbW9pemVkU3RhdGU7ZD12b2lkIDA7YT1iO251bGw9PT1jP2Q9ITE6KGQ9ITAsYT1iLmNoaWxkLDA9PT1jLnRpbWVkT3V0QXQmJihjLnRpbWVkT3V0QXQ9bGYoKSkpO251bGwhPT1hJiZ1aChhLGQpO2M9XG5iLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1jKXtiLnVwZGF0ZVF1ZXVlPW51bGw7dmFyIGc9Yi5zdGF0ZU5vZGU7bnVsbD09PWcmJihnPWIuc3RhdGVOb2RlPW5ldyBwaCk7Yy5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBjPUFoLmJpbmQobnVsbCxiLGEpO2cuaGFzKGEpfHwoZy5hZGQoYSksYS50aGVuKGMsYykpfSl9YnJlYWs7Y2FzZSAxNzpicmVhaztkZWZhdWx0OngoXCIxNjNcIil9fXZhciBCaD1cImZ1bmN0aW9uXCI9PT10eXBlb2YgV2Vha01hcD9XZWFrTWFwOk1hcDtmdW5jdGlvbiBDaChhLGIsYyl7Yz1uZihjKTtjLnRhZz1haDtjLnBheWxvYWQ9e2VsZW1lbnQ6bnVsbH07dmFyIGQ9Yi52YWx1ZTtjLmNhbGxiYWNrPWZ1bmN0aW9uKCl7RGgoZCk7cWgoYSxiKX07cmV0dXJuIGN9XG5mdW5jdGlvbiBFaChhLGIsYyl7Yz1uZihjKTtjLnRhZz1haDt2YXIgZD1hLnR5cGUuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkKXt2YXIgZT1iLnZhbHVlO2MucGF5bG9hZD1mdW5jdGlvbigpe3JldHVybiBkKGUpfX12YXIgZj1hLnN0YXRlTm9kZTtudWxsIT09ZiYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGYuY29tcG9uZW50RGlkQ2F0Y2gmJihjLmNhbGxiYWNrPWZ1bmN0aW9uKCl7XCJmdW5jdGlvblwiIT09dHlwZW9mIGQmJihudWxsPT09Rmg/Rmg9bmV3IFNldChbdGhpc10pOkZoLmFkZCh0aGlzKSk7dmFyIGM9Yi52YWx1ZSxlPWIuc3RhY2s7cWgoYSxiKTt0aGlzLmNvbXBvbmVudERpZENhdGNoKGMse2NvbXBvbmVudFN0YWNrOm51bGwhPT1lP2U6XCJcIn0pfSk7cmV0dXJuIGN9XG5mdW5jdGlvbiBHaChhKXtzd2l0Y2goYS50YWcpe2Nhc2UgMTpKKGEudHlwZSkmJktlKGEpO3ZhciBiPWEuZWZmZWN0VGFnO3JldHVybiBiJjIwNDg/KGEuZWZmZWN0VGFnPWImLTIwNDl8NjQsYSk6bnVsbDtjYXNlIDM6cmV0dXJuIEtmKGEpLExlKGEpLGI9YS5lZmZlY3RUYWcsMCE9PShiJjY0KT94KFwiMjg1XCIpOnZvaWQgMCxhLmVmZmVjdFRhZz1iJi0yMDQ5fDY0LGE7Y2FzZSA1OnJldHVybiBNZihhKSxudWxsO2Nhc2UgMTM6cmV0dXJuIGI9YS5lZmZlY3RUYWcsYiYyMDQ4PyhhLmVmZmVjdFRhZz1iJi0yMDQ5fDY0LGEpOm51bGw7Y2FzZSAxODpyZXR1cm4gbnVsbDtjYXNlIDQ6cmV0dXJuIEtmKGEpLG51bGw7Y2FzZSAxMDpyZXR1cm4gWmcoYSksbnVsbDtkZWZhdWx0OnJldHVybiBudWxsfX1cbnZhciBIaD1UYi5SZWFjdEN1cnJlbnREaXNwYXRjaGVyLEloPVRiLlJlYWN0Q3VycmVudE93bmVyLEpoPTEwNzM3NDE4MjIsS2g9ITEsVD1udWxsLExoPW51bGwsVT0wLE1oPS0xLE5oPSExLFY9bnVsbCxPaD0hMSxQaD1udWxsLFFoPW51bGwsUmg9bnVsbCxGaD1udWxsO2Z1bmN0aW9uIFNoKCl7aWYobnVsbCE9PVQpZm9yKHZhciBhPVQucmV0dXJuO251bGwhPT1hOyl7dmFyIGI9YTtzd2l0Y2goYi50YWcpe2Nhc2UgMTp2YXIgYz1iLnR5cGUuY2hpbGRDb250ZXh0VHlwZXM7bnVsbCE9PWMmJnZvaWQgMCE9PWMmJktlKGIpO2JyZWFrO2Nhc2UgMzpLZihiKTtMZShiKTticmVhaztjYXNlIDU6TWYoYik7YnJlYWs7Y2FzZSA0OktmKGIpO2JyZWFrO2Nhc2UgMTA6WmcoYil9YT1hLnJldHVybn1MaD1udWxsO1U9MDtNaD0tMTtOaD0hMTtUPW51bGx9XG5mdW5jdGlvbiBUaCgpe2Zvcig7bnVsbCE9PVY7KXt2YXIgYT1WLmVmZmVjdFRhZzthJjE2JiZrZShWLnN0YXRlTm9kZSxcIlwiKTtpZihhJjEyOCl7dmFyIGI9Vi5hbHRlcm5hdGU7bnVsbCE9PWImJihiPWIucmVmLG51bGwhPT1iJiYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGI/YihudWxsKTpiLmN1cnJlbnQ9bnVsbCkpfXN3aXRjaChhJjE0KXtjYXNlIDI6eWgoVik7Vi5lZmZlY3RUYWcmPS0zO2JyZWFrO2Nhc2UgNjp5aChWKTtWLmVmZmVjdFRhZyY9LTM7emgoVi5hbHRlcm5hdGUsVik7YnJlYWs7Y2FzZSA0OnpoKFYuYWx0ZXJuYXRlLFYpO2JyZWFrO2Nhc2UgODphPVYsd2goYSksYS5yZXR1cm49bnVsbCxhLmNoaWxkPW51bGwsYS5tZW1vaXplZFN0YXRlPW51bGwsYS51cGRhdGVRdWV1ZT1udWxsLGE9YS5hbHRlcm5hdGUsbnVsbCE9PWEmJihhLnJldHVybj1udWxsLGEuY2hpbGQ9bnVsbCxhLm1lbW9pemVkU3RhdGU9bnVsbCxhLnVwZGF0ZVF1ZXVlPW51bGwpfVY9Vi5uZXh0RWZmZWN0fX1cbmZ1bmN0aW9uIFVoKCl7Zm9yKDtudWxsIT09Vjspe2lmKFYuZWZmZWN0VGFnJjI1NilhOnt2YXIgYT1WLmFsdGVybmF0ZSxiPVY7c3dpdGNoKGIudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE1OnRoKE9mLE5mLGIpO2JyZWFrIGE7Y2FzZSAxOmlmKGIuZWZmZWN0VGFnJjI1NiYmbnVsbCE9PWEpe3ZhciBjPWEubWVtb2l6ZWRQcm9wcyxkPWEubWVtb2l6ZWRTdGF0ZTthPWIuc3RhdGVOb2RlO2I9YS5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZShiLmVsZW1lbnRUeXBlPT09Yi50eXBlP2M6TChiLnR5cGUsYyksZCk7YS5fX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEJlZm9yZVVwZGF0ZT1ifWJyZWFrIGE7Y2FzZSAzOmNhc2UgNTpjYXNlIDY6Y2FzZSA0OmNhc2UgMTc6YnJlYWsgYTtkZWZhdWx0OngoXCIxNjNcIil9fVY9Vi5uZXh0RWZmZWN0fX1cbmZ1bmN0aW9uIFZoKGEsYil7Zm9yKDtudWxsIT09Vjspe3ZhciBjPVYuZWZmZWN0VGFnO2lmKGMmMzYpe3ZhciBkPVYuYWx0ZXJuYXRlLGU9VixmPWI7c3dpdGNoKGUudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE1OnRoKFJmLFNmLGUpO2JyZWFrO2Nhc2UgMTp2YXIgZz1lLnN0YXRlTm9kZTtpZihlLmVmZmVjdFRhZyY0KWlmKG51bGw9PT1kKWcuY29tcG9uZW50RGlkTW91bnQoKTtlbHNle3ZhciBoPWUuZWxlbWVudFR5cGU9PT1lLnR5cGU/ZC5tZW1vaXplZFByb3BzOkwoZS50eXBlLGQubWVtb2l6ZWRQcm9wcyk7Zy5jb21wb25lbnREaWRVcGRhdGUoaCxkLm1lbW9pemVkU3RhdGUsZy5fX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEJlZm9yZVVwZGF0ZSl9ZD1lLnVwZGF0ZVF1ZXVlO251bGwhPT1kJiZoaChlLGQsZyxmKTticmVhaztjYXNlIDM6ZD1lLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1kKXtnPW51bGw7aWYobnVsbCE9PWUuY2hpbGQpc3dpdGNoKGUuY2hpbGQudGFnKXtjYXNlIDU6Zz1cbmUuY2hpbGQuc3RhdGVOb2RlO2JyZWFrO2Nhc2UgMTpnPWUuY2hpbGQuc3RhdGVOb2RlfWhoKGUsZCxnLGYpfWJyZWFrO2Nhc2UgNTpmPWUuc3RhdGVOb2RlO251bGw9PT1kJiZlLmVmZmVjdFRhZyY0JiZ3ZShlLnR5cGUsZS5tZW1vaXplZFByb3BzKSYmZi5mb2N1cygpO2JyZWFrO2Nhc2UgNjpicmVhaztjYXNlIDQ6YnJlYWs7Y2FzZSAxMjpicmVhaztjYXNlIDEzOmJyZWFrO2Nhc2UgMTc6YnJlYWs7ZGVmYXVsdDp4KFwiMTYzXCIpfX1jJjEyOCYmKGU9Vi5yZWYsbnVsbCE9PWUmJihmPVYuc3RhdGVOb2RlLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlP2UoZik6ZS5jdXJyZW50PWYpKTtjJjUxMiYmKFBoPWEpO1Y9Vi5uZXh0RWZmZWN0fX1cbmZ1bmN0aW9uIFdoKGEsYil7Umg9UWg9UGg9bnVsbDt2YXIgYz1XO1c9ITA7ZG97aWYoYi5lZmZlY3RUYWcmNTEyKXt2YXIgZD0hMSxlPXZvaWQgMDt0cnl7dmFyIGY9Yjt0aChVZixOZixmKTt0aChOZixUZixmKX1jYXRjaChnKXtkPSEwLGU9Z31kJiZzaChiLGUpfWI9Yi5uZXh0RWZmZWN0fXdoaWxlKG51bGwhPT1iKTtXPWM7Yz1hLmV4cGlyYXRpb25UaW1lOzAhPT1jJiZYaChhLGMpO1h8fFd8fFloKDEwNzM3NDE4MjMsITEpfWZ1bmN0aW9uIG9mKCl7bnVsbCE9PVFoJiZCZShRaCk7bnVsbCE9PVJoJiZSaCgpfVxuZnVuY3Rpb24gWmgoYSxiKXtPaD1LaD0hMDthLmN1cnJlbnQ9PT1iP3goXCIxNzdcIik6dm9pZCAwO3ZhciBjPWEucGVuZGluZ0NvbW1pdEV4cGlyYXRpb25UaW1lOzA9PT1jP3goXCIyNjFcIik6dm9pZCAwO2EucGVuZGluZ0NvbW1pdEV4cGlyYXRpb25UaW1lPTA7dmFyIGQ9Yi5leHBpcmF0aW9uVGltZSxlPWIuY2hpbGRFeHBpcmF0aW9uVGltZTtlZihhLGU+ZD9lOmQpO0loLmN1cnJlbnQ9bnVsbDtkPXZvaWQgMDsxPGIuZWZmZWN0VGFnP251bGwhPT1iLmxhc3RFZmZlY3Q/KGIubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWIsZD1iLmZpcnN0RWZmZWN0KTpkPWI6ZD1iLmZpcnN0RWZmZWN0O3VlPUJkO3ZlPVBkKCk7QmQ9ITE7Zm9yKFY9ZDtudWxsIT09Vjspe2U9ITE7dmFyIGY9dm9pZCAwO3RyeXtVaCgpfWNhdGNoKGgpe2U9ITAsZj1ofWUmJihudWxsPT09Vj94KFwiMTc4XCIpOnZvaWQgMCxzaChWLGYpLG51bGwhPT1WJiYoVj1WLm5leHRFZmZlY3QpKX1mb3IoVj1kO251bGwhPT1WOyl7ZT0hMTtcbmY9dm9pZCAwO3RyeXtUaCgpfWNhdGNoKGgpe2U9ITAsZj1ofWUmJihudWxsPT09Vj94KFwiMTc4XCIpOnZvaWQgMCxzaChWLGYpLG51bGwhPT1WJiYoVj1WLm5leHRFZmZlY3QpKX1RZCh2ZSk7dmU9bnVsbDtCZD0hIXVlO3VlPW51bGw7YS5jdXJyZW50PWI7Zm9yKFY9ZDtudWxsIT09Vjspe2U9ITE7Zj12b2lkIDA7dHJ5e1ZoKGEsYyl9Y2F0Y2goaCl7ZT0hMCxmPWh9ZSYmKG51bGw9PT1WP3goXCIxNzhcIik6dm9pZCAwLHNoKFYsZiksbnVsbCE9PVYmJihWPVYubmV4dEVmZmVjdCkpfWlmKG51bGwhPT1kJiZudWxsIT09UGgpe3ZhciBnPVdoLmJpbmQobnVsbCxhLGQpO1FoPXIudW5zdGFibGVfcnVuV2l0aFByaW9yaXR5KHIudW5zdGFibGVfTm9ybWFsUHJpb3JpdHksZnVuY3Rpb24oKXtyZXR1cm4gQWUoZyl9KTtSaD1nfUtoPU9oPSExO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBRZSYmUWUoYi5zdGF0ZU5vZGUpO2M9Yi5leHBpcmF0aW9uVGltZTtiPWIuY2hpbGRFeHBpcmF0aW9uVGltZTtiPVxuYj5jP2I6YzswPT09YiYmKEZoPW51bGwpOyRoKGEsYil9XG5mdW5jdGlvbiBhaShhKXtmb3IoOzspe3ZhciBiPWEuYWx0ZXJuYXRlLGM9YS5yZXR1cm4sZD1hLnNpYmxpbmc7aWYoMD09PShhLmVmZmVjdFRhZyYxMDI0KSl7VD1hO2E6e3ZhciBlPWI7Yj1hO3ZhciBmPVU7dmFyIGc9Yi5wZW5kaW5nUHJvcHM7c3dpdGNoKGIudGFnKXtjYXNlIDI6YnJlYWs7Y2FzZSAxNjpicmVhaztjYXNlIDE1OmNhc2UgMDpicmVhaztjYXNlIDE6SihiLnR5cGUpJiZLZShiKTticmVhaztjYXNlIDM6S2YoYik7TGUoYik7Zz1iLnN0YXRlTm9kZTtnLnBlbmRpbmdDb250ZXh0JiYoZy5jb250ZXh0PWcucGVuZGluZ0NvbnRleHQsZy5wZW5kaW5nQ29udGV4dD1udWxsKTtpZihudWxsPT09ZXx8bnVsbD09PWUuY2hpbGQpRWcoYiksYi5lZmZlY3RUYWcmPS0zO21oKGIpO2JyZWFrO2Nhc2UgNTpNZihiKTt2YXIgaD1JZihIZi5jdXJyZW50KTtmPWIudHlwZTtpZihudWxsIT09ZSYmbnVsbCE9Yi5zdGF0ZU5vZGUpbmgoZSxiLGYsZyxoKSxlLnJlZiE9PWIucmVmJiYoYi5lZmZlY3RUYWd8PVxuMTI4KTtlbHNlIGlmKGcpe3ZhciBsPUlmKE4uY3VycmVudCk7aWYoRWcoYikpe2c9YjtlPWcuc3RhdGVOb2RlO3ZhciBrPWcudHlwZSxtPWcubWVtb2l6ZWRQcm9wcyxwPWg7ZVtGYV09ZztlW0dhXT1tO2Y9dm9pZCAwO2g9aztzd2l0Y2goaCl7Y2FzZSBcImlmcmFtZVwiOmNhc2UgXCJvYmplY3RcIjpFKFwibG9hZFwiLGUpO2JyZWFrO2Nhc2UgXCJ2aWRlb1wiOmNhc2UgXCJhdWRpb1wiOmZvcihrPTA7azxhYi5sZW5ndGg7aysrKUUoYWJba10sZSk7YnJlYWs7Y2FzZSBcInNvdXJjZVwiOkUoXCJlcnJvclwiLGUpO2JyZWFrO2Nhc2UgXCJpbWdcIjpjYXNlIFwiaW1hZ2VcIjpjYXNlIFwibGlua1wiOkUoXCJlcnJvclwiLGUpO0UoXCJsb2FkXCIsZSk7YnJlYWs7Y2FzZSBcImZvcm1cIjpFKFwicmVzZXRcIixlKTtFKFwic3VibWl0XCIsZSk7YnJlYWs7Y2FzZSBcImRldGFpbHNcIjpFKFwidG9nZ2xlXCIsZSk7YnJlYWs7Y2FzZSBcImlucHV0XCI6d2MoZSxtKTtFKFwiaW52YWxpZFwiLGUpO3NlKHAsXCJvbkNoYW5nZVwiKTticmVhaztjYXNlIFwic2VsZWN0XCI6ZS5fd3JhcHBlclN0YXRlPVxue3dhc011bHRpcGxlOiEhbS5tdWx0aXBsZX07RShcImludmFsaWRcIixlKTtzZShwLFwib25DaGFuZ2VcIik7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6Y2UoZSxtKSxFKFwiaW52YWxpZFwiLGUpLHNlKHAsXCJvbkNoYW5nZVwiKX1xZShoLG0pO2s9bnVsbDtmb3IoZiBpbiBtKW0uaGFzT3duUHJvcGVydHkoZikmJihsPW1bZl0sXCJjaGlsZHJlblwiPT09Zj9cInN0cmluZ1wiPT09dHlwZW9mIGw/ZS50ZXh0Q29udGVudCE9PWwmJihrPVtcImNoaWxkcmVuXCIsbF0pOlwibnVtYmVyXCI9PT10eXBlb2YgbCYmZS50ZXh0Q29udGVudCE9PVwiXCIrbCYmKGs9W1wiY2hpbGRyZW5cIixcIlwiK2xdKTpyYS5oYXNPd25Qcm9wZXJ0eShmKSYmbnVsbCE9bCYmc2UocCxmKSk7c3dpdGNoKGgpe2Nhc2UgXCJpbnB1dFwiOlJiKGUpO0FjKGUsbSwhMCk7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6UmIoZSk7ZWUoZSxtKTticmVhaztjYXNlIFwic2VsZWN0XCI6Y2FzZSBcIm9wdGlvblwiOmJyZWFrO2RlZmF1bHQ6XCJmdW5jdGlvblwiPT09dHlwZW9mIG0ub25DbGljayYmXG4oZS5vbmNsaWNrPXRlKX1mPWs7Zy51cGRhdGVRdWV1ZT1mO2c9bnVsbCE9PWY/ITA6ITE7ZyYma2goYil9ZWxzZXttPWI7cD1mO2U9ZztrPTk9PT1oLm5vZGVUeXBlP2g6aC5vd25lckRvY3VtZW50O2w9PT1mZS5odG1sJiYobD1nZShwKSk7bD09PWZlLmh0bWw/XCJzY3JpcHRcIj09PXA/KGU9ay5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLGUuaW5uZXJIVE1MPVwiPHNjcmlwdD5cXHgzYy9zY3JpcHQ+XCIsaz1lLnJlbW92ZUNoaWxkKGUuZmlyc3RDaGlsZCkpOlwic3RyaW5nXCI9PT10eXBlb2YgZS5pcz9rPWsuY3JlYXRlRWxlbWVudChwLHtpczplLmlzfSk6KGs9ay5jcmVhdGVFbGVtZW50KHApLFwic2VsZWN0XCI9PT1wJiYocD1rLGUubXVsdGlwbGU/cC5tdWx0aXBsZT0hMDplLnNpemUmJihwLnNpemU9ZS5zaXplKSkpOms9ay5jcmVhdGVFbGVtZW50TlMobCxwKTtlPWs7ZVtGYV09bTtlW0dhXT1nO2xoKGUsYiwhMSwhMSk7cD1lO2s9ZjttPWc7dmFyIHQ9aCxBPXJlKGssbSk7c3dpdGNoKGspe2Nhc2UgXCJpZnJhbWVcIjpjYXNlIFwib2JqZWN0XCI6RShcImxvYWRcIixcbnApO2g9bTticmVhaztjYXNlIFwidmlkZW9cIjpjYXNlIFwiYXVkaW9cIjpmb3IoaD0wO2g8YWIubGVuZ3RoO2grKylFKGFiW2hdLHApO2g9bTticmVhaztjYXNlIFwic291cmNlXCI6RShcImVycm9yXCIscCk7aD1tO2JyZWFrO2Nhc2UgXCJpbWdcIjpjYXNlIFwiaW1hZ2VcIjpjYXNlIFwibGlua1wiOkUoXCJlcnJvclwiLHApO0UoXCJsb2FkXCIscCk7aD1tO2JyZWFrO2Nhc2UgXCJmb3JtXCI6RShcInJlc2V0XCIscCk7RShcInN1Ym1pdFwiLHApO2g9bTticmVhaztjYXNlIFwiZGV0YWlsc1wiOkUoXCJ0b2dnbGVcIixwKTtoPW07YnJlYWs7Y2FzZSBcImlucHV0XCI6d2MocCxtKTtoPXZjKHAsbSk7RShcImludmFsaWRcIixwKTtzZSh0LFwib25DaGFuZ2VcIik7YnJlYWs7Y2FzZSBcIm9wdGlvblwiOmg9JGQocCxtKTticmVhaztjYXNlIFwic2VsZWN0XCI6cC5fd3JhcHBlclN0YXRlPXt3YXNNdWx0aXBsZTohIW0ubXVsdGlwbGV9O2g9bih7fSxtLHt2YWx1ZTp2b2lkIDB9KTtFKFwiaW52YWxpZFwiLHApO3NlKHQsXCJvbkNoYW5nZVwiKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpjZShwLFxubSk7aD1iZShwLG0pO0UoXCJpbnZhbGlkXCIscCk7c2UodCxcIm9uQ2hhbmdlXCIpO2JyZWFrO2RlZmF1bHQ6aD1tfXFlKGssaCk7bD12b2lkIDA7dmFyIHY9ayxSPXAsdT1oO2ZvcihsIGluIHUpaWYodS5oYXNPd25Qcm9wZXJ0eShsKSl7dmFyIHE9dVtsXTtcInN0eWxlXCI9PT1sP29lKFIscSk6XCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiPT09bD8ocT1xP3EuX19odG1sOnZvaWQgMCxudWxsIT1xJiZqZShSLHEpKTpcImNoaWxkcmVuXCI9PT1sP1wic3RyaW5nXCI9PT10eXBlb2YgcT8oXCJ0ZXh0YXJlYVwiIT09dnx8XCJcIiE9PXEpJiZrZShSLHEpOlwibnVtYmVyXCI9PT10eXBlb2YgcSYma2UoUixcIlwiK3EpOlwic3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nXCIhPT1sJiZcInN1cHByZXNzSHlkcmF0aW9uV2FybmluZ1wiIT09bCYmXCJhdXRvRm9jdXNcIiE9PWwmJihyYS5oYXNPd25Qcm9wZXJ0eShsKT9udWxsIT1xJiZzZSh0LGwpOm51bGwhPXEmJnRjKFIsbCxxLEEpKX1zd2l0Y2goayl7Y2FzZSBcImlucHV0XCI6UmIocCk7XG5BYyhwLG0sITEpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOlJiKHApO2VlKHAsbSk7YnJlYWs7Y2FzZSBcIm9wdGlvblwiOm51bGwhPW0udmFsdWUmJnAuc2V0QXR0cmlidXRlKFwidmFsdWVcIixcIlwiK3VjKG0udmFsdWUpKTticmVhaztjYXNlIFwic2VsZWN0XCI6aD1wO2gubXVsdGlwbGU9ISFtLm11bHRpcGxlO3A9bS52YWx1ZTtudWxsIT1wP2FlKGgsISFtLm11bHRpcGxlLHAsITEpOm51bGwhPW0uZGVmYXVsdFZhbHVlJiZhZShoLCEhbS5tdWx0aXBsZSxtLmRlZmF1bHRWYWx1ZSwhMCk7YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCI9PT10eXBlb2YgaC5vbkNsaWNrJiYocC5vbmNsaWNrPXRlKX0oZz13ZShmLGcpKSYma2goYik7Yi5zdGF0ZU5vZGU9ZX1udWxsIT09Yi5yZWYmJihiLmVmZmVjdFRhZ3w9MTI4KX1lbHNlIG51bGw9PT1iLnN0YXRlTm9kZT94KFwiMTY2XCIpOnZvaWQgMDticmVhaztjYXNlIDY6ZSYmbnVsbCE9Yi5zdGF0ZU5vZGU/b2goZSxiLGUubWVtb2l6ZWRQcm9wcyxnKTooXCJzdHJpbmdcIiE9PVxudHlwZW9mIGcmJihudWxsPT09Yi5zdGF0ZU5vZGU/eChcIjE2NlwiKTp2b2lkIDApLGU9SWYoSGYuY3VycmVudCksSWYoTi5jdXJyZW50KSxFZyhiKT8oZz1iLGY9Zy5zdGF0ZU5vZGUsZT1nLm1lbW9pemVkUHJvcHMsZltGYV09ZywoZz1mLm5vZGVWYWx1ZSE9PWUpJiZraChiKSk6KGY9YixnPSg5PT09ZS5ub2RlVHlwZT9lOmUub3duZXJEb2N1bWVudCkuY3JlYXRlVGV4dE5vZGUoZyksZ1tGYV09YixmLnN0YXRlTm9kZT1nKSk7YnJlYWs7Y2FzZSAxMTpicmVhaztjYXNlIDEzOmc9Yi5tZW1vaXplZFN0YXRlO2lmKDAhPT0oYi5lZmZlY3RUYWcmNjQpKXtiLmV4cGlyYXRpb25UaW1lPWY7VD1iO2JyZWFrIGF9Zz1udWxsIT09ZztmPW51bGwhPT1lJiZudWxsIT09ZS5tZW1vaXplZFN0YXRlO251bGwhPT1lJiYhZyYmZiYmKGU9ZS5jaGlsZC5zaWJsaW5nLG51bGwhPT1lJiYoaD1iLmZpcnN0RWZmZWN0LG51bGwhPT1oPyhiLmZpcnN0RWZmZWN0PWUsZS5uZXh0RWZmZWN0PWgpOihiLmZpcnN0RWZmZWN0PVxuYi5sYXN0RWZmZWN0PWUsZS5uZXh0RWZmZWN0PW51bGwpLGUuZWZmZWN0VGFnPTgpKTtpZihnfHxmKWIuZWZmZWN0VGFnfD00O2JyZWFrO2Nhc2UgNzpicmVhaztjYXNlIDg6YnJlYWs7Y2FzZSAxMjpicmVhaztjYXNlIDQ6S2YoYik7bWgoYik7YnJlYWs7Y2FzZSAxMDpaZyhiKTticmVhaztjYXNlIDk6YnJlYWs7Y2FzZSAxNDpicmVhaztjYXNlIDE3OkooYi50eXBlKSYmS2UoYik7YnJlYWs7Y2FzZSAxODpicmVhaztkZWZhdWx0OngoXCIxNTZcIil9VD1udWxsfWI9YTtpZigxPT09VXx8MSE9PWIuY2hpbGRFeHBpcmF0aW9uVGltZSl7Zz0wO2ZvcihmPWIuY2hpbGQ7bnVsbCE9PWY7KWU9Zi5leHBpcmF0aW9uVGltZSxoPWYuY2hpbGRFeHBpcmF0aW9uVGltZSxlPmcmJihnPWUpLGg+ZyYmKGc9aCksZj1mLnNpYmxpbmc7Yi5jaGlsZEV4cGlyYXRpb25UaW1lPWd9aWYobnVsbCE9PVQpcmV0dXJuIFQ7bnVsbCE9PWMmJjA9PT0oYy5lZmZlY3RUYWcmMTAyNCkmJihudWxsPT09Yy5maXJzdEVmZmVjdCYmXG4oYy5maXJzdEVmZmVjdD1hLmZpcnN0RWZmZWN0KSxudWxsIT09YS5sYXN0RWZmZWN0JiYobnVsbCE9PWMubGFzdEVmZmVjdCYmKGMubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWEuZmlyc3RFZmZlY3QpLGMubGFzdEVmZmVjdD1hLmxhc3RFZmZlY3QpLDE8YS5lZmZlY3RUYWcmJihudWxsIT09Yy5sYXN0RWZmZWN0P2MubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWE6Yy5maXJzdEVmZmVjdD1hLGMubGFzdEVmZmVjdD1hKSl9ZWxzZXthPUdoKGEsVSk7aWYobnVsbCE9PWEpcmV0dXJuIGEuZWZmZWN0VGFnJj0xMDIzLGE7bnVsbCE9PWMmJihjLmZpcnN0RWZmZWN0PWMubGFzdEVmZmVjdD1udWxsLGMuZWZmZWN0VGFnfD0xMDI0KX1pZihudWxsIT09ZClyZXR1cm4gZDtpZihudWxsIT09YylhPWM7ZWxzZSBicmVha31yZXR1cm4gbnVsbH1cbmZ1bmN0aW9uIGJpKGEpe3ZhciBiPVRnKGEuYWx0ZXJuYXRlLGEsVSk7YS5tZW1vaXplZFByb3BzPWEucGVuZGluZ1Byb3BzO251bGw9PT1iJiYoYj1haShhKSk7SWguY3VycmVudD1udWxsO3JldHVybiBifVxuZnVuY3Rpb24gY2koYSxiKXtLaD94KFwiMjQzXCIpOnZvaWQgMDtvZigpO0toPSEwO3ZhciBjPUhoLmN1cnJlbnQ7SGguY3VycmVudD1rZzt2YXIgZD1hLm5leHRFeHBpcmF0aW9uVGltZVRvV29ya09uO2lmKGQhPT1VfHxhIT09TGh8fG51bGw9PT1UKVNoKCksTGg9YSxVPWQsVD1YZShMaC5jdXJyZW50LG51bGwsVSksYS5wZW5kaW5nQ29tbWl0RXhwaXJhdGlvblRpbWU9MDt2YXIgZT0hMTtkb3t0cnl7aWYoYilmb3IoO251bGwhPT1UJiYhZGkoKTspVD1iaShUKTtlbHNlIGZvcig7bnVsbCE9PVQ7KVQ9YmkoVCl9Y2F0Y2godSl7aWYoWWc9WGc9V2c9bnVsbCxsZygpLG51bGw9PT1UKWU9ITAsRGgodSk7ZWxzZXtudWxsPT09VD94KFwiMjcxXCIpOnZvaWQgMDt2YXIgZj1ULGc9Zi5yZXR1cm47aWYobnVsbD09PWcpZT0hMCxEaCh1KTtlbHNle2E6e3ZhciBoPWEsbD1nLGs9ZixtPXU7Zz1VO2suZWZmZWN0VGFnfD0xMDI0O2suZmlyc3RFZmZlY3Q9ay5sYXN0RWZmZWN0PW51bGw7aWYobnVsbCE9PVxubSYmXCJvYmplY3RcIj09PXR5cGVvZiBtJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgbS50aGVuKXt2YXIgcD1tO209bDt2YXIgdD0tMSxBPS0xO2Rve2lmKDEzPT09bS50YWcpe3ZhciB2PW0uYWx0ZXJuYXRlO2lmKG51bGwhPT12JiYodj12Lm1lbW9pemVkU3RhdGUsbnVsbCE9PXYpKXtBPTEwKigxMDczNzQxODIyLXYudGltZWRPdXRBdCk7YnJlYWt9dj1tLnBlbmRpbmdQcm9wcy5tYXhEdXJhdGlvbjtpZihcIm51bWJlclwiPT09dHlwZW9mIHYpaWYoMD49dil0PTA7ZWxzZSBpZigtMT09PXR8fHY8dCl0PXZ9bT1tLnJldHVybn13aGlsZShudWxsIT09bSk7bT1sO2Rve2lmKHY9MTM9PT1tLnRhZyl2PXZvaWQgMD09PW0ubWVtb2l6ZWRQcm9wcy5mYWxsYmFjaz8hMTpudWxsPT09bS5tZW1vaXplZFN0YXRlO2lmKHYpe2w9bS51cGRhdGVRdWV1ZTtudWxsPT09bD8obD1uZXcgU2V0LGwuYWRkKHApLG0udXBkYXRlUXVldWU9bCk6bC5hZGQocCk7aWYoMD09PShtLm1vZGUmMSkpe20uZWZmZWN0VGFnfD1cbjY0O2suZWZmZWN0VGFnJj0tMTk1NzsxPT09ay50YWcmJihudWxsPT09ay5hbHRlcm5hdGU/ay50YWc9MTc6KGc9bmYoMTA3Mzc0MTgyMyksZy50YWc9c2YscGYoayxnKSkpO2suZXhwaXJhdGlvblRpbWU9MTA3Mzc0MTgyMzticmVhayBhfWs9aDtsPWc7dmFyIFI9ay5waW5nQ2FjaGU7bnVsbD09PVI/KFI9ay5waW5nQ2FjaGU9bmV3IEJoLHY9bmV3IFNldCxSLnNldChwLHYpKToodj1SLmdldChwKSx2b2lkIDA9PT12JiYodj1uZXcgU2V0LFIuc2V0KHAsdikpKTt2LmhhcyhsKXx8KHYuYWRkKGwpLGs9ZWkuYmluZChudWxsLGsscCxsKSxwLnRoZW4oayxrKSk7LTE9PT10P2g9MTA3Mzc0MTgyMzooLTE9PT1BJiYoQT0xMCooMTA3Mzc0MTgyMi1nZihoLGcpKS01RTMpLGg9QSt0KTswPD1oJiZNaDxoJiYoTWg9aCk7bS5lZmZlY3RUYWd8PTIwNDg7bS5leHBpcmF0aW9uVGltZT1nO2JyZWFrIGF9bT1tLnJldHVybn13aGlsZShudWxsIT09bSk7bT1FcnJvcigoaWMoay50eXBlKXx8XCJBIFJlYWN0IGNvbXBvbmVudFwiKStcblwiIHN1c3BlbmRlZCB3aGlsZSByZW5kZXJpbmcsIGJ1dCBubyBmYWxsYmFjayBVSSB3YXMgc3BlY2lmaWVkLlxcblxcbkFkZCBhIDxTdXNwZW5zZSBmYWxsYmFjaz0uLi4+IGNvbXBvbmVudCBoaWdoZXIgaW4gdGhlIHRyZWUgdG8gcHJvdmlkZSBhIGxvYWRpbmcgaW5kaWNhdG9yIG9yIHBsYWNlaG9sZGVyIHRvIGRpc3BsYXkuXCIramMoaykpfU5oPSEwO209amgobSxrKTtoPWw7ZG97c3dpdGNoKGgudGFnKXtjYXNlIDM6aC5lZmZlY3RUYWd8PTIwNDg7aC5leHBpcmF0aW9uVGltZT1nO2c9Q2goaCxtLGcpO2VoKGgsZyk7YnJlYWsgYTtjYXNlIDE6aWYodD1tLEE9aC50eXBlLGs9aC5zdGF0ZU5vZGUsMD09PShoLmVmZmVjdFRhZyY2NCkmJihcImZ1bmN0aW9uXCI9PT10eXBlb2YgQS5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3J8fG51bGwhPT1rJiZcImZ1bmN0aW9uXCI9PT10eXBlb2Ygay5jb21wb25lbnREaWRDYXRjaCYmKG51bGw9PT1GaHx8IUZoLmhhcyhrKSkpKXtoLmVmZmVjdFRhZ3w9MjA0ODtcbmguZXhwaXJhdGlvblRpbWU9ZztnPUVoKGgsdCxnKTtlaChoLGcpO2JyZWFrIGF9fWg9aC5yZXR1cm59d2hpbGUobnVsbCE9PWgpfVQ9YWkoZik7Y29udGludWV9fX1icmVha313aGlsZSgxKTtLaD0hMTtIaC5jdXJyZW50PWM7WWc9WGc9V2c9bnVsbDtsZygpO2lmKGUpTGg9bnVsbCxhLmZpbmlzaGVkV29yaz1udWxsO2Vsc2UgaWYobnVsbCE9PVQpYS5maW5pc2hlZFdvcms9bnVsbDtlbHNle2M9YS5jdXJyZW50LmFsdGVybmF0ZTtudWxsPT09Yz94KFwiMjgxXCIpOnZvaWQgMDtMaD1udWxsO2lmKE5oKXtlPWEubGF0ZXN0UGVuZGluZ1RpbWU7Zj1hLmxhdGVzdFN1c3BlbmRlZFRpbWU7Zz1hLmxhdGVzdFBpbmdlZFRpbWU7aWYoMCE9PWUmJmU8ZHx8MCE9PWYmJmY8ZHx8MCE9PWcmJmc8ZCl7ZmYoYSxkKTtmaShhLGMsZCxhLmV4cGlyYXRpb25UaW1lLC0xKTtyZXR1cm59aWYoIWEuZGlkRXJyb3ImJmIpe2EuZGlkRXJyb3I9ITA7ZD1hLm5leHRFeHBpcmF0aW9uVGltZVRvV29ya09uPWQ7XG5iPWEuZXhwaXJhdGlvblRpbWU9MTA3Mzc0MTgyMztmaShhLGMsZCxiLC0xKTtyZXR1cm59fWImJi0xIT09TWg/KGZmKGEsZCksYj0xMCooMTA3Mzc0MTgyMi1nZihhLGQpKSxiPE1oJiYoTWg9YiksYj0xMCooMTA3Mzc0MTgyMi1sZigpKSxiPU1oLWIsZmkoYSxjLGQsYS5leHBpcmF0aW9uVGltZSwwPmI/MDpiKSk6KGEucGVuZGluZ0NvbW1pdEV4cGlyYXRpb25UaW1lPWQsYS5maW5pc2hlZFdvcms9Yyl9fVxuZnVuY3Rpb24gc2goYSxiKXtmb3IodmFyIGM9YS5yZXR1cm47bnVsbCE9PWM7KXtzd2l0Y2goYy50YWcpe2Nhc2UgMTp2YXIgZD1jLnN0YXRlTm9kZTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy50eXBlLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcnx8XCJmdW5jdGlvblwiPT09dHlwZW9mIGQuY29tcG9uZW50RGlkQ2F0Y2gmJihudWxsPT09Rmh8fCFGaC5oYXMoZCkpKXthPWpoKGIsYSk7YT1FaChjLGEsMTA3Mzc0MTgyMyk7cGYoYyxhKTtxZihjLDEwNzM3NDE4MjMpO3JldHVybn1icmVhaztjYXNlIDM6YT1qaChiLGEpO2E9Q2goYyxhLDEwNzM3NDE4MjMpO3BmKGMsYSk7cWYoYywxMDczNzQxODIzKTtyZXR1cm59Yz1jLnJldHVybn0zPT09YS50YWcmJihjPWpoKGIsYSksYz1DaChhLGMsMTA3Mzc0MTgyMykscGYoYSxjKSxxZihhLDEwNzM3NDE4MjMpKX1cbmZ1bmN0aW9uIG1mKGEsYil7dmFyIGM9ci51bnN0YWJsZV9nZXRDdXJyZW50UHJpb3JpdHlMZXZlbCgpLGQ9dm9pZCAwO2lmKDA9PT0oYi5tb2RlJjEpKWQ9MTA3Mzc0MTgyMztlbHNlIGlmKEtoJiYhT2gpZD1VO2Vsc2V7c3dpdGNoKGMpe2Nhc2Ugci51bnN0YWJsZV9JbW1lZGlhdGVQcmlvcml0eTpkPTEwNzM3NDE4MjM7YnJlYWs7Y2FzZSByLnVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5OmQ9MTA3Mzc0MTgyMi0xMCooKCgxMDczNzQxODIyLWErMTUpLzEwfDApKzEpO2JyZWFrO2Nhc2Ugci51bnN0YWJsZV9Ob3JtYWxQcmlvcml0eTpkPTEwNzM3NDE4MjItMjUqKCgoMTA3Mzc0MTgyMi1hKzUwMCkvMjV8MCkrMSk7YnJlYWs7Y2FzZSByLnVuc3RhYmxlX0xvd1ByaW9yaXR5OmNhc2Ugci51bnN0YWJsZV9JZGxlUHJpb3JpdHk6ZD0xO2JyZWFrO2RlZmF1bHQ6eChcIjMxM1wiKX1udWxsIT09TGgmJmQ9PT1VJiYtLWR9Yz09PXIudW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHkmJlxuKDA9PT1naXx8ZDxnaSkmJihnaT1kKTtyZXR1cm4gZH1mdW5jdGlvbiBlaShhLGIsYyl7dmFyIGQ9YS5waW5nQ2FjaGU7bnVsbCE9PWQmJmQuZGVsZXRlKGIpO2lmKG51bGwhPT1MaCYmVT09PWMpTGg9bnVsbDtlbHNlIGlmKGI9YS5lYXJsaWVzdFN1c3BlbmRlZFRpbWUsZD1hLmxhdGVzdFN1c3BlbmRlZFRpbWUsMCE9PWImJmM8PWImJmM+PWQpe2EuZGlkRXJyb3I9ITE7Yj1hLmxhdGVzdFBpbmdlZFRpbWU7aWYoMD09PWJ8fGI+YylhLmxhdGVzdFBpbmdlZFRpbWU9YztkZihjLGEpO2M9YS5leHBpcmF0aW9uVGltZTswIT09YyYmWGgoYSxjKX19ZnVuY3Rpb24gQWgoYSxiKXt2YXIgYz1hLnN0YXRlTm9kZTtudWxsIT09YyYmYy5kZWxldGUoYik7Yj1sZigpO2I9bWYoYixhKTthPWhpKGEsYik7bnVsbCE9PWEmJihjZihhLGIpLGI9YS5leHBpcmF0aW9uVGltZSwwIT09YiYmWGgoYSxiKSl9XG5mdW5jdGlvbiBoaShhLGIpe2EuZXhwaXJhdGlvblRpbWU8YiYmKGEuZXhwaXJhdGlvblRpbWU9Yik7dmFyIGM9YS5hbHRlcm5hdGU7bnVsbCE9PWMmJmMuZXhwaXJhdGlvblRpbWU8YiYmKGMuZXhwaXJhdGlvblRpbWU9Yik7dmFyIGQ9YS5yZXR1cm4sZT1udWxsO2lmKG51bGw9PT1kJiYzPT09YS50YWcpZT1hLnN0YXRlTm9kZTtlbHNlIGZvcig7bnVsbCE9PWQ7KXtjPWQuYWx0ZXJuYXRlO2QuY2hpbGRFeHBpcmF0aW9uVGltZTxiJiYoZC5jaGlsZEV4cGlyYXRpb25UaW1lPWIpO251bGwhPT1jJiZjLmNoaWxkRXhwaXJhdGlvblRpbWU8YiYmKGMuY2hpbGRFeHBpcmF0aW9uVGltZT1iKTtpZihudWxsPT09ZC5yZXR1cm4mJjM9PT1kLnRhZyl7ZT1kLnN0YXRlTm9kZTticmVha31kPWQucmV0dXJufXJldHVybiBlfVxuZnVuY3Rpb24gcWYoYSxiKXthPWhpKGEsYik7bnVsbCE9PWEmJighS2gmJjAhPT1VJiZiPlUmJlNoKCksY2YoYSxiKSxLaCYmIU9oJiZMaD09PWF8fFhoKGEsYS5leHBpcmF0aW9uVGltZSksaWk+amkmJihpaT0wLHgoXCIxODVcIikpKX1mdW5jdGlvbiBraShhLGIsYyxkLGUpe3JldHVybiByLnVuc3RhYmxlX3J1bldpdGhQcmlvcml0eShyLnVuc3RhYmxlX0ltbWVkaWF0ZVByaW9yaXR5LGZ1bmN0aW9uKCl7cmV0dXJuIGEoYixjLGQsZSl9KX12YXIgbGk9bnVsbCxZPW51bGwsbWk9MCxuaT12b2lkIDAsVz0hMSxvaT1udWxsLFo9MCxnaT0wLHBpPSExLHFpPW51bGwsWD0hMSxyaT0hMSxzaT1udWxsLHRpPXIudW5zdGFibGVfbm93KCksdWk9MTA3Mzc0MTgyMi0odGkvMTB8MCksdmk9dWksamk9NTAsaWk9MCx3aT1udWxsO2Z1bmN0aW9uIHhpKCl7dWk9MTA3Mzc0MTgyMi0oKHIudW5zdGFibGVfbm93KCktdGkpLzEwfDApfVxuZnVuY3Rpb24geWkoYSxiKXtpZigwIT09bWkpe2lmKGI8bWkpcmV0dXJuO251bGwhPT1uaSYmci51bnN0YWJsZV9jYW5jZWxDYWxsYmFjayhuaSl9bWk9YjthPXIudW5zdGFibGVfbm93KCktdGk7bmk9ci51bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrKHppLHt0aW1lb3V0OjEwKigxMDczNzQxODIyLWIpLWF9KX1mdW5jdGlvbiBmaShhLGIsYyxkLGUpe2EuZXhwaXJhdGlvblRpbWU9ZDswIT09ZXx8ZGkoKT8wPGUmJihhLnRpbWVvdXRIYW5kbGU9eWUoQWkuYmluZChudWxsLGEsYixjKSxlKSk6KGEucGVuZGluZ0NvbW1pdEV4cGlyYXRpb25UaW1lPWMsYS5maW5pc2hlZFdvcms9Yil9ZnVuY3Rpb24gQWkoYSxiLGMpe2EucGVuZGluZ0NvbW1pdEV4cGlyYXRpb25UaW1lPWM7YS5maW5pc2hlZFdvcms9Yjt4aSgpO3ZpPXVpO0JpKGEsYyl9ZnVuY3Rpb24gJGgoYSxiKXthLmV4cGlyYXRpb25UaW1lPWI7YS5maW5pc2hlZFdvcms9bnVsbH1cbmZ1bmN0aW9uIGxmKCl7aWYoVylyZXR1cm4gdmk7Q2koKTtpZigwPT09Wnx8MT09PVopeGkoKSx2aT11aTtyZXR1cm4gdml9ZnVuY3Rpb24gWGgoYSxiKXtudWxsPT09YS5uZXh0U2NoZWR1bGVkUm9vdD8oYS5leHBpcmF0aW9uVGltZT1iLG51bGw9PT1ZPyhsaT1ZPWEsYS5uZXh0U2NoZWR1bGVkUm9vdD1hKTooWT1ZLm5leHRTY2hlZHVsZWRSb290PWEsWS5uZXh0U2NoZWR1bGVkUm9vdD1saSkpOmI+YS5leHBpcmF0aW9uVGltZSYmKGEuZXhwaXJhdGlvblRpbWU9Yik7V3x8KFg/cmkmJihvaT1hLFo9MTA3Mzc0MTgyMyxEaShhLDEwNzM3NDE4MjMsITEpKToxMDczNzQxODIzPT09Yj9ZaCgxMDczNzQxODIzLCExKTp5aShhLGIpKX1cbmZ1bmN0aW9uIENpKCl7dmFyIGE9MCxiPW51bGw7aWYobnVsbCE9PVkpZm9yKHZhciBjPVksZD1saTtudWxsIT09ZDspe3ZhciBlPWQuZXhwaXJhdGlvblRpbWU7aWYoMD09PWUpe251bGw9PT1jfHxudWxsPT09WT94KFwiMjQ0XCIpOnZvaWQgMDtpZihkPT09ZC5uZXh0U2NoZWR1bGVkUm9vdCl7bGk9WT1kLm5leHRTY2hlZHVsZWRSb290PW51bGw7YnJlYWt9ZWxzZSBpZihkPT09bGkpbGk9ZT1kLm5leHRTY2hlZHVsZWRSb290LFkubmV4dFNjaGVkdWxlZFJvb3Q9ZSxkLm5leHRTY2hlZHVsZWRSb290PW51bGw7ZWxzZSBpZihkPT09WSl7WT1jO1kubmV4dFNjaGVkdWxlZFJvb3Q9bGk7ZC5uZXh0U2NoZWR1bGVkUm9vdD1udWxsO2JyZWFrfWVsc2UgYy5uZXh0U2NoZWR1bGVkUm9vdD1kLm5leHRTY2hlZHVsZWRSb290LGQubmV4dFNjaGVkdWxlZFJvb3Q9bnVsbDtkPWMubmV4dFNjaGVkdWxlZFJvb3R9ZWxzZXtlPmEmJihhPWUsYj1kKTtpZihkPT09WSlicmVhaztpZigxMDczNzQxODIzPT09XG5hKWJyZWFrO2M9ZDtkPWQubmV4dFNjaGVkdWxlZFJvb3R9fW9pPWI7Wj1hfXZhciBFaT0hMTtmdW5jdGlvbiBkaSgpe3JldHVybiBFaT8hMDpyLnVuc3RhYmxlX3Nob3VsZFlpZWxkKCk/RWk9ITA6ITF9ZnVuY3Rpb24gemkoKXt0cnl7aWYoIWRpKCkmJm51bGwhPT1saSl7eGkoKTt2YXIgYT1saTtkb3t2YXIgYj1hLmV4cGlyYXRpb25UaW1lOzAhPT1iJiZ1aTw9YiYmKGEubmV4dEV4cGlyYXRpb25UaW1lVG9Xb3JrT249dWkpO2E9YS5uZXh0U2NoZWR1bGVkUm9vdH13aGlsZShhIT09bGkpfVloKDAsITApfWZpbmFsbHl7RWk9ITF9fVxuZnVuY3Rpb24gWWgoYSxiKXtDaSgpO2lmKGIpZm9yKHhpKCksdmk9dWk7bnVsbCE9PW9pJiYwIT09WiYmYTw9WiYmIShFaSYmdWk+Wik7KURpKG9pLFosdWk+WiksQ2koKSx4aSgpLHZpPXVpO2Vsc2UgZm9yKDtudWxsIT09b2kmJjAhPT1aJiZhPD1aOylEaShvaSxaLCExKSxDaSgpO2ImJihtaT0wLG5pPW51bGwpOzAhPT1aJiZ5aShvaSxaKTtpaT0wO3dpPW51bGw7aWYobnVsbCE9PXNpKWZvcihhPXNpLHNpPW51bGwsYj0wO2I8YS5sZW5ndGg7YisrKXt2YXIgYz1hW2JdO3RyeXtjLl9vbkNvbXBsZXRlKCl9Y2F0Y2goZCl7cGl8fChwaT0hMCxxaT1kKX19aWYocGkpdGhyb3cgYT1xaSxxaT1udWxsLHBpPSExLGE7fWZ1bmN0aW9uIEJpKGEsYil7Vz94KFwiMjUzXCIpOnZvaWQgMDtvaT1hO1o9YjtEaShhLGIsITEpO1loKDEwNzM3NDE4MjMsITEpfVxuZnVuY3Rpb24gRGkoYSxiLGMpe1c/eChcIjI0NVwiKTp2b2lkIDA7Vz0hMDtpZihjKXt2YXIgZD1hLmZpbmlzaGVkV29yaztudWxsIT09ZD9GaShhLGQsYik6KGEuZmluaXNoZWRXb3JrPW51bGwsZD1hLnRpbWVvdXRIYW5kbGUsLTEhPT1kJiYoYS50aW1lb3V0SGFuZGxlPS0xLHplKGQpKSxjaShhLGMpLGQ9YS5maW5pc2hlZFdvcmssbnVsbCE9PWQmJihkaSgpP2EuZmluaXNoZWRXb3JrPWQ6RmkoYSxkLGIpKSl9ZWxzZSBkPWEuZmluaXNoZWRXb3JrLG51bGwhPT1kP0ZpKGEsZCxiKTooYS5maW5pc2hlZFdvcms9bnVsbCxkPWEudGltZW91dEhhbmRsZSwtMSE9PWQmJihhLnRpbWVvdXRIYW5kbGU9LTEsemUoZCkpLGNpKGEsYyksZD1hLmZpbmlzaGVkV29yayxudWxsIT09ZCYmRmkoYSxkLGIpKTtXPSExfVxuZnVuY3Rpb24gRmkoYSxiLGMpe3ZhciBkPWEuZmlyc3RCYXRjaDtpZihudWxsIT09ZCYmZC5fZXhwaXJhdGlvblRpbWU+PWMmJihudWxsPT09c2k/c2k9W2RdOnNpLnB1c2goZCksZC5fZGVmZXIpKXthLmZpbmlzaGVkV29yaz1iO2EuZXhwaXJhdGlvblRpbWU9MDtyZXR1cm59YS5maW5pc2hlZFdvcms9bnVsbDthPT09d2k/aWkrKzood2k9YSxpaT0wKTtyLnVuc3RhYmxlX3J1bldpdGhQcmlvcml0eShyLnVuc3RhYmxlX0ltbWVkaWF0ZVByaW9yaXR5LGZ1bmN0aW9uKCl7WmgoYSxiKX0pfWZ1bmN0aW9uIERoKGEpe251bGw9PT1vaT94KFwiMjQ2XCIpOnZvaWQgMDtvaS5leHBpcmF0aW9uVGltZT0wO3BpfHwocGk9ITAscWk9YSl9ZnVuY3Rpb24gR2koYSxiKXt2YXIgYz1YO1g9ITA7dHJ5e3JldHVybiBhKGIpfWZpbmFsbHl7KFg9Yyl8fFd8fFloKDEwNzM3NDE4MjMsITEpfX1cbmZ1bmN0aW9uIEhpKGEsYil7aWYoWCYmIXJpKXtyaT0hMDt0cnl7cmV0dXJuIGEoYil9ZmluYWxseXtyaT0hMX19cmV0dXJuIGEoYil9ZnVuY3Rpb24gSWkoYSxiLGMpe1h8fFd8fDA9PT1naXx8KFloKGdpLCExKSxnaT0wKTt2YXIgZD1YO1g9ITA7dHJ5e3JldHVybiByLnVuc3RhYmxlX3J1bldpdGhQcmlvcml0eShyLnVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5LGZ1bmN0aW9uKCl7cmV0dXJuIGEoYixjKX0pfWZpbmFsbHl7KFg9ZCl8fFd8fFloKDEwNzM3NDE4MjMsITEpfX1cbmZ1bmN0aW9uIEppKGEsYixjLGQsZSl7dmFyIGY9Yi5jdXJyZW50O2E6aWYoYyl7Yz1jLl9yZWFjdEludGVybmFsRmliZXI7Yjp7Mj09PWVkKGMpJiYxPT09Yy50YWc/dm9pZCAwOngoXCIxNzBcIik7dmFyIGc9Yztkb3tzd2l0Y2goZy50YWcpe2Nhc2UgMzpnPWcuc3RhdGVOb2RlLmNvbnRleHQ7YnJlYWsgYjtjYXNlIDE6aWYoSihnLnR5cGUpKXtnPWcuc3RhdGVOb2RlLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0O2JyZWFrIGJ9fWc9Zy5yZXR1cm59d2hpbGUobnVsbCE9PWcpO3goXCIxNzFcIik7Zz12b2lkIDB9aWYoMT09PWMudGFnKXt2YXIgaD1jLnR5cGU7aWYoSihoKSl7Yz1OZShjLGgsZyk7YnJlYWsgYX19Yz1nfWVsc2UgYz1IZTtudWxsPT09Yi5jb250ZXh0P2IuY29udGV4dD1jOmIucGVuZGluZ0NvbnRleHQ9YztiPWU7ZT1uZihkKTtlLnBheWxvYWQ9e2VsZW1lbnQ6YX07Yj12b2lkIDA9PT1iP251bGw6YjtudWxsIT09YiYmKGUuY2FsbGJhY2s9Yik7XG5vZigpO3BmKGYsZSk7cWYoZixkKTtyZXR1cm4gZH1mdW5jdGlvbiBLaShhLGIsYyxkKXt2YXIgZT1iLmN1cnJlbnQsZj1sZigpO2U9bWYoZixlKTtyZXR1cm4gSmkoYSxiLGMsZSxkKX1mdW5jdGlvbiBMaShhKXthPWEuY3VycmVudDtpZighYS5jaGlsZClyZXR1cm4gbnVsbDtzd2l0Y2goYS5jaGlsZC50YWcpe2Nhc2UgNTpyZXR1cm4gYS5jaGlsZC5zdGF0ZU5vZGU7ZGVmYXVsdDpyZXR1cm4gYS5jaGlsZC5zdGF0ZU5vZGV9fWZ1bmN0aW9uIE1pKGEsYixjKXt2YXIgZD0zPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1szXT9hcmd1bWVudHNbM106bnVsbDtyZXR1cm57JCR0eXBlb2Y6V2Isa2V5Om51bGw9PWQ/bnVsbDpcIlwiK2QsY2hpbGRyZW46YSxjb250YWluZXJJbmZvOmIsaW1wbGVtZW50YXRpb246Y319XG5BYj1mdW5jdGlvbihhLGIsYyl7c3dpdGNoKGIpe2Nhc2UgXCJpbnB1dFwiOnljKGEsYyk7Yj1jLm5hbWU7aWYoXCJyYWRpb1wiPT09Yy50eXBlJiZudWxsIT1iKXtmb3IoYz1hO2MucGFyZW50Tm9kZTspYz1jLnBhcmVudE5vZGU7Yz1jLnF1ZXJ5U2VsZWN0b3JBbGwoXCJpbnB1dFtuYW1lPVwiK0pTT04uc3RyaW5naWZ5KFwiXCIrYikrJ11bdHlwZT1cInJhZGlvXCJdJyk7Zm9yKGI9MDtiPGMubGVuZ3RoO2IrKyl7dmFyIGQ9Y1tiXTtpZihkIT09YSYmZC5mb3JtPT09YS5mb3JtKXt2YXIgZT1LYShkKTtlP3ZvaWQgMDp4KFwiOTBcIik7U2IoZCk7eWMoZCxlKX19fWJyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmRlKGEsYyk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmI9Yy52YWx1ZSxudWxsIT1iJiZhZShhLCEhYy5tdWx0aXBsZSxiLCExKX19O1xuZnVuY3Rpb24gTmkoYSl7dmFyIGI9MTA3Mzc0MTgyMi0yNSooKCgxMDczNzQxODIyLWxmKCkrNTAwKS8yNXwwKSsxKTtiPj1KaCYmKGI9SmgtMSk7dGhpcy5fZXhwaXJhdGlvblRpbWU9Smg9Yjt0aGlzLl9yb290PWE7dGhpcy5fY2FsbGJhY2tzPXRoaXMuX25leHQ9bnVsbDt0aGlzLl9oYXNDaGlsZHJlbj10aGlzLl9kaWRDb21wbGV0ZT0hMTt0aGlzLl9jaGlsZHJlbj1udWxsO3RoaXMuX2RlZmVyPSEwfU5pLnByb3RvdHlwZS5yZW5kZXI9ZnVuY3Rpb24oYSl7dGhpcy5fZGVmZXI/dm9pZCAwOngoXCIyNTBcIik7dGhpcy5faGFzQ2hpbGRyZW49ITA7dGhpcy5fY2hpbGRyZW49YTt2YXIgYj10aGlzLl9yb290Ll9pbnRlcm5hbFJvb3QsYz10aGlzLl9leHBpcmF0aW9uVGltZSxkPW5ldyBPaTtKaShhLGIsbnVsbCxjLGQuX29uQ29tbWl0KTtyZXR1cm4gZH07XG5OaS5wcm90b3R5cGUudGhlbj1mdW5jdGlvbihhKXtpZih0aGlzLl9kaWRDb21wbGV0ZSlhKCk7ZWxzZXt2YXIgYj10aGlzLl9jYWxsYmFja3M7bnVsbD09PWImJihiPXRoaXMuX2NhbGxiYWNrcz1bXSk7Yi5wdXNoKGEpfX07XG5OaS5wcm90b3R5cGUuY29tbWl0PWZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5fcm9vdC5faW50ZXJuYWxSb290LGI9YS5maXJzdEJhdGNoO3RoaXMuX2RlZmVyJiZudWxsIT09Yj92b2lkIDA6eChcIjI1MVwiKTtpZih0aGlzLl9oYXNDaGlsZHJlbil7dmFyIGM9dGhpcy5fZXhwaXJhdGlvblRpbWU7aWYoYiE9PXRoaXMpe3RoaXMuX2hhc0NoaWxkcmVuJiYoYz10aGlzLl9leHBpcmF0aW9uVGltZT1iLl9leHBpcmF0aW9uVGltZSx0aGlzLnJlbmRlcih0aGlzLl9jaGlsZHJlbikpO2Zvcih2YXIgZD1udWxsLGU9YjtlIT09dGhpczspZD1lLGU9ZS5fbmV4dDtudWxsPT09ZD94KFwiMjUxXCIpOnZvaWQgMDtkLl9uZXh0PWUuX25leHQ7dGhpcy5fbmV4dD1iO2EuZmlyc3RCYXRjaD10aGlzfXRoaXMuX2RlZmVyPSExO0JpKGEsYyk7Yj10aGlzLl9uZXh0O3RoaXMuX25leHQ9bnVsbDtiPWEuZmlyc3RCYXRjaD1iO251bGwhPT1iJiZiLl9oYXNDaGlsZHJlbiYmYi5yZW5kZXIoYi5fY2hpbGRyZW4pfWVsc2UgdGhpcy5fbmV4dD1cbm51bGwsdGhpcy5fZGVmZXI9ITF9O05pLnByb3RvdHlwZS5fb25Db21wbGV0ZT1mdW5jdGlvbigpe2lmKCF0aGlzLl9kaWRDb21wbGV0ZSl7dGhpcy5fZGlkQ29tcGxldGU9ITA7dmFyIGE9dGhpcy5fY2FsbGJhY2tzO2lmKG51bGwhPT1hKWZvcih2YXIgYj0wO2I8YS5sZW5ndGg7YisrKSgwLGFbYl0pKCl9fTtmdW5jdGlvbiBPaSgpe3RoaXMuX2NhbGxiYWNrcz1udWxsO3RoaXMuX2RpZENvbW1pdD0hMTt0aGlzLl9vbkNvbW1pdD10aGlzLl9vbkNvbW1pdC5iaW5kKHRoaXMpfU9pLnByb3RvdHlwZS50aGVuPWZ1bmN0aW9uKGEpe2lmKHRoaXMuX2RpZENvbW1pdClhKCk7ZWxzZXt2YXIgYj10aGlzLl9jYWxsYmFja3M7bnVsbD09PWImJihiPXRoaXMuX2NhbGxiYWNrcz1bXSk7Yi5wdXNoKGEpfX07XG5PaS5wcm90b3R5cGUuX29uQ29tbWl0PWZ1bmN0aW9uKCl7aWYoIXRoaXMuX2RpZENvbW1pdCl7dGhpcy5fZGlkQ29tbWl0PSEwO3ZhciBhPXRoaXMuX2NhbGxiYWNrcztpZihudWxsIT09YSlmb3IodmFyIGI9MDtiPGEubGVuZ3RoO2IrKyl7dmFyIGM9YVtiXTtcImZ1bmN0aW9uXCIhPT10eXBlb2YgYz94KFwiMTkxXCIsYyk6dm9pZCAwO2MoKX19fTtcbmZ1bmN0aW9uIFBpKGEsYixjKXtiPUsoMyxudWxsLG51bGwsYj8zOjApO2E9e2N1cnJlbnQ6Yixjb250YWluZXJJbmZvOmEscGVuZGluZ0NoaWxkcmVuOm51bGwscGluZ0NhY2hlOm51bGwsZWFybGllc3RQZW5kaW5nVGltZTowLGxhdGVzdFBlbmRpbmdUaW1lOjAsZWFybGllc3RTdXNwZW5kZWRUaW1lOjAsbGF0ZXN0U3VzcGVuZGVkVGltZTowLGxhdGVzdFBpbmdlZFRpbWU6MCxkaWRFcnJvcjohMSxwZW5kaW5nQ29tbWl0RXhwaXJhdGlvblRpbWU6MCxmaW5pc2hlZFdvcms6bnVsbCx0aW1lb3V0SGFuZGxlOi0xLGNvbnRleHQ6bnVsbCxwZW5kaW5nQ29udGV4dDpudWxsLGh5ZHJhdGU6YyxuZXh0RXhwaXJhdGlvblRpbWVUb1dvcmtPbjowLGV4cGlyYXRpb25UaW1lOjAsZmlyc3RCYXRjaDpudWxsLG5leHRTY2hlZHVsZWRSb290Om51bGx9O3RoaXMuX2ludGVybmFsUm9vdD1iLnN0YXRlTm9kZT1hfVxuUGkucHJvdG90eXBlLnJlbmRlcj1mdW5jdGlvbihhLGIpe3ZhciBjPXRoaXMuX2ludGVybmFsUm9vdCxkPW5ldyBPaTtiPXZvaWQgMD09PWI/bnVsbDpiO251bGwhPT1iJiZkLnRoZW4oYik7S2koYSxjLG51bGwsZC5fb25Db21taXQpO3JldHVybiBkfTtQaS5wcm90b3R5cGUudW5tb3VudD1mdW5jdGlvbihhKXt2YXIgYj10aGlzLl9pbnRlcm5hbFJvb3QsYz1uZXcgT2k7YT12b2lkIDA9PT1hP251bGw6YTtudWxsIT09YSYmYy50aGVuKGEpO0tpKG51bGwsYixudWxsLGMuX29uQ29tbWl0KTtyZXR1cm4gY307UGkucHJvdG90eXBlLmxlZ2FjeV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lcj1mdW5jdGlvbihhLGIsYyl7dmFyIGQ9dGhpcy5faW50ZXJuYWxSb290LGU9bmV3IE9pO2M9dm9pZCAwPT09Yz9udWxsOmM7bnVsbCE9PWMmJmUudGhlbihjKTtLaShiLGQsYSxlLl9vbkNvbW1pdCk7cmV0dXJuIGV9O1xuUGkucHJvdG90eXBlLmNyZWF0ZUJhdGNoPWZ1bmN0aW9uKCl7dmFyIGE9bmV3IE5pKHRoaXMpLGI9YS5fZXhwaXJhdGlvblRpbWUsYz10aGlzLl9pbnRlcm5hbFJvb3QsZD1jLmZpcnN0QmF0Y2g7aWYobnVsbD09PWQpYy5maXJzdEJhdGNoPWEsYS5fbmV4dD1udWxsO2Vsc2V7Zm9yKGM9bnVsbDtudWxsIT09ZCYmZC5fZXhwaXJhdGlvblRpbWU+PWI7KWM9ZCxkPWQuX25leHQ7YS5fbmV4dD1kO251bGwhPT1jJiYoYy5fbmV4dD1hKX1yZXR1cm4gYX07ZnVuY3Rpb24gUWkoYSl7cmV0dXJuISghYXx8MSE9PWEubm9kZVR5cGUmJjkhPT1hLm5vZGVUeXBlJiYxMSE9PWEubm9kZVR5cGUmJig4IT09YS5ub2RlVHlwZXx8XCIgcmVhY3QtbW91bnQtcG9pbnQtdW5zdGFibGUgXCIhPT1hLm5vZGVWYWx1ZSkpfUdiPUdpO0hiPUlpO0liPWZ1bmN0aW9uKCl7V3x8MD09PWdpfHwoWWgoZ2ksITEpLGdpPTApfTtcbmZ1bmN0aW9uIFJpKGEsYil7Ynx8KGI9YT85PT09YS5ub2RlVHlwZT9hLmRvY3VtZW50RWxlbWVudDphLmZpcnN0Q2hpbGQ6bnVsbCxiPSEoIWJ8fDEhPT1iLm5vZGVUeXBlfHwhYi5oYXNBdHRyaWJ1dGUoXCJkYXRhLXJlYWN0cm9vdFwiKSkpO2lmKCFiKWZvcih2YXIgYztjPWEubGFzdENoaWxkOylhLnJlbW92ZUNoaWxkKGMpO3JldHVybiBuZXcgUGkoYSwhMSxiKX1cbmZ1bmN0aW9uIFNpKGEsYixjLGQsZSl7dmFyIGY9Yy5fcmVhY3RSb290Q29udGFpbmVyO2lmKGYpe2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlKXt2YXIgZz1lO2U9ZnVuY3Rpb24oKXt2YXIgYT1MaShmLl9pbnRlcm5hbFJvb3QpO2cuY2FsbChhKX19bnVsbCE9YT9mLmxlZ2FjeV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lcihhLGIsZSk6Zi5yZW5kZXIoYixlKX1lbHNle2Y9Yy5fcmVhY3RSb290Q29udGFpbmVyPVJpKGMsZCk7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGUpe3ZhciBoPWU7ZT1mdW5jdGlvbigpe3ZhciBhPUxpKGYuX2ludGVybmFsUm9vdCk7aC5jYWxsKGEpfX1IaShmdW5jdGlvbigpe251bGwhPWE/Zi5sZWdhY3lfcmVuZGVyU3VidHJlZUludG9Db250YWluZXIoYSxiLGUpOmYucmVuZGVyKGIsZSl9KX1yZXR1cm4gTGkoZi5faW50ZXJuYWxSb290KX1cbmZ1bmN0aW9uIFRpKGEsYil7dmFyIGM9Mjxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbMl0/YXJndW1lbnRzWzJdOm51bGw7UWkoYik/dm9pZCAwOngoXCIyMDBcIik7cmV0dXJuIE1pKGEsYixudWxsLGMpfVxudmFyIFZpPXtjcmVhdGVQb3J0YWw6VGksZmluZERPTU5vZGU6ZnVuY3Rpb24oYSl7aWYobnVsbD09YSlyZXR1cm4gbnVsbDtpZigxPT09YS5ub2RlVHlwZSlyZXR1cm4gYTt2YXIgYj1hLl9yZWFjdEludGVybmFsRmliZXI7dm9pZCAwPT09YiYmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhLnJlbmRlcj94KFwiMTg4XCIpOngoXCIyNjhcIixPYmplY3Qua2V5cyhhKSkpO2E9aGQoYik7YT1udWxsPT09YT9udWxsOmEuc3RhdGVOb2RlO3JldHVybiBhfSxoeWRyYXRlOmZ1bmN0aW9uKGEsYixjKXtRaShiKT92b2lkIDA6eChcIjIwMFwiKTtyZXR1cm4gU2kobnVsbCxhLGIsITAsYyl9LHJlbmRlcjpmdW5jdGlvbihhLGIsYyl7UWkoYik/dm9pZCAwOngoXCIyMDBcIik7cmV0dXJuIFNpKG51bGwsYSxiLCExLGMpfSx1bnN0YWJsZV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lcjpmdW5jdGlvbihhLGIsYyxkKXtRaShjKT92b2lkIDA6eChcIjIwMFwiKTtudWxsPT1hfHx2b2lkIDA9PT1hLl9yZWFjdEludGVybmFsRmliZXI/XG54KFwiMzhcIik6dm9pZCAwO3JldHVybiBTaShhLGIsYywhMSxkKX0sdW5tb3VudENvbXBvbmVudEF0Tm9kZTpmdW5jdGlvbihhKXtRaShhKT92b2lkIDA6eChcIjQwXCIpO3JldHVybiBhLl9yZWFjdFJvb3RDb250YWluZXI/KEhpKGZ1bmN0aW9uKCl7U2kobnVsbCxudWxsLGEsITEsZnVuY3Rpb24oKXthLl9yZWFjdFJvb3RDb250YWluZXI9bnVsbH0pfSksITApOiExfSx1bnN0YWJsZV9jcmVhdGVQb3J0YWw6ZnVuY3Rpb24oKXtyZXR1cm4gVGkuYXBwbHkodm9pZCAwLGFyZ3VtZW50cyl9LHVuc3RhYmxlX2JhdGNoZWRVcGRhdGVzOkdpLHVuc3RhYmxlX2ludGVyYWN0aXZlVXBkYXRlczpJaSxmbHVzaFN5bmM6ZnVuY3Rpb24oYSxiKXtXP3goXCIxODdcIik6dm9pZCAwO3ZhciBjPVg7WD0hMDt0cnl7cmV0dXJuIGtpKGEsYil9ZmluYWxseXtYPWMsWWgoMTA3Mzc0MTgyMywhMSl9fSx1bnN0YWJsZV9jcmVhdGVSb290OlVpLHVuc3RhYmxlX2ZsdXNoQ29udHJvbGxlZDpmdW5jdGlvbihhKXt2YXIgYj1cblg7WD0hMDt0cnl7a2koYSl9ZmluYWxseXsoWD1iKXx8V3x8WWgoMTA3Mzc0MTgyMywhMSl9fSxfX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRDp7RXZlbnRzOltJYSxKYSxLYSxCYS5pbmplY3RFdmVudFBsdWdpbnNCeU5hbWUscGEsUWEsZnVuY3Rpb24oYSl7eWEoYSxQYSl9LEViLEZiLERkLERhXX19O2Z1bmN0aW9uIFVpKGEsYil7UWkoYSk/dm9pZCAwOngoXCIyOTlcIixcInVuc3RhYmxlX2NyZWF0ZVJvb3RcIik7cmV0dXJuIG5ldyBQaShhLCEwLG51bGwhPWImJiEwPT09Yi5oeWRyYXRlKX1cbihmdW5jdGlvbihhKXt2YXIgYj1hLmZpbmRGaWJlckJ5SG9zdEluc3RhbmNlO3JldHVybiBUZShuKHt9LGEse292ZXJyaWRlUHJvcHM6bnVsbCxjdXJyZW50RGlzcGF0Y2hlclJlZjpUYi5SZWFjdEN1cnJlbnREaXNwYXRjaGVyLGZpbmRIb3N0SW5zdGFuY2VCeUZpYmVyOmZ1bmN0aW9uKGEpe2E9aGQoYSk7cmV0dXJuIG51bGw9PT1hP251bGw6YS5zdGF0ZU5vZGV9LGZpbmRGaWJlckJ5SG9zdEluc3RhbmNlOmZ1bmN0aW9uKGEpe3JldHVybiBiP2IoYSk6bnVsbH19KSl9KSh7ZmluZEZpYmVyQnlIb3N0SW5zdGFuY2U6SGEsYnVuZGxlVHlwZTowLHZlcnNpb246XCIxNi44LjZcIixyZW5kZXJlclBhY2thZ2VOYW1lOlwicmVhY3QtZG9tXCJ9KTt2YXIgV2k9e2RlZmF1bHQ6Vml9LFhpPVdpJiZWaXx8V2k7bW9kdWxlLmV4cG9ydHM9WGkuZGVmYXVsdHx8WGk7XG4iLCIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvc2NoZWR1bGVyLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3NjaGVkdWxlci5kZXZlbG9wbWVudC5qcycpO1xufVxuIiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYwLjEzLjZcbiAqIHNjaGVkdWxlci5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cyxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KTt2YXIgZD1udWxsLGU9ITEsZz0zLGs9LTEsbD0tMSxtPSExLG49ITE7ZnVuY3Rpb24gcCgpe2lmKCFtKXt2YXIgYT1kLmV4cGlyYXRpb25UaW1lO24/cSgpOm49ITA7cih0LGEpfX1cbmZ1bmN0aW9uIHUoKXt2YXIgYT1kLGI9ZC5uZXh0O2lmKGQ9PT1iKWQ9bnVsbDtlbHNle3ZhciBjPWQucHJldmlvdXM7ZD1jLm5leHQ9YjtiLnByZXZpb3VzPWN9YS5uZXh0PWEucHJldmlvdXM9bnVsbDtjPWEuY2FsbGJhY2s7Yj1hLmV4cGlyYXRpb25UaW1lO2E9YS5wcmlvcml0eUxldmVsO3ZhciBmPWcsUT1sO2c9YTtsPWI7dHJ5e3ZhciBoPWMoKX1maW5hbGx5e2c9ZixsPVF9aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGgpaWYoaD17Y2FsbGJhY2s6aCxwcmlvcml0eUxldmVsOmEsZXhwaXJhdGlvblRpbWU6YixuZXh0Om51bGwscHJldmlvdXM6bnVsbH0sbnVsbD09PWQpZD1oLm5leHQ9aC5wcmV2aW91cz1oO2Vsc2V7Yz1udWxsO2E9ZDtkb3tpZihhLmV4cGlyYXRpb25UaW1lPj1iKXtjPWE7YnJlYWt9YT1hLm5leHR9d2hpbGUoYSE9PWQpO251bGw9PT1jP2M9ZDpjPT09ZCYmKGQ9aCxwKCkpO2I9Yy5wcmV2aW91cztiLm5leHQ9Yy5wcmV2aW91cz1oO2gubmV4dD1jO2gucHJldmlvdXM9XG5ifX1mdW5jdGlvbiB2KCl7aWYoLTE9PT1rJiZudWxsIT09ZCYmMT09PWQucHJpb3JpdHlMZXZlbCl7bT0hMDt0cnl7ZG8gdSgpO3doaWxlKG51bGwhPT1kJiYxPT09ZC5wcmlvcml0eUxldmVsKX1maW5hbGx5e209ITEsbnVsbCE9PWQ/cCgpOm49ITF9fX1mdW5jdGlvbiB0KGEpe209ITA7dmFyIGI9ZTtlPWE7dHJ5e2lmKGEpZm9yKDtudWxsIT09ZDspe3ZhciBjPWV4cG9ydHMudW5zdGFibGVfbm93KCk7aWYoZC5leHBpcmF0aW9uVGltZTw9Yyl7ZG8gdSgpO3doaWxlKG51bGwhPT1kJiZkLmV4cGlyYXRpb25UaW1lPD1jKX1lbHNlIGJyZWFrfWVsc2UgaWYobnVsbCE9PWQpe2RvIHUoKTt3aGlsZShudWxsIT09ZCYmIXcoKSl9fWZpbmFsbHl7bT0hMSxlPWIsbnVsbCE9PWQ/cCgpOm49ITEsdigpfX1cbnZhciB4PURhdGUseT1cImZ1bmN0aW9uXCI9PT10eXBlb2Ygc2V0VGltZW91dD9zZXRUaW1lb3V0OnZvaWQgMCx6PVwiZnVuY3Rpb25cIj09PXR5cGVvZiBjbGVhclRpbWVvdXQ/Y2xlYXJUaW1lb3V0OnZvaWQgMCxBPVwiZnVuY3Rpb25cIj09PXR5cGVvZiByZXF1ZXN0QW5pbWF0aW9uRnJhbWU/cmVxdWVzdEFuaW1hdGlvbkZyYW1lOnZvaWQgMCxCPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBjYW5jZWxBbmltYXRpb25GcmFtZT9jYW5jZWxBbmltYXRpb25GcmFtZTp2b2lkIDAsQyxEO2Z1bmN0aW9uIEUoYSl7Qz1BKGZ1bmN0aW9uKGIpe3ooRCk7YShiKX0pO0Q9eShmdW5jdGlvbigpe0IoQyk7YShleHBvcnRzLnVuc3RhYmxlX25vdygpKX0sMTAwKX1cbmlmKFwib2JqZWN0XCI9PT10eXBlb2YgcGVyZm9ybWFuY2UmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBwZXJmb3JtYW5jZS5ub3cpe3ZhciBGPXBlcmZvcm1hbmNlO2V4cG9ydHMudW5zdGFibGVfbm93PWZ1bmN0aW9uKCl7cmV0dXJuIEYubm93KCl9fWVsc2UgZXhwb3J0cy51bnN0YWJsZV9ub3c9ZnVuY3Rpb24oKXtyZXR1cm4geC5ub3coKX07dmFyIHIscSx3LEc9bnVsbDtcInVuZGVmaW5lZFwiIT09dHlwZW9mIHdpbmRvdz9HPXdpbmRvdzpcInVuZGVmaW5lZFwiIT09dHlwZW9mIGdsb2JhbCYmKEc9Z2xvYmFsKTtcbmlmKEcmJkcuX3NjaGVkTW9jayl7dmFyIEg9Ry5fc2NoZWRNb2NrO3I9SFswXTtxPUhbMV07dz1IWzJdO2V4cG9ydHMudW5zdGFibGVfbm93PUhbM119ZWxzZSBpZihcInVuZGVmaW5lZFwiPT09dHlwZW9mIHdpbmRvd3x8XCJmdW5jdGlvblwiIT09dHlwZW9mIE1lc3NhZ2VDaGFubmVsKXt2YXIgST1udWxsLEo9ZnVuY3Rpb24oYSl7aWYobnVsbCE9PUkpdHJ5e0koYSl9ZmluYWxseXtJPW51bGx9fTtyPWZ1bmN0aW9uKGEpe251bGwhPT1JP3NldFRpbWVvdXQociwwLGEpOihJPWEsc2V0VGltZW91dChKLDAsITEpKX07cT1mdW5jdGlvbigpe0k9bnVsbH07dz1mdW5jdGlvbigpe3JldHVybiExfX1lbHNle1widW5kZWZpbmVkXCIhPT10eXBlb2YgY29uc29sZSYmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBBJiZjb25zb2xlLmVycm9yKFwiVGhpcyBicm93c2VyIGRvZXNuJ3Qgc3VwcG9ydCByZXF1ZXN0QW5pbWF0aW9uRnJhbWUuIE1ha2Ugc3VyZSB0aGF0IHlvdSBsb2FkIGEgcG9seWZpbGwgaW4gb2xkZXIgYnJvd3NlcnMuIGh0dHBzOi8vZmIubWUvcmVhY3QtcG9seWZpbGxzXCIpLFxuXCJmdW5jdGlvblwiIT09dHlwZW9mIEImJmNvbnNvbGUuZXJyb3IoXCJUaGlzIGJyb3dzZXIgZG9lc24ndCBzdXBwb3J0IGNhbmNlbEFuaW1hdGlvbkZyYW1lLiBNYWtlIHN1cmUgdGhhdCB5b3UgbG9hZCBhIHBvbHlmaWxsIGluIG9sZGVyIGJyb3dzZXJzLiBodHRwczovL2ZiLm1lL3JlYWN0LXBvbHlmaWxsc1wiKSk7dmFyIEs9bnVsbCxMPSExLE09LTEsTj0hMSxPPSExLFA9MCxSPTMzLFM9MzM7dz1mdW5jdGlvbigpe3JldHVybiBQPD1leHBvcnRzLnVuc3RhYmxlX25vdygpfTt2YXIgVD1uZXcgTWVzc2FnZUNoYW5uZWwsVT1ULnBvcnQyO1QucG9ydDEub25tZXNzYWdlPWZ1bmN0aW9uKCl7TD0hMTt2YXIgYT1LLGI9TTtLPW51bGw7TT0tMTt2YXIgYz1leHBvcnRzLnVuc3RhYmxlX25vdygpLGY9ITE7aWYoMD49UC1jKWlmKC0xIT09YiYmYjw9YylmPSEwO2Vsc2V7Tnx8KE49ITAsRShWKSk7Sz1hO009YjtyZXR1cm59aWYobnVsbCE9PWEpe089ITA7dHJ5e2EoZil9ZmluYWxseXtPPSExfX19O1xudmFyIFY9ZnVuY3Rpb24oYSl7aWYobnVsbCE9PUspe0UoVik7dmFyIGI9YS1QK1M7YjxTJiZSPFM/KDg+YiYmKGI9OCksUz1iPFI/UjpiKTpSPWI7UD1hK1M7THx8KEw9ITAsVS5wb3N0TWVzc2FnZSh2b2lkIDApKX1lbHNlIE49ITF9O3I9ZnVuY3Rpb24oYSxiKXtLPWE7TT1iO098fDA+Yj9VLnBvc3RNZXNzYWdlKHZvaWQgMCk6Tnx8KE49ITAsRShWKSl9O3E9ZnVuY3Rpb24oKXtLPW51bGw7TD0hMTtNPS0xfX1leHBvcnRzLnVuc3RhYmxlX0ltbWVkaWF0ZVByaW9yaXR5PTE7ZXhwb3J0cy51bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eT0yO2V4cG9ydHMudW5zdGFibGVfTm9ybWFsUHJpb3JpdHk9MztleHBvcnRzLnVuc3RhYmxlX0lkbGVQcmlvcml0eT01O2V4cG9ydHMudW5zdGFibGVfTG93UHJpb3JpdHk9NDtcbmV4cG9ydHMudW5zdGFibGVfcnVuV2l0aFByaW9yaXR5PWZ1bmN0aW9uKGEsYil7c3dpdGNoKGEpe2Nhc2UgMTpjYXNlIDI6Y2FzZSAzOmNhc2UgNDpjYXNlIDU6YnJlYWs7ZGVmYXVsdDphPTN9dmFyIGM9ZyxmPWs7Zz1hO2s9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTt0cnl7cmV0dXJuIGIoKX1maW5hbGx5e2c9YyxrPWYsdigpfX07ZXhwb3J0cy51bnN0YWJsZV9uZXh0PWZ1bmN0aW9uKGEpe3N3aXRjaChnKXtjYXNlIDE6Y2FzZSAyOmNhc2UgMzp2YXIgYj0zO2JyZWFrO2RlZmF1bHQ6Yj1nfXZhciBjPWcsZj1rO2c9YjtrPWV4cG9ydHMudW5zdGFibGVfbm93KCk7dHJ5e3JldHVybiBhKCl9ZmluYWxseXtnPWMsaz1mLHYoKX19O1xuZXhwb3J0cy51bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrPWZ1bmN0aW9uKGEsYil7dmFyIGM9LTEhPT1rP2s6ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGImJm51bGwhPT1iJiZcIm51bWJlclwiPT09dHlwZW9mIGIudGltZW91dCliPWMrYi50aW1lb3V0O2Vsc2Ugc3dpdGNoKGcpe2Nhc2UgMTpiPWMrLTE7YnJlYWs7Y2FzZSAyOmI9YysyNTA7YnJlYWs7Y2FzZSA1OmI9YysxMDczNzQxODIzO2JyZWFrO2Nhc2UgNDpiPWMrMUU0O2JyZWFrO2RlZmF1bHQ6Yj1jKzVFM31hPXtjYWxsYmFjazphLHByaW9yaXR5TGV2ZWw6ZyxleHBpcmF0aW9uVGltZTpiLG5leHQ6bnVsbCxwcmV2aW91czpudWxsfTtpZihudWxsPT09ZClkPWEubmV4dD1hLnByZXZpb3VzPWEscCgpO2Vsc2V7Yz1udWxsO3ZhciBmPWQ7ZG97aWYoZi5leHBpcmF0aW9uVGltZT5iKXtjPWY7YnJlYWt9Zj1mLm5leHR9d2hpbGUoZiE9PWQpO251bGw9PT1jP2M9ZDpjPT09ZCYmKGQ9YSxwKCkpO1xuYj1jLnByZXZpb3VzO2IubmV4dD1jLnByZXZpb3VzPWE7YS5uZXh0PWM7YS5wcmV2aW91cz1ifXJldHVybiBhfTtleHBvcnRzLnVuc3RhYmxlX2NhbmNlbENhbGxiYWNrPWZ1bmN0aW9uKGEpe3ZhciBiPWEubmV4dDtpZihudWxsIT09Yil7aWYoYj09PWEpZD1udWxsO2Vsc2V7YT09PWQmJihkPWIpO3ZhciBjPWEucHJldmlvdXM7Yy5uZXh0PWI7Yi5wcmV2aW91cz1jfWEubmV4dD1hLnByZXZpb3VzPW51bGx9fTtleHBvcnRzLnVuc3RhYmxlX3dyYXBDYWxsYmFjaz1mdW5jdGlvbihhKXt2YXIgYj1nO3JldHVybiBmdW5jdGlvbigpe3ZhciBjPWcsZj1rO2c9YjtrPWV4cG9ydHMudW5zdGFibGVfbm93KCk7dHJ5e3JldHVybiBhLmFwcGx5KHRoaXMsYXJndW1lbnRzKX1maW5hbGx5e2c9YyxrPWYsdigpfX19O2V4cG9ydHMudW5zdGFibGVfZ2V0Q3VycmVudFByaW9yaXR5TGV2ZWw9ZnVuY3Rpb24oKXtyZXR1cm4gZ307XG5leHBvcnRzLnVuc3RhYmxlX3Nob3VsZFlpZWxkPWZ1bmN0aW9uKCl7cmV0dXJuIWUmJihudWxsIT09ZCYmZC5leHBpcmF0aW9uVGltZTxsfHx3KCkpfTtleHBvcnRzLnVuc3RhYmxlX2NvbnRpbnVlRXhlY3V0aW9uPWZ1bmN0aW9uKCl7bnVsbCE9PWQmJnAoKX07ZXhwb3J0cy51bnN0YWJsZV9wYXVzZUV4ZWN1dGlvbj1mdW5jdGlvbigpe307ZXhwb3J0cy51bnN0YWJsZV9nZXRGaXJzdENhbGxiYWNrTm9kZT1mdW5jdGlvbigpe3JldHVybiBkfTtcbiIsInZhciBnO1xuXG4vLyBUaGlzIHdvcmtzIGluIG5vbi1zdHJpY3QgbW9kZVxuZyA9IChmdW5jdGlvbigpIHtcblx0cmV0dXJuIHRoaXM7XG59KSgpO1xuXG50cnkge1xuXHQvLyBUaGlzIHdvcmtzIGlmIGV2YWwgaXMgYWxsb3dlZCAoc2VlIENTUClcblx0ZyA9IGcgfHwgbmV3IEZ1bmN0aW9uKFwicmV0dXJuIHRoaXNcIikoKTtcbn0gY2F0Y2ggKGUpIHtcblx0Ly8gVGhpcyB3b3JrcyBpZiB0aGUgd2luZG93IHJlZmVyZW5jZSBpcyBhdmFpbGFibGVcblx0aWYgKHR5cGVvZiB3aW5kb3cgPT09IFwib2JqZWN0XCIpIGcgPSB3aW5kb3c7XG59XG5cbi8vIGcgY2FuIHN0aWxsIGJlIHVuZGVmaW5lZCwgYnV0IG5vdGhpbmcgdG8gZG8gYWJvdXQgaXQuLi5cbi8vIFdlIHJldHVybiB1bmRlZmluZWQsIGluc3RlYWQgb2Ygbm90aGluZyBoZXJlLCBzbyBpdCdzXG4vLyBlYXNpZXIgdG8gaGFuZGxlIHRoaXMgY2FzZS4gaWYoIWdsb2JhbCkgeyAuLi59XG5cbm1vZHVsZS5leHBvcnRzID0gZztcbiIsIi8vIHN0eWxlLWxvYWRlcjogQWRkcyBzb21lIGNzcyB0byB0aGUgRE9NIGJ5IGFkZGluZyBhIDxzdHlsZT4gdGFnXG5cbi8vIGxvYWQgdGhlIHN0eWxlc1xudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcyEuL21haW4uc2Nzc1wiKTtcbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuLy8gUHJlcGFyZSBjc3NUcmFuc2Zvcm1hdGlvblxudmFyIHRyYW5zZm9ybTtcblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbi8vIGFkZCB0aGUgc3R5bGVzIHRvIHRoZSBET01cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuLy8gSG90IE1vZHVsZSBSZXBsYWNlbWVudFxuaWYobW9kdWxlLmhvdCkge1xuXHQvLyBXaGVuIHRoZSBzdHlsZXMgY2hhbmdlLCB1cGRhdGUgdGhlIDxzdHlsZT4gdGFnc1xuXHRpZighY29udGVudC5sb2NhbHMpIHtcblx0XHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanMhLi9tYWluLnNjc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzIS4vbWFpbi5zY3NzXCIpO1xuXHRcdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cdFx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdFx0fSk7XG5cdH1cblx0Ly8gV2hlbiB0aGUgbW9kdWxlIGlzIGRpc3Bvc2VkLCByZW1vdmUgdGhlIDxzdHlsZT4gdGFnc1xuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiKShmYWxzZSk7XG4vLyBJbXBvcnRzXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCJAaW1wb3J0IHVybChodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2Nzcz9mYW1pbHk9UmFsZXdheTozMDAsNDAwLDYwMCk7XCIsIFwiXCJdKTtcbi8vIE1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiKiB7XFxuICBmb250LWZhbWlseTogJ1JhbGV3YXknLCBzYW5zLXNlcmlmOyB9XFxuXFxuKiB7XFxuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyB9XFxuXFxuYm9keSB7XFxuICBiYWNrZ3JvdW5kOiAjZWNlY2VjOyB9XFxuXFxuLmhvbWUge1xcbiAgZGlzcGxheTogYmxvY2s7XFxuICB3aWR0aDogNTIwcHg7XFxuICBoZWlnaHQ6IGF1dG87XFxuICBtYXJnaW46IDUwcHggYXV0bztcXG4gIGJhY2tncm91bmQ6ICNmZmY7XFxuICBib3JkZXItcmFkaXVzOiA1cHg7XFxuICBwYWRkaW5nOiAxNXB4IDUwcHg7IH1cXG5cIiwgXCJcIl0pO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qXG4gIE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG4gIEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG4vLyBjc3MgYmFzZSBjb2RlLCBpbmplY3RlZCBieSB0aGUgY3NzLWxvYWRlclxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGZ1bmMtbmFtZXNcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKHVzZVNvdXJjZU1hcCkge1xuICB2YXIgbGlzdCA9IFtdOyAvLyByZXR1cm4gdGhlIGxpc3Qgb2YgbW9kdWxlcyBhcyBjc3Mgc3RyaW5nXG5cbiAgbGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiB0aGlzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgdmFyIGNvbnRlbnQgPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0sIHVzZVNvdXJjZU1hcCk7XG5cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIHJldHVybiBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCJ7XCIpLmNvbmNhdChjb250ZW50LCBcIn1cIik7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBjb250ZW50O1xuICAgIH0pLmpvaW4oJycpO1xuICB9OyAvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZnVuYy1uYW1lc1xuXG5cbiAgbGlzdC5pID0gZnVuY3Rpb24gKG1vZHVsZXMsIG1lZGlhUXVlcnkpIHtcbiAgICBpZiAodHlwZW9mIG1vZHVsZXMgPT09ICdzdHJpbmcnKSB7XG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcGFyYW0tcmVhc3NpZ25cbiAgICAgIG1vZHVsZXMgPSBbW251bGwsIG1vZHVsZXMsICcnXV07XG4gICAgfVxuXG4gICAgdmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkrKykge1xuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHByZWZlci1kZXN0cnVjdHVyaW5nXG4gICAgICB2YXIgaWQgPSB0aGlzW2ldWzBdO1xuXG4gICAgICBpZiAoaWQgIT0gbnVsbCkge1xuICAgICAgICBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG4gICAgICB9XG4gICAgfVxuXG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IG1vZHVsZXMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICB2YXIgaXRlbSA9IG1vZHVsZXNbX2ldOyAvLyBza2lwIGFscmVhZHkgaW1wb3J0ZWQgbW9kdWxlXG4gICAgICAvLyB0aGlzIGltcGxlbWVudGF0aW9uIGlzIG5vdCAxMDAlIHBlcmZlY3QgZm9yIHdlaXJkIG1lZGlhIHF1ZXJ5IGNvbWJpbmF0aW9uc1xuICAgICAgLy8gd2hlbiBhIG1vZHVsZSBpcyBpbXBvcnRlZCBtdWx0aXBsZSB0aW1lcyB3aXRoIGRpZmZlcmVudCBtZWRpYSBxdWVyaWVzLlxuICAgICAgLy8gSSBob3BlIHRoaXMgd2lsbCBuZXZlciBvY2N1ciAoSGV5IHRoaXMgd2F5IHdlIGhhdmUgc21hbGxlciBidW5kbGVzKVxuXG4gICAgICBpZiAoaXRlbVswXSA9PSBudWxsIHx8ICFhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG4gICAgICAgIGlmIChtZWRpYVF1ZXJ5ICYmICFpdGVtWzJdKSB7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhUXVlcnk7XG4gICAgICAgIH0gZWxzZSBpZiAobWVkaWFRdWVyeSkge1xuICAgICAgICAgIGl0ZW1bMl0gPSBcIihcIi5jb25jYXQoaXRlbVsyXSwgXCIpIGFuZCAoXCIpLmNvbmNhdChtZWRpYVF1ZXJ5LCBcIilcIik7XG4gICAgICAgIH1cblxuICAgICAgICBsaXN0LnB1c2goaXRlbSk7XG4gICAgICB9XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiBsaXN0O1xufTtcblxuZnVuY3Rpb24gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtLCB1c2VTb3VyY2VNYXApIHtcbiAgdmFyIGNvbnRlbnQgPSBpdGVtWzFdIHx8ICcnOyAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcHJlZmVyLWRlc3RydWN0dXJpbmdcblxuICB2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XG5cbiAgaWYgKCFjc3NNYXBwaW5nKSB7XG4gICAgcmV0dXJuIGNvbnRlbnQ7XG4gIH1cblxuICBpZiAodXNlU291cmNlTWFwICYmIHR5cGVvZiBidG9hID09PSAnZnVuY3Rpb24nKSB7XG4gICAgdmFyIHNvdXJjZU1hcHBpbmcgPSB0b0NvbW1lbnQoY3NzTWFwcGluZyk7XG4gICAgdmFyIHNvdXJjZVVSTHMgPSBjc3NNYXBwaW5nLnNvdXJjZXMubWFwKGZ1bmN0aW9uIChzb3VyY2UpIHtcbiAgICAgIHJldHVybiBcIi8qIyBzb3VyY2VVUkw9XCIuY29uY2F0KGNzc01hcHBpbmcuc291cmNlUm9vdCkuY29uY2F0KHNvdXJjZSwgXCIgKi9cIik7XG4gICAgfSk7XG4gICAgcmV0dXJuIFtjb250ZW50XS5jb25jYXQoc291cmNlVVJMcykuY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbignXFxuJyk7XG4gIH1cblxuICByZXR1cm4gW2NvbnRlbnRdLmpvaW4oJ1xcbicpO1xufSAvLyBBZGFwdGVkIGZyb20gY29udmVydC1zb3VyY2UtbWFwIChNSVQpXG5cblxuZnVuY3Rpb24gdG9Db21tZW50KHNvdXJjZU1hcCkge1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW5kZWZcbiAgdmFyIGJhc2U2NCA9IGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSk7XG4gIHZhciBkYXRhID0gXCJzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxcIi5jb25jYXQoYmFzZTY0KTtcbiAgcmV0dXJuIFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcbn0iLCIvKlxuXHRNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuXHRBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xuXG52YXIgc3R5bGVzSW5Eb20gPSB7fTtcblxudmFyXHRtZW1vaXplID0gZnVuY3Rpb24gKGZuKSB7XG5cdHZhciBtZW1vO1xuXG5cdHJldHVybiBmdW5jdGlvbiAoKSB7XG5cdFx0aWYgKHR5cGVvZiBtZW1vID09PSBcInVuZGVmaW5lZFwiKSBtZW1vID0gZm4uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcblx0XHRyZXR1cm4gbWVtbztcblx0fTtcbn07XG5cbnZhciBpc09sZElFID0gbWVtb2l6ZShmdW5jdGlvbiAoKSB7XG5cdC8vIFRlc3QgZm9yIElFIDw9IDkgYXMgcHJvcG9zZWQgYnkgQnJvd3NlcmhhY2tzXG5cdC8vIEBzZWUgaHR0cDovL2Jyb3dzZXJoYWNrcy5jb20vI2hhY2stZTcxZDg2OTJmNjUzMzQxNzNmZWU3MTVjMjIyY2I4MDVcblx0Ly8gVGVzdHMgZm9yIGV4aXN0ZW5jZSBvZiBzdGFuZGFyZCBnbG9iYWxzIGlzIHRvIGFsbG93IHN0eWxlLWxvYWRlclxuXHQvLyB0byBvcGVyYXRlIGNvcnJlY3RseSBpbnRvIG5vbi1zdGFuZGFyZCBlbnZpcm9ubWVudHNcblx0Ly8gQHNlZSBodHRwczovL2dpdGh1Yi5jb20vd2VicGFjay1jb250cmliL3N0eWxlLWxvYWRlci9pc3N1ZXMvMTc3XG5cdHJldHVybiB3aW5kb3cgJiYgZG9jdW1lbnQgJiYgZG9jdW1lbnQuYWxsICYmICF3aW5kb3cuYXRvYjtcbn0pO1xuXG52YXIgZ2V0RWxlbWVudCA9IChmdW5jdGlvbiAoZm4pIHtcblx0dmFyIG1lbW8gPSB7fTtcblxuXHRyZXR1cm4gZnVuY3Rpb24oc2VsZWN0b3IpIHtcblx0XHRpZiAodHlwZW9mIG1lbW9bc2VsZWN0b3JdID09PSBcInVuZGVmaW5lZFwiKSB7XG5cdFx0XHR2YXIgc3R5bGVUYXJnZXQgPSBmbi5jYWxsKHRoaXMsIHNlbGVjdG9yKTtcblx0XHRcdC8vIFNwZWNpYWwgY2FzZSB0byByZXR1cm4gaGVhZCBvZiBpZnJhbWUgaW5zdGVhZCBvZiBpZnJhbWUgaXRzZWxmXG5cdFx0XHRpZiAoc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcblx0XHRcdFx0dHJ5IHtcblx0XHRcdFx0XHQvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuXHRcdFx0XHRcdC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG5cdFx0XHRcdFx0c3R5bGVUYXJnZXQgPSBzdHlsZVRhcmdldC5jb250ZW50RG9jdW1lbnQuaGVhZDtcblx0XHRcdFx0fSBjYXRjaChlKSB7XG5cdFx0XHRcdFx0c3R5bGVUYXJnZXQgPSBudWxsO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRtZW1vW3NlbGVjdG9yXSA9IHN0eWxlVGFyZ2V0O1xuXHRcdH1cblx0XHRyZXR1cm4gbWVtb1tzZWxlY3Rvcl1cblx0fTtcbn0pKGZ1bmN0aW9uICh0YXJnZXQpIHtcblx0cmV0dXJuIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGFyZ2V0KVxufSk7XG5cbnZhciBzaW5nbGV0b24gPSBudWxsO1xudmFyXHRzaW5nbGV0b25Db3VudGVyID0gMDtcbnZhclx0c3R5bGVzSW5zZXJ0ZWRBdFRvcCA9IFtdO1xuXG52YXJcdGZpeFVybHMgPSByZXF1aXJlKFwiLi91cmxzXCIpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGxpc3QsIG9wdGlvbnMpIHtcblx0aWYgKHR5cGVvZiBERUJVRyAhPT0gXCJ1bmRlZmluZWRcIiAmJiBERUJVRykge1xuXHRcdGlmICh0eXBlb2YgZG9jdW1lbnQgIT09IFwib2JqZWN0XCIpIHRocm93IG5ldyBFcnJvcihcIlRoZSBzdHlsZS1sb2FkZXIgY2Fubm90IGJlIHVzZWQgaW4gYSBub24tYnJvd3NlciBlbnZpcm9ubWVudFwiKTtcblx0fVxuXG5cdG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuXG5cdG9wdGlvbnMuYXR0cnMgPSB0eXBlb2Ygb3B0aW9ucy5hdHRycyA9PT0gXCJvYmplY3RcIiA/IG9wdGlvbnMuYXR0cnMgOiB7fTtcblxuXHQvLyBGb3JjZSBzaW5nbGUtdGFnIHNvbHV0aW9uIG9uIElFNi05LCB3aGljaCBoYXMgYSBoYXJkIGxpbWl0IG9uIHRoZSAjIG9mIDxzdHlsZT5cblx0Ly8gdGFncyBpdCB3aWxsIGFsbG93IG9uIGEgcGFnZVxuXHRpZiAoIW9wdGlvbnMuc2luZ2xldG9uICYmIHR5cGVvZiBvcHRpb25zLnNpbmdsZXRvbiAhPT0gXCJib29sZWFuXCIpIG9wdGlvbnMuc2luZ2xldG9uID0gaXNPbGRJRSgpO1xuXG5cdC8vIEJ5IGRlZmF1bHQsIGFkZCA8c3R5bGU+IHRhZ3MgdG8gdGhlIDxoZWFkPiBlbGVtZW50XG5cdGlmICghb3B0aW9ucy5pbnNlcnRJbnRvKSBvcHRpb25zLmluc2VydEludG8gPSBcImhlYWRcIjtcblxuXHQvLyBCeSBkZWZhdWx0LCBhZGQgPHN0eWxlPiB0YWdzIHRvIHRoZSBib3R0b20gb2YgdGhlIHRhcmdldFxuXHRpZiAoIW9wdGlvbnMuaW5zZXJ0QXQpIG9wdGlvbnMuaW5zZXJ0QXQgPSBcImJvdHRvbVwiO1xuXG5cdHZhciBzdHlsZXMgPSBsaXN0VG9TdHlsZXMobGlzdCwgb3B0aW9ucyk7XG5cblx0YWRkU3R5bGVzVG9Eb20oc3R5bGVzLCBvcHRpb25zKTtcblxuXHRyZXR1cm4gZnVuY3Rpb24gdXBkYXRlIChuZXdMaXN0KSB7XG5cdFx0dmFyIG1heVJlbW92ZSA9IFtdO1xuXG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXMubGVuZ3RoOyBpKyspIHtcblx0XHRcdHZhciBpdGVtID0gc3R5bGVzW2ldO1xuXHRcdFx0dmFyIGRvbVN0eWxlID0gc3R5bGVzSW5Eb21baXRlbS5pZF07XG5cblx0XHRcdGRvbVN0eWxlLnJlZnMtLTtcblx0XHRcdG1heVJlbW92ZS5wdXNoKGRvbVN0eWxlKTtcblx0XHR9XG5cblx0XHRpZihuZXdMaXN0KSB7XG5cdFx0XHR2YXIgbmV3U3R5bGVzID0gbGlzdFRvU3R5bGVzKG5ld0xpc3QsIG9wdGlvbnMpO1xuXHRcdFx0YWRkU3R5bGVzVG9Eb20obmV3U3R5bGVzLCBvcHRpb25zKTtcblx0XHR9XG5cblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IG1heVJlbW92ZS5sZW5ndGg7IGkrKykge1xuXHRcdFx0dmFyIGRvbVN0eWxlID0gbWF5UmVtb3ZlW2ldO1xuXG5cdFx0XHRpZihkb21TdHlsZS5yZWZzID09PSAwKSB7XG5cdFx0XHRcdGZvciAodmFyIGogPSAwOyBqIDwgZG9tU3R5bGUucGFydHMubGVuZ3RoOyBqKyspIGRvbVN0eWxlLnBhcnRzW2pdKCk7XG5cblx0XHRcdFx0ZGVsZXRlIHN0eWxlc0luRG9tW2RvbVN0eWxlLmlkXTtcblx0XHRcdH1cblx0XHR9XG5cdH07XG59O1xuXG5mdW5jdGlvbiBhZGRTdHlsZXNUb0RvbSAoc3R5bGVzLCBvcHRpb25zKSB7XG5cdGZvciAodmFyIGkgPSAwOyBpIDwgc3R5bGVzLmxlbmd0aDsgaSsrKSB7XG5cdFx0dmFyIGl0ZW0gPSBzdHlsZXNbaV07XG5cdFx0dmFyIGRvbVN0eWxlID0gc3R5bGVzSW5Eb21baXRlbS5pZF07XG5cblx0XHRpZihkb21TdHlsZSkge1xuXHRcdFx0ZG9tU3R5bGUucmVmcysrO1xuXG5cdFx0XHRmb3IodmFyIGogPSAwOyBqIDwgZG9tU3R5bGUucGFydHMubGVuZ3RoOyBqKyspIHtcblx0XHRcdFx0ZG9tU3R5bGUucGFydHNbal0oaXRlbS5wYXJ0c1tqXSk7XG5cdFx0XHR9XG5cblx0XHRcdGZvcig7IGogPCBpdGVtLnBhcnRzLmxlbmd0aDsgaisrKSB7XG5cdFx0XHRcdGRvbVN0eWxlLnBhcnRzLnB1c2goYWRkU3R5bGUoaXRlbS5wYXJ0c1tqXSwgb3B0aW9ucykpO1xuXHRcdFx0fVxuXHRcdH0gZWxzZSB7XG5cdFx0XHR2YXIgcGFydHMgPSBbXTtcblxuXHRcdFx0Zm9yKHZhciBqID0gMDsgaiA8IGl0ZW0ucGFydHMubGVuZ3RoOyBqKyspIHtcblx0XHRcdFx0cGFydHMucHVzaChhZGRTdHlsZShpdGVtLnBhcnRzW2pdLCBvcHRpb25zKSk7XG5cdFx0XHR9XG5cblx0XHRcdHN0eWxlc0luRG9tW2l0ZW0uaWRdID0ge2lkOiBpdGVtLmlkLCByZWZzOiAxLCBwYXJ0czogcGFydHN9O1xuXHRcdH1cblx0fVxufVxuXG5mdW5jdGlvbiBsaXN0VG9TdHlsZXMgKGxpc3QsIG9wdGlvbnMpIHtcblx0dmFyIHN0eWxlcyA9IFtdO1xuXHR2YXIgbmV3U3R5bGVzID0ge307XG5cblx0Zm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7XG5cdFx0dmFyIGl0ZW0gPSBsaXN0W2ldO1xuXHRcdHZhciBpZCA9IG9wdGlvbnMuYmFzZSA/IGl0ZW1bMF0gKyBvcHRpb25zLmJhc2UgOiBpdGVtWzBdO1xuXHRcdHZhciBjc3MgPSBpdGVtWzFdO1xuXHRcdHZhciBtZWRpYSA9IGl0ZW1bMl07XG5cdFx0dmFyIHNvdXJjZU1hcCA9IGl0ZW1bM107XG5cdFx0dmFyIHBhcnQgPSB7Y3NzOiBjc3MsIG1lZGlhOiBtZWRpYSwgc291cmNlTWFwOiBzb3VyY2VNYXB9O1xuXG5cdFx0aWYoIW5ld1N0eWxlc1tpZF0pIHN0eWxlcy5wdXNoKG5ld1N0eWxlc1tpZF0gPSB7aWQ6IGlkLCBwYXJ0czogW3BhcnRdfSk7XG5cdFx0ZWxzZSBuZXdTdHlsZXNbaWRdLnBhcnRzLnB1c2gocGFydCk7XG5cdH1cblxuXHRyZXR1cm4gc3R5bGVzO1xufVxuXG5mdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQgKG9wdGlvbnMsIHN0eWxlKSB7XG5cdHZhciB0YXJnZXQgPSBnZXRFbGVtZW50KG9wdGlvbnMuaW5zZXJ0SW50bylcblxuXHRpZiAoIXRhcmdldCkge1xuXHRcdHRocm93IG5ldyBFcnJvcihcIkNvdWxkbid0IGZpbmQgYSBzdHlsZSB0YXJnZXQuIFRoaXMgcHJvYmFibHkgbWVhbnMgdGhhdCB0aGUgdmFsdWUgZm9yIHRoZSAnaW5zZXJ0SW50bycgcGFyYW1ldGVyIGlzIGludmFsaWQuXCIpO1xuXHR9XG5cblx0dmFyIGxhc3RTdHlsZUVsZW1lbnRJbnNlcnRlZEF0VG9wID0gc3R5bGVzSW5zZXJ0ZWRBdFRvcFtzdHlsZXNJbnNlcnRlZEF0VG9wLmxlbmd0aCAtIDFdO1xuXG5cdGlmIChvcHRpb25zLmluc2VydEF0ID09PSBcInRvcFwiKSB7XG5cdFx0aWYgKCFsYXN0U3R5bGVFbGVtZW50SW5zZXJ0ZWRBdFRvcCkge1xuXHRcdFx0dGFyZ2V0Lmluc2VydEJlZm9yZShzdHlsZSwgdGFyZ2V0LmZpcnN0Q2hpbGQpO1xuXHRcdH0gZWxzZSBpZiAobGFzdFN0eWxlRWxlbWVudEluc2VydGVkQXRUb3AubmV4dFNpYmxpbmcpIHtcblx0XHRcdHRhcmdldC5pbnNlcnRCZWZvcmUoc3R5bGUsIGxhc3RTdHlsZUVsZW1lbnRJbnNlcnRlZEF0VG9wLm5leHRTaWJsaW5nKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0dGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTtcblx0XHR9XG5cdFx0c3R5bGVzSW5zZXJ0ZWRBdFRvcC5wdXNoKHN0eWxlKTtcblx0fSBlbHNlIGlmIChvcHRpb25zLmluc2VydEF0ID09PSBcImJvdHRvbVwiKSB7XG5cdFx0dGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTtcblx0fSBlbHNlIGlmICh0eXBlb2Ygb3B0aW9ucy5pbnNlcnRBdCA9PT0gXCJvYmplY3RcIiAmJiBvcHRpb25zLmluc2VydEF0LmJlZm9yZSkge1xuXHRcdHZhciBuZXh0U2libGluZyA9IGdldEVsZW1lbnQob3B0aW9ucy5pbnNlcnRJbnRvICsgXCIgXCIgKyBvcHRpb25zLmluc2VydEF0LmJlZm9yZSk7XG5cdFx0dGFyZ2V0Lmluc2VydEJlZm9yZShzdHlsZSwgbmV4dFNpYmxpbmcpO1xuXHR9IGVsc2Uge1xuXHRcdHRocm93IG5ldyBFcnJvcihcIltTdHlsZSBMb2FkZXJdXFxuXFxuIEludmFsaWQgdmFsdWUgZm9yIHBhcmFtZXRlciAnaW5zZXJ0QXQnICgnb3B0aW9ucy5pbnNlcnRBdCcpIGZvdW5kLlxcbiBNdXN0IGJlICd0b3AnLCAnYm90dG9tJywgb3IgT2JqZWN0LlxcbiAoaHR0cHM6Ly9naXRodWIuY29tL3dlYnBhY2stY29udHJpYi9zdHlsZS1sb2FkZXIjaW5zZXJ0YXQpXFxuXCIpO1xuXHR9XG59XG5cbmZ1bmN0aW9uIHJlbW92ZVN0eWxlRWxlbWVudCAoc3R5bGUpIHtcblx0aWYgKHN0eWxlLnBhcmVudE5vZGUgPT09IG51bGwpIHJldHVybiBmYWxzZTtcblx0c3R5bGUucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzdHlsZSk7XG5cblx0dmFyIGlkeCA9IHN0eWxlc0luc2VydGVkQXRUb3AuaW5kZXhPZihzdHlsZSk7XG5cdGlmKGlkeCA+PSAwKSB7XG5cdFx0c3R5bGVzSW5zZXJ0ZWRBdFRvcC5zcGxpY2UoaWR4LCAxKTtcblx0fVxufVxuXG5mdW5jdGlvbiBjcmVhdGVTdHlsZUVsZW1lbnQgKG9wdGlvbnMpIHtcblx0dmFyIHN0eWxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpO1xuXG5cdG9wdGlvbnMuYXR0cnMudHlwZSA9IFwidGV4dC9jc3NcIjtcblxuXHRhZGRBdHRycyhzdHlsZSwgb3B0aW9ucy5hdHRycyk7XG5cdGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zLCBzdHlsZSk7XG5cblx0cmV0dXJuIHN0eWxlO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVMaW5rRWxlbWVudCAob3B0aW9ucykge1xuXHR2YXIgbGluayA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJsaW5rXCIpO1xuXG5cdG9wdGlvbnMuYXR0cnMudHlwZSA9IFwidGV4dC9jc3NcIjtcblx0b3B0aW9ucy5hdHRycy5yZWwgPSBcInN0eWxlc2hlZXRcIjtcblxuXHRhZGRBdHRycyhsaW5rLCBvcHRpb25zLmF0dHJzKTtcblx0aW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMsIGxpbmspO1xuXG5cdHJldHVybiBsaW5rO1xufVxuXG5mdW5jdGlvbiBhZGRBdHRycyAoZWwsIGF0dHJzKSB7XG5cdE9iamVjdC5rZXlzKGF0dHJzKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcblx0XHRlbC5zZXRBdHRyaWJ1dGUoa2V5LCBhdHRyc1trZXldKTtcblx0fSk7XG59XG5cbmZ1bmN0aW9uIGFkZFN0eWxlIChvYmosIG9wdGlvbnMpIHtcblx0dmFyIHN0eWxlLCB1cGRhdGUsIHJlbW92ZSwgcmVzdWx0O1xuXG5cdC8vIElmIGEgdHJhbnNmb3JtIGZ1bmN0aW9uIHdhcyBkZWZpbmVkLCBydW4gaXQgb24gdGhlIGNzc1xuXHRpZiAob3B0aW9ucy50cmFuc2Zvcm0gJiYgb2JqLmNzcykge1xuXHQgICAgcmVzdWx0ID0gb3B0aW9ucy50cmFuc2Zvcm0ob2JqLmNzcyk7XG5cblx0ICAgIGlmIChyZXN1bHQpIHtcblx0ICAgIFx0Ly8gSWYgdHJhbnNmb3JtIHJldHVybnMgYSB2YWx1ZSwgdXNlIHRoYXQgaW5zdGVhZCBvZiB0aGUgb3JpZ2luYWwgY3NzLlxuXHQgICAgXHQvLyBUaGlzIGFsbG93cyBydW5uaW5nIHJ1bnRpbWUgdHJhbnNmb3JtYXRpb25zIG9uIHRoZSBjc3MuXG5cdCAgICBcdG9iai5jc3MgPSByZXN1bHQ7XG5cdCAgICB9IGVsc2Uge1xuXHQgICAgXHQvLyBJZiB0aGUgdHJhbnNmb3JtIGZ1bmN0aW9uIHJldHVybnMgYSBmYWxzeSB2YWx1ZSwgZG9uJ3QgYWRkIHRoaXMgY3NzLlxuXHQgICAgXHQvLyBUaGlzIGFsbG93cyBjb25kaXRpb25hbCBsb2FkaW5nIG9mIGNzc1xuXHQgICAgXHRyZXR1cm4gZnVuY3Rpb24oKSB7XG5cdCAgICBcdFx0Ly8gbm9vcFxuXHQgICAgXHR9O1xuXHQgICAgfVxuXHR9XG5cblx0aWYgKG9wdGlvbnMuc2luZ2xldG9uKSB7XG5cdFx0dmFyIHN0eWxlSW5kZXggPSBzaW5nbGV0b25Db3VudGVyKys7XG5cblx0XHRzdHlsZSA9IHNpbmdsZXRvbiB8fCAoc2luZ2xldG9uID0gY3JlYXRlU3R5bGVFbGVtZW50KG9wdGlvbnMpKTtcblxuXHRcdHVwZGF0ZSA9IGFwcGx5VG9TaW5nbGV0b25UYWcuYmluZChudWxsLCBzdHlsZSwgc3R5bGVJbmRleCwgZmFsc2UpO1xuXHRcdHJlbW92ZSA9IGFwcGx5VG9TaW5nbGV0b25UYWcuYmluZChudWxsLCBzdHlsZSwgc3R5bGVJbmRleCwgdHJ1ZSk7XG5cblx0fSBlbHNlIGlmIChcblx0XHRvYmouc291cmNlTWFwICYmXG5cdFx0dHlwZW9mIFVSTCA9PT0gXCJmdW5jdGlvblwiICYmXG5cdFx0dHlwZW9mIFVSTC5jcmVhdGVPYmplY3RVUkwgPT09IFwiZnVuY3Rpb25cIiAmJlxuXHRcdHR5cGVvZiBVUkwucmV2b2tlT2JqZWN0VVJMID09PSBcImZ1bmN0aW9uXCIgJiZcblx0XHR0eXBlb2YgQmxvYiA9PT0gXCJmdW5jdGlvblwiICYmXG5cdFx0dHlwZW9mIGJ0b2EgPT09IFwiZnVuY3Rpb25cIlxuXHQpIHtcblx0XHRzdHlsZSA9IGNyZWF0ZUxpbmtFbGVtZW50KG9wdGlvbnMpO1xuXHRcdHVwZGF0ZSA9IHVwZGF0ZUxpbmsuYmluZChudWxsLCBzdHlsZSwgb3B0aW9ucyk7XG5cdFx0cmVtb3ZlID0gZnVuY3Rpb24gKCkge1xuXHRcdFx0cmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlKTtcblxuXHRcdFx0aWYoc3R5bGUuaHJlZikgVVJMLnJldm9rZU9iamVjdFVSTChzdHlsZS5ocmVmKTtcblx0XHR9O1xuXHR9IGVsc2Uge1xuXHRcdHN0eWxlID0gY3JlYXRlU3R5bGVFbGVtZW50KG9wdGlvbnMpO1xuXHRcdHVwZGF0ZSA9IGFwcGx5VG9UYWcuYmluZChudWxsLCBzdHlsZSk7XG5cdFx0cmVtb3ZlID0gZnVuY3Rpb24gKCkge1xuXHRcdFx0cmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlKTtcblx0XHR9O1xuXHR9XG5cblx0dXBkYXRlKG9iaik7XG5cblx0cmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZVN0eWxlIChuZXdPYmopIHtcblx0XHRpZiAobmV3T2JqKSB7XG5cdFx0XHRpZiAoXG5cdFx0XHRcdG5ld09iai5jc3MgPT09IG9iai5jc3MgJiZcblx0XHRcdFx0bmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiZcblx0XHRcdFx0bmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcFxuXHRcdFx0KSB7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblxuXHRcdFx0dXBkYXRlKG9iaiA9IG5ld09iaik7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHJlbW92ZSgpO1xuXHRcdH1cblx0fTtcbn1cblxudmFyIHJlcGxhY2VUZXh0ID0gKGZ1bmN0aW9uICgpIHtcblx0dmFyIHRleHRTdG9yZSA9IFtdO1xuXG5cdHJldHVybiBmdW5jdGlvbiAoaW5kZXgsIHJlcGxhY2VtZW50KSB7XG5cdFx0dGV4dFN0b3JlW2luZGV4XSA9IHJlcGxhY2VtZW50O1xuXG5cdFx0cmV0dXJuIHRleHRTdG9yZS5maWx0ZXIoQm9vbGVhbikuam9pbignXFxuJyk7XG5cdH07XG59KSgpO1xuXG5mdW5jdGlvbiBhcHBseVRvU2luZ2xldG9uVGFnIChzdHlsZSwgaW5kZXgsIHJlbW92ZSwgb2JqKSB7XG5cdHZhciBjc3MgPSByZW1vdmUgPyBcIlwiIDogb2JqLmNzcztcblxuXHRpZiAoc3R5bGUuc3R5bGVTaGVldCkge1xuXHRcdHN0eWxlLnN0eWxlU2hlZXQuY3NzVGV4dCA9IHJlcGxhY2VUZXh0KGluZGV4LCBjc3MpO1xuXHR9IGVsc2Uge1xuXHRcdHZhciBjc3NOb2RlID0gZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKTtcblx0XHR2YXIgY2hpbGROb2RlcyA9IHN0eWxlLmNoaWxkTm9kZXM7XG5cblx0XHRpZiAoY2hpbGROb2Rlc1tpbmRleF0pIHN0eWxlLnJlbW92ZUNoaWxkKGNoaWxkTm9kZXNbaW5kZXhdKTtcblxuXHRcdGlmIChjaGlsZE5vZGVzLmxlbmd0aCkge1xuXHRcdFx0c3R5bGUuaW5zZXJ0QmVmb3JlKGNzc05vZGUsIGNoaWxkTm9kZXNbaW5kZXhdKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0c3R5bGUuYXBwZW5kQ2hpbGQoY3NzTm9kZSk7XG5cdFx0fVxuXHR9XG59XG5cbmZ1bmN0aW9uIGFwcGx5VG9UYWcgKHN0eWxlLCBvYmopIHtcblx0dmFyIGNzcyA9IG9iai5jc3M7XG5cdHZhciBtZWRpYSA9IG9iai5tZWRpYTtcblxuXHRpZihtZWRpYSkge1xuXHRcdHN0eWxlLnNldEF0dHJpYnV0ZShcIm1lZGlhXCIsIG1lZGlhKVxuXHR9XG5cblx0aWYoc3R5bGUuc3R5bGVTaGVldCkge1xuXHRcdHN0eWxlLnN0eWxlU2hlZXQuY3NzVGV4dCA9IGNzcztcblx0fSBlbHNlIHtcblx0XHR3aGlsZShzdHlsZS5maXJzdENoaWxkKSB7XG5cdFx0XHRzdHlsZS5yZW1vdmVDaGlsZChzdHlsZS5maXJzdENoaWxkKTtcblx0XHR9XG5cblx0XHRzdHlsZS5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpKTtcblx0fVxufVxuXG5mdW5jdGlvbiB1cGRhdGVMaW5rIChsaW5rLCBvcHRpb25zLCBvYmopIHtcblx0dmFyIGNzcyA9IG9iai5jc3M7XG5cdHZhciBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwO1xuXG5cdC8qXG5cdFx0SWYgY29udmVydFRvQWJzb2x1dGVVcmxzIGlzbid0IGRlZmluZWQsIGJ1dCBzb3VyY2VtYXBzIGFyZSBlbmFibGVkXG5cdFx0YW5kIHRoZXJlIGlzIG5vIHB1YmxpY1BhdGggZGVmaW5lZCB0aGVuIGxldHMgdHVybiBjb252ZXJ0VG9BYnNvbHV0ZVVybHNcblx0XHRvbiBieSBkZWZhdWx0LiAgT3RoZXJ3aXNlIGRlZmF1bHQgdG8gdGhlIGNvbnZlcnRUb0Fic29sdXRlVXJscyBvcHRpb25cblx0XHRkaXJlY3RseVxuXHQqL1xuXHR2YXIgYXV0b0ZpeFVybHMgPSBvcHRpb25zLmNvbnZlcnRUb0Fic29sdXRlVXJscyA9PT0gdW5kZWZpbmVkICYmIHNvdXJjZU1hcDtcblxuXHRpZiAob3B0aW9ucy5jb252ZXJ0VG9BYnNvbHV0ZVVybHMgfHwgYXV0b0ZpeFVybHMpIHtcblx0XHRjc3MgPSBmaXhVcmxzKGNzcyk7XG5cdH1cblxuXHRpZiAoc291cmNlTWFwKSB7XG5cdFx0Ly8gaHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL2EvMjY2MDM4NzVcblx0XHRjc3MgKz0gXCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiICsgYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKSArIFwiICovXCI7XG5cdH1cblxuXHR2YXIgYmxvYiA9IG5ldyBCbG9iKFtjc3NdLCB7IHR5cGU6IFwidGV4dC9jc3NcIiB9KTtcblxuXHR2YXIgb2xkU3JjID0gbGluay5ocmVmO1xuXG5cdGxpbmsuaHJlZiA9IFVSTC5jcmVhdGVPYmplY3RVUkwoYmxvYik7XG5cblx0aWYob2xkU3JjKSBVUkwucmV2b2tlT2JqZWN0VVJMKG9sZFNyYyk7XG59XG4iLCJcbi8qKlxuICogV2hlbiBzb3VyY2UgbWFwcyBhcmUgZW5hYmxlZCwgYHN0eWxlLWxvYWRlcmAgdXNlcyBhIGxpbmsgZWxlbWVudCB3aXRoIGEgZGF0YS11cmkgdG9cbiAqIGVtYmVkIHRoZSBjc3Mgb24gdGhlIHBhZ2UuIFRoaXMgYnJlYWtzIGFsbCByZWxhdGl2ZSB1cmxzIGJlY2F1c2Ugbm93IHRoZXkgYXJlIHJlbGF0aXZlIHRvIGFcbiAqIGJ1bmRsZSBpbnN0ZWFkIG9mIHRoZSBjdXJyZW50IHBhZ2UuXG4gKlxuICogT25lIHNvbHV0aW9uIGlzIHRvIG9ubHkgdXNlIGZ1bGwgdXJscywgYnV0IHRoYXQgbWF5IGJlIGltcG9zc2libGUuXG4gKlxuICogSW5zdGVhZCwgdGhpcyBmdW5jdGlvbiBcImZpeGVzXCIgdGhlIHJlbGF0aXZlIHVybHMgdG8gYmUgYWJzb2x1dGUgYWNjb3JkaW5nIHRvIHRoZSBjdXJyZW50IHBhZ2UgbG9jYXRpb24uXG4gKlxuICogQSBydWRpbWVudGFyeSB0ZXN0IHN1aXRlIGlzIGxvY2F0ZWQgYXQgYHRlc3QvZml4VXJscy5qc2AgYW5kIGNhbiBiZSBydW4gdmlhIHRoZSBgbnBtIHRlc3RgIGNvbW1hbmQuXG4gKlxuICovXG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGNzcykge1xuICAvLyBnZXQgY3VycmVudCBsb2NhdGlvblxuICB2YXIgbG9jYXRpb24gPSB0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiICYmIHdpbmRvdy5sb2NhdGlvbjtcblxuICBpZiAoIWxvY2F0aW9uKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiZml4VXJscyByZXF1aXJlcyB3aW5kb3cubG9jYXRpb25cIik7XG4gIH1cblxuXHQvLyBibGFuayBvciBudWxsP1xuXHRpZiAoIWNzcyB8fCB0eXBlb2YgY3NzICE9PSBcInN0cmluZ1wiKSB7XG5cdCAgcmV0dXJuIGNzcztcbiAgfVxuXG4gIHZhciBiYXNlVXJsID0gbG9jYXRpb24ucHJvdG9jb2wgKyBcIi8vXCIgKyBsb2NhdGlvbi5ob3N0O1xuICB2YXIgY3VycmVudERpciA9IGJhc2VVcmwgKyBsb2NhdGlvbi5wYXRobmFtZS5yZXBsYWNlKC9cXC9bXlxcL10qJC8sIFwiL1wiKTtcblxuXHQvLyBjb252ZXJ0IGVhY2ggdXJsKC4uLilcblx0Lypcblx0VGhpcyByZWd1bGFyIGV4cHJlc3Npb24gaXMganVzdCBhIHdheSB0byByZWN1cnNpdmVseSBtYXRjaCBicmFja2V0cyB3aXRoaW5cblx0YSBzdHJpbmcuXG5cblx0IC91cmxcXHMqXFwoICA9IE1hdGNoIG9uIHRoZSB3b3JkIFwidXJsXCIgd2l0aCBhbnkgd2hpdGVzcGFjZSBhZnRlciBpdCBhbmQgdGhlbiBhIHBhcmVuc1xuXHQgICAoICA9IFN0YXJ0IGEgY2FwdHVyaW5nIGdyb3VwXG5cdCAgICAgKD86ICA9IFN0YXJ0IGEgbm9uLWNhcHR1cmluZyBncm91cFxuXHQgICAgICAgICBbXikoXSAgPSBNYXRjaCBhbnl0aGluZyB0aGF0IGlzbid0IGEgcGFyZW50aGVzZXNcblx0ICAgICAgICAgfCAgPSBPUlxuXHQgICAgICAgICBcXCggID0gTWF0Y2ggYSBzdGFydCBwYXJlbnRoZXNlc1xuXHQgICAgICAgICAgICAgKD86ICA9IFN0YXJ0IGFub3RoZXIgbm9uLWNhcHR1cmluZyBncm91cHNcblx0ICAgICAgICAgICAgICAgICBbXikoXSsgID0gTWF0Y2ggYW55dGhpbmcgdGhhdCBpc24ndCBhIHBhcmVudGhlc2VzXG5cdCAgICAgICAgICAgICAgICAgfCAgPSBPUlxuXHQgICAgICAgICAgICAgICAgIFxcKCAgPSBNYXRjaCBhIHN0YXJ0IHBhcmVudGhlc2VzXG5cdCAgICAgICAgICAgICAgICAgICAgIFteKShdKiAgPSBNYXRjaCBhbnl0aGluZyB0aGF0IGlzbid0IGEgcGFyZW50aGVzZXNcblx0ICAgICAgICAgICAgICAgICBcXCkgID0gTWF0Y2ggYSBlbmQgcGFyZW50aGVzZXNcblx0ICAgICAgICAgICAgICkgID0gRW5kIEdyb3VwXG4gICAgICAgICAgICAgICpcXCkgPSBNYXRjaCBhbnl0aGluZyBhbmQgdGhlbiBhIGNsb3NlIHBhcmVuc1xuICAgICAgICAgICkgID0gQ2xvc2Ugbm9uLWNhcHR1cmluZyBncm91cFxuICAgICAgICAgICogID0gTWF0Y2ggYW55dGhpbmdcbiAgICAgICApICA9IENsb3NlIGNhcHR1cmluZyBncm91cFxuXHQgXFwpICA9IE1hdGNoIGEgY2xvc2UgcGFyZW5zXG5cblx0IC9naSAgPSBHZXQgYWxsIG1hdGNoZXMsIG5vdCB0aGUgZmlyc3QuICBCZSBjYXNlIGluc2Vuc2l0aXZlLlxuXHQgKi9cblx0dmFyIGZpeGVkQ3NzID0gY3NzLnJlcGxhY2UoL3VybFxccypcXCgoKD86W14pKF18XFwoKD86W14pKF0rfFxcKFteKShdKlxcKSkqXFwpKSopXFwpL2dpLCBmdW5jdGlvbihmdWxsTWF0Y2gsIG9yaWdVcmwpIHtcblx0XHQvLyBzdHJpcCBxdW90ZXMgKGlmIHRoZXkgZXhpc3QpXG5cdFx0dmFyIHVucXVvdGVkT3JpZ1VybCA9IG9yaWdVcmxcblx0XHRcdC50cmltKClcblx0XHRcdC5yZXBsYWNlKC9eXCIoLiopXCIkLywgZnVuY3Rpb24obywgJDEpeyByZXR1cm4gJDE7IH0pXG5cdFx0XHQucmVwbGFjZSgvXicoLiopJyQvLCBmdW5jdGlvbihvLCAkMSl7IHJldHVybiAkMTsgfSk7XG5cblx0XHQvLyBhbHJlYWR5IGEgZnVsbCB1cmw/IG5vIGNoYW5nZVxuXHRcdGlmICgvXigjfGRhdGE6fGh0dHA6XFwvXFwvfGh0dHBzOlxcL1xcL3xmaWxlOlxcL1xcL1xcLykvaS50ZXN0KHVucXVvdGVkT3JpZ1VybCkpIHtcblx0XHQgIHJldHVybiBmdWxsTWF0Y2g7XG5cdFx0fVxuXG5cdFx0Ly8gY29udmVydCB0aGUgdXJsIHRvIGEgZnVsbCB1cmxcblx0XHR2YXIgbmV3VXJsO1xuXG5cdFx0aWYgKHVucXVvdGVkT3JpZ1VybC5pbmRleE9mKFwiLy9cIikgPT09IDApIHtcblx0XHQgIFx0Ly9UT0RPOiBzaG91bGQgd2UgYWRkIHByb3RvY29sP1xuXHRcdFx0bmV3VXJsID0gdW5xdW90ZWRPcmlnVXJsO1xuXHRcdH0gZWxzZSBpZiAodW5xdW90ZWRPcmlnVXJsLmluZGV4T2YoXCIvXCIpID09PSAwKSB7XG5cdFx0XHQvLyBwYXRoIHNob3VsZCBiZSByZWxhdGl2ZSB0byB0aGUgYmFzZSB1cmxcblx0XHRcdG5ld1VybCA9IGJhc2VVcmwgKyB1bnF1b3RlZE9yaWdVcmw7IC8vIGFscmVhZHkgc3RhcnRzIHdpdGggJy8nXG5cdFx0fSBlbHNlIHtcblx0XHRcdC8vIHBhdGggc2hvdWxkIGJlIHJlbGF0aXZlIHRvIGN1cnJlbnQgZGlyZWN0b3J5XG5cdFx0XHRuZXdVcmwgPSBjdXJyZW50RGlyICsgdW5xdW90ZWRPcmlnVXJsLnJlcGxhY2UoL15cXC5cXC8vLCBcIlwiKTsgLy8gU3RyaXAgbGVhZGluZyAnLi8nXG5cdFx0fVxuXG5cdFx0Ly8gc2VuZCBiYWNrIHRoZSBmaXhlZCB1cmwoLi4uKVxuXHRcdHJldHVybiBcInVybChcIiArIEpTT04uc3RyaW5naWZ5KG5ld1VybCkgKyBcIilcIjtcblx0fSk7XG5cblx0Ly8gc2VuZCBiYWNrIHRoZSBmaXhlZCBjc3Ncblx0cmV0dXJuIGZpeGVkQ3NzO1xufTtcbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgUmVhY3RQcm9wVHlwZXNTZWNyZXQgPSByZXF1aXJlKCcuL2xpYi9SZWFjdFByb3BUeXBlc1NlY3JldCcpO1xuXG5mdW5jdGlvbiBlbXB0eUZ1bmN0aW9uKCkge31cbmZ1bmN0aW9uIGVtcHR5RnVuY3Rpb25XaXRoUmVzZXQoKSB7fVxuZW1wdHlGdW5jdGlvbldpdGhSZXNldC5yZXNldFdhcm5pbmdDYWNoZSA9IGVtcHR5RnVuY3Rpb247XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oKSB7XG4gIGZ1bmN0aW9uIHNoaW0ocHJvcHMsIHByb3BOYW1lLCBjb21wb25lbnROYW1lLCBsb2NhdGlvbiwgcHJvcEZ1bGxOYW1lLCBzZWNyZXQpIHtcbiAgICBpZiAoc2VjcmV0ID09PSBSZWFjdFByb3BUeXBlc1NlY3JldCkge1xuICAgICAgLy8gSXQgaXMgc3RpbGwgc2FmZSB3aGVuIGNhbGxlZCBmcm9tIFJlYWN0LlxuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB2YXIgZXJyID0gbmV3IEVycm9yKFxuICAgICAgJ0NhbGxpbmcgUHJvcFR5cGVzIHZhbGlkYXRvcnMgZGlyZWN0bHkgaXMgbm90IHN1cHBvcnRlZCBieSB0aGUgYHByb3AtdHlwZXNgIHBhY2thZ2UuICcgK1xuICAgICAgJ1VzZSBQcm9wVHlwZXMuY2hlY2tQcm9wVHlwZXMoKSB0byBjYWxsIHRoZW0uICcgK1xuICAgICAgJ1JlYWQgbW9yZSBhdCBodHRwOi8vZmIubWUvdXNlLWNoZWNrLXByb3AtdHlwZXMnXG4gICAgKTtcbiAgICBlcnIubmFtZSA9ICdJbnZhcmlhbnQgVmlvbGF0aW9uJztcbiAgICB0aHJvdyBlcnI7XG4gIH07XG4gIHNoaW0uaXNSZXF1aXJlZCA9IHNoaW07XG4gIGZ1bmN0aW9uIGdldFNoaW0oKSB7XG4gICAgcmV0dXJuIHNoaW07XG4gIH07XG4gIC8vIEltcG9ydGFudCFcbiAgLy8gS2VlcCB0aGlzIGxpc3QgaW4gc3luYyB3aXRoIHByb2R1Y3Rpb24gdmVyc2lvbiBpbiBgLi9mYWN0b3J5V2l0aFR5cGVDaGVja2Vycy5qc2AuXG4gIHZhciBSZWFjdFByb3BUeXBlcyA9IHtcbiAgICBhcnJheTogc2hpbSxcbiAgICBib29sOiBzaGltLFxuICAgIGZ1bmM6IHNoaW0sXG4gICAgbnVtYmVyOiBzaGltLFxuICAgIG9iamVjdDogc2hpbSxcbiAgICBzdHJpbmc6IHNoaW0sXG4gICAgc3ltYm9sOiBzaGltLFxuXG4gICAgYW55OiBzaGltLFxuICAgIGFycmF5T2Y6IGdldFNoaW0sXG4gICAgZWxlbWVudDogc2hpbSxcbiAgICBlbGVtZW50VHlwZTogc2hpbSxcbiAgICBpbnN0YW5jZU9mOiBnZXRTaGltLFxuICAgIG5vZGU6IHNoaW0sXG4gICAgb2JqZWN0T2Y6IGdldFNoaW0sXG4gICAgb25lT2Y6IGdldFNoaW0sXG4gICAgb25lT2ZUeXBlOiBnZXRTaGltLFxuICAgIHNoYXBlOiBnZXRTaGltLFxuICAgIGV4YWN0OiBnZXRTaGltLFxuXG4gICAgY2hlY2tQcm9wVHlwZXM6IGVtcHR5RnVuY3Rpb25XaXRoUmVzZXQsXG4gICAgcmVzZXRXYXJuaW5nQ2FjaGU6IGVtcHR5RnVuY3Rpb25cbiAgfTtcblxuICBSZWFjdFByb3BUeXBlcy5Qcm9wVHlwZXMgPSBSZWFjdFByb3BUeXBlcztcblxuICByZXR1cm4gUmVhY3RQcm9wVHlwZXM7XG59O1xuIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBSZWFjdFByb3BUeXBlc1NlY3JldCA9ICdTRUNSRVRfRE9fTk9UX1BBU1NfVEhJU19PUl9ZT1VfV0lMTF9CRV9GSVJFRCc7XG5cbm1vZHVsZS5leHBvcnRzID0gUmVhY3RQcm9wVHlwZXNTZWNyZXQ7XG4iLCJtb2R1bGUuZXhwb3J0cyA9IEFycmF5LmlzQXJyYXkgfHwgZnVuY3Rpb24gKGFycikge1xuICByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGFycikgPT0gJ1tvYmplY3QgQXJyYXldJztcbn07XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfZXh0ZW5kcygpIHtcbiAgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHtcbiAgICBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTtcblxuICAgICAgZm9yICh2YXIga2V5IGluIHNvdXJjZSkge1xuICAgICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkge1xuICAgICAgICAgIHRhcmdldFtrZXldID0gc291cmNlW2tleV07XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gdGFyZ2V0O1xuICB9O1xuXG4gIHJldHVybiBfZXh0ZW5kcy5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xufSIsImZ1bmN0aW9uIGlzQWJzb2x1dGUocGF0aG5hbWUpIHtcbiAgcmV0dXJuIHBhdGhuYW1lLmNoYXJBdCgwKSA9PT0gJy8nO1xufVxuXG4vLyBBYm91dCAxLjV4IGZhc3RlciB0aGFuIHRoZSB0d28tYXJnIHZlcnNpb24gb2YgQXJyYXkjc3BsaWNlKClcbmZ1bmN0aW9uIHNwbGljZU9uZShsaXN0LCBpbmRleCkge1xuICBmb3IgKHZhciBpID0gaW5kZXgsIGsgPSBpICsgMSwgbiA9IGxpc3QubGVuZ3RoOyBrIDwgbjsgaSArPSAxLCBrICs9IDEpIHtcbiAgICBsaXN0W2ldID0gbGlzdFtrXTtcbiAgfVxuXG4gIGxpc3QucG9wKCk7XG59XG5cbi8vIFRoaXMgaW1wbGVtZW50YXRpb24gaXMgYmFzZWQgaGVhdmlseSBvbiBub2RlJ3MgdXJsLnBhcnNlXG5mdW5jdGlvbiByZXNvbHZlUGF0aG5hbWUodG8pIHtcbiAgdmFyIGZyb20gPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6ICcnO1xuXG4gIHZhciB0b1BhcnRzID0gdG8gJiYgdG8uc3BsaXQoJy8nKSB8fCBbXTtcbiAgdmFyIGZyb21QYXJ0cyA9IGZyb20gJiYgZnJvbS5zcGxpdCgnLycpIHx8IFtdO1xuXG4gIHZhciBpc1RvQWJzID0gdG8gJiYgaXNBYnNvbHV0ZSh0byk7XG4gIHZhciBpc0Zyb21BYnMgPSBmcm9tICYmIGlzQWJzb2x1dGUoZnJvbSk7XG4gIHZhciBtdXN0RW5kQWJzID0gaXNUb0FicyB8fCBpc0Zyb21BYnM7XG5cbiAgaWYgKHRvICYmIGlzQWJzb2x1dGUodG8pKSB7XG4gICAgLy8gdG8gaXMgYWJzb2x1dGVcbiAgICBmcm9tUGFydHMgPSB0b1BhcnRzO1xuICB9IGVsc2UgaWYgKHRvUGFydHMubGVuZ3RoKSB7XG4gICAgLy8gdG8gaXMgcmVsYXRpdmUsIGRyb3AgdGhlIGZpbGVuYW1lXG4gICAgZnJvbVBhcnRzLnBvcCgpO1xuICAgIGZyb21QYXJ0cyA9IGZyb21QYXJ0cy5jb25jYXQodG9QYXJ0cyk7XG4gIH1cblxuICBpZiAoIWZyb21QYXJ0cy5sZW5ndGgpIHJldHVybiAnLyc7XG5cbiAgdmFyIGhhc1RyYWlsaW5nU2xhc2ggPSB2b2lkIDA7XG4gIGlmIChmcm9tUGFydHMubGVuZ3RoKSB7XG4gICAgdmFyIGxhc3QgPSBmcm9tUGFydHNbZnJvbVBhcnRzLmxlbmd0aCAtIDFdO1xuICAgIGhhc1RyYWlsaW5nU2xhc2ggPSBsYXN0ID09PSAnLicgfHwgbGFzdCA9PT0gJy4uJyB8fCBsYXN0ID09PSAnJztcbiAgfSBlbHNlIHtcbiAgICBoYXNUcmFpbGluZ1NsYXNoID0gZmFsc2U7XG4gIH1cblxuICB2YXIgdXAgPSAwO1xuICBmb3IgKHZhciBpID0gZnJvbVBhcnRzLmxlbmd0aDsgaSA+PSAwOyBpLS0pIHtcbiAgICB2YXIgcGFydCA9IGZyb21QYXJ0c1tpXTtcblxuICAgIGlmIChwYXJ0ID09PSAnLicpIHtcbiAgICAgIHNwbGljZU9uZShmcm9tUGFydHMsIGkpO1xuICAgIH0gZWxzZSBpZiAocGFydCA9PT0gJy4uJykge1xuICAgICAgc3BsaWNlT25lKGZyb21QYXJ0cywgaSk7XG4gICAgICB1cCsrO1xuICAgIH0gZWxzZSBpZiAodXApIHtcbiAgICAgIHNwbGljZU9uZShmcm9tUGFydHMsIGkpO1xuICAgICAgdXAtLTtcbiAgICB9XG4gIH1cblxuICBpZiAoIW11c3RFbmRBYnMpIGZvciAoOyB1cC0tOyB1cCkge1xuICAgIGZyb21QYXJ0cy51bnNoaWZ0KCcuLicpO1xuICB9aWYgKG11c3RFbmRBYnMgJiYgZnJvbVBhcnRzWzBdICE9PSAnJyAmJiAoIWZyb21QYXJ0c1swXSB8fCAhaXNBYnNvbHV0ZShmcm9tUGFydHNbMF0pKSkgZnJvbVBhcnRzLnVuc2hpZnQoJycpO1xuXG4gIHZhciByZXN1bHQgPSBmcm9tUGFydHMuam9pbignLycpO1xuXG4gIGlmIChoYXNUcmFpbGluZ1NsYXNoICYmIHJlc3VsdC5zdWJzdHIoLTEpICE9PSAnLycpIHJlc3VsdCArPSAnLyc7XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZXhwb3J0IGRlZmF1bHQgcmVzb2x2ZVBhdGhuYW1lOyIsInZhciBfdHlwZW9mID0gdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPT09IFwic3ltYm9sXCIgPyBmdW5jdGlvbiAob2JqKSB7IHJldHVybiB0eXBlb2Ygb2JqOyB9IDogZnVuY3Rpb24gKG9iaikgeyByZXR1cm4gb2JqICYmIHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvYmogIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG9iajsgfTtcblxuZnVuY3Rpb24gdmFsdWVFcXVhbChhLCBiKSB7XG4gIGlmIChhID09PSBiKSByZXR1cm4gdHJ1ZTtcblxuICBpZiAoYSA9PSBudWxsIHx8IGIgPT0gbnVsbCkgcmV0dXJuIGZhbHNlO1xuXG4gIGlmIChBcnJheS5pc0FycmF5KGEpKSB7XG4gICAgcmV0dXJuIEFycmF5LmlzQXJyYXkoYikgJiYgYS5sZW5ndGggPT09IGIubGVuZ3RoICYmIGEuZXZlcnkoZnVuY3Rpb24gKGl0ZW0sIGluZGV4KSB7XG4gICAgICByZXR1cm4gdmFsdWVFcXVhbChpdGVtLCBiW2luZGV4XSk7XG4gICAgfSk7XG4gIH1cblxuICB2YXIgYVR5cGUgPSB0eXBlb2YgYSA9PT0gJ3VuZGVmaW5lZCcgPyAndW5kZWZpbmVkJyA6IF90eXBlb2YoYSk7XG4gIHZhciBiVHlwZSA9IHR5cGVvZiBiID09PSAndW5kZWZpbmVkJyA/ICd1bmRlZmluZWQnIDogX3R5cGVvZihiKTtcblxuICBpZiAoYVR5cGUgIT09IGJUeXBlKSByZXR1cm4gZmFsc2U7XG5cbiAgaWYgKGFUeXBlID09PSAnb2JqZWN0Jykge1xuICAgIHZhciBhVmFsdWUgPSBhLnZhbHVlT2YoKTtcbiAgICB2YXIgYlZhbHVlID0gYi52YWx1ZU9mKCk7XG5cbiAgICBpZiAoYVZhbHVlICE9PSBhIHx8IGJWYWx1ZSAhPT0gYikgcmV0dXJuIHZhbHVlRXF1YWwoYVZhbHVlLCBiVmFsdWUpO1xuXG4gICAgdmFyIGFLZXlzID0gT2JqZWN0LmtleXMoYSk7XG4gICAgdmFyIGJLZXlzID0gT2JqZWN0LmtleXMoYik7XG5cbiAgICBpZiAoYUtleXMubGVuZ3RoICE9PSBiS2V5cy5sZW5ndGgpIHJldHVybiBmYWxzZTtcblxuICAgIHJldHVybiBhS2V5cy5ldmVyeShmdW5jdGlvbiAoa2V5KSB7XG4gICAgICByZXR1cm4gdmFsdWVFcXVhbChhW2tleV0sIGJba2V5XSk7XG4gICAgfSk7XG4gIH1cblxuICByZXR1cm4gZmFsc2U7XG59XG5cbmV4cG9ydCBkZWZhdWx0IHZhbHVlRXF1YWw7IiwidmFyIGlzUHJvZHVjdGlvbiA9IHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbic7XG52YXIgcHJlZml4ID0gJ0ludmFyaWFudCBmYWlsZWQnO1xuZnVuY3Rpb24gaW52YXJpYW50KGNvbmRpdGlvbiwgbWVzc2FnZSkge1xuICBpZiAoY29uZGl0aW9uKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgaWYgKGlzUHJvZHVjdGlvbikge1xuICAgIHRocm93IG5ldyBFcnJvcihwcmVmaXgpO1xuICB9IGVsc2Uge1xuICAgIHRocm93IG5ldyBFcnJvcihwcmVmaXggKyBcIjogXCIgKyAobWVzc2FnZSB8fCAnJykpO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IGludmFyaWFudDtcbiIsImltcG9ydCBfZXh0ZW5kcyBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzJztcbmltcG9ydCByZXNvbHZlUGF0aG5hbWUgZnJvbSAncmVzb2x2ZS1wYXRobmFtZSc7XG5pbXBvcnQgdmFsdWVFcXVhbCBmcm9tICd2YWx1ZS1lcXVhbCc7XG5pbXBvcnQgd2FybmluZyBmcm9tICd0aW55LXdhcm5pbmcnO1xuaW1wb3J0IGludmFyaWFudCBmcm9tICd0aW55LWludmFyaWFudCc7XG5cbmZ1bmN0aW9uIGFkZExlYWRpbmdTbGFzaChwYXRoKSB7XG4gIHJldHVybiBwYXRoLmNoYXJBdCgwKSA9PT0gJy8nID8gcGF0aCA6ICcvJyArIHBhdGg7XG59XG5mdW5jdGlvbiBzdHJpcExlYWRpbmdTbGFzaChwYXRoKSB7XG4gIHJldHVybiBwYXRoLmNoYXJBdCgwKSA9PT0gJy8nID8gcGF0aC5zdWJzdHIoMSkgOiBwYXRoO1xufVxuZnVuY3Rpb24gaGFzQmFzZW5hbWUocGF0aCwgcHJlZml4KSB7XG4gIHJldHVybiBuZXcgUmVnRXhwKCdeJyArIHByZWZpeCArICcoXFxcXC98XFxcXD98I3wkKScsICdpJykudGVzdChwYXRoKTtcbn1cbmZ1bmN0aW9uIHN0cmlwQmFzZW5hbWUocGF0aCwgcHJlZml4KSB7XG4gIHJldHVybiBoYXNCYXNlbmFtZShwYXRoLCBwcmVmaXgpID8gcGF0aC5zdWJzdHIocHJlZml4Lmxlbmd0aCkgOiBwYXRoO1xufVxuZnVuY3Rpb24gc3RyaXBUcmFpbGluZ1NsYXNoKHBhdGgpIHtcbiAgcmV0dXJuIHBhdGguY2hhckF0KHBhdGgubGVuZ3RoIC0gMSkgPT09ICcvJyA/IHBhdGguc2xpY2UoMCwgLTEpIDogcGF0aDtcbn1cbmZ1bmN0aW9uIHBhcnNlUGF0aChwYXRoKSB7XG4gIHZhciBwYXRobmFtZSA9IHBhdGggfHwgJy8nO1xuICB2YXIgc2VhcmNoID0gJyc7XG4gIHZhciBoYXNoID0gJyc7XG4gIHZhciBoYXNoSW5kZXggPSBwYXRobmFtZS5pbmRleE9mKCcjJyk7XG5cbiAgaWYgKGhhc2hJbmRleCAhPT0gLTEpIHtcbiAgICBoYXNoID0gcGF0aG5hbWUuc3Vic3RyKGhhc2hJbmRleCk7XG4gICAgcGF0aG5hbWUgPSBwYXRobmFtZS5zdWJzdHIoMCwgaGFzaEluZGV4KTtcbiAgfVxuXG4gIHZhciBzZWFyY2hJbmRleCA9IHBhdGhuYW1lLmluZGV4T2YoJz8nKTtcblxuICBpZiAoc2VhcmNoSW5kZXggIT09IC0xKSB7XG4gICAgc2VhcmNoID0gcGF0aG5hbWUuc3Vic3RyKHNlYXJjaEluZGV4KTtcbiAgICBwYXRobmFtZSA9IHBhdGhuYW1lLnN1YnN0cigwLCBzZWFyY2hJbmRleCk7XG4gIH1cblxuICByZXR1cm4ge1xuICAgIHBhdGhuYW1lOiBwYXRobmFtZSxcbiAgICBzZWFyY2g6IHNlYXJjaCA9PT0gJz8nID8gJycgOiBzZWFyY2gsXG4gICAgaGFzaDogaGFzaCA9PT0gJyMnID8gJycgOiBoYXNoXG4gIH07XG59XG5mdW5jdGlvbiBjcmVhdGVQYXRoKGxvY2F0aW9uKSB7XG4gIHZhciBwYXRobmFtZSA9IGxvY2F0aW9uLnBhdGhuYW1lLFxuICAgICAgc2VhcmNoID0gbG9jYXRpb24uc2VhcmNoLFxuICAgICAgaGFzaCA9IGxvY2F0aW9uLmhhc2g7XG4gIHZhciBwYXRoID0gcGF0aG5hbWUgfHwgJy8nO1xuICBpZiAoc2VhcmNoICYmIHNlYXJjaCAhPT0gJz8nKSBwYXRoICs9IHNlYXJjaC5jaGFyQXQoMCkgPT09ICc/JyA/IHNlYXJjaCA6IFwiP1wiICsgc2VhcmNoO1xuICBpZiAoaGFzaCAmJiBoYXNoICE9PSAnIycpIHBhdGggKz0gaGFzaC5jaGFyQXQoMCkgPT09ICcjJyA/IGhhc2ggOiBcIiNcIiArIGhhc2g7XG4gIHJldHVybiBwYXRoO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVMb2NhdGlvbihwYXRoLCBzdGF0ZSwga2V5LCBjdXJyZW50TG9jYXRpb24pIHtcbiAgdmFyIGxvY2F0aW9uO1xuXG4gIGlmICh0eXBlb2YgcGF0aCA9PT0gJ3N0cmluZycpIHtcbiAgICAvLyBUd28tYXJnIGZvcm06IHB1c2gocGF0aCwgc3RhdGUpXG4gICAgbG9jYXRpb24gPSBwYXJzZVBhdGgocGF0aCk7XG4gICAgbG9jYXRpb24uc3RhdGUgPSBzdGF0ZTtcbiAgfSBlbHNlIHtcbiAgICAvLyBPbmUtYXJnIGZvcm06IHB1c2gobG9jYXRpb24pXG4gICAgbG9jYXRpb24gPSBfZXh0ZW5kcyh7fSwgcGF0aCk7XG4gICAgaWYgKGxvY2F0aW9uLnBhdGhuYW1lID09PSB1bmRlZmluZWQpIGxvY2F0aW9uLnBhdGhuYW1lID0gJyc7XG5cbiAgICBpZiAobG9jYXRpb24uc2VhcmNoKSB7XG4gICAgICBpZiAobG9jYXRpb24uc2VhcmNoLmNoYXJBdCgwKSAhPT0gJz8nKSBsb2NhdGlvbi5zZWFyY2ggPSAnPycgKyBsb2NhdGlvbi5zZWFyY2g7XG4gICAgfSBlbHNlIHtcbiAgICAgIGxvY2F0aW9uLnNlYXJjaCA9ICcnO1xuICAgIH1cblxuICAgIGlmIChsb2NhdGlvbi5oYXNoKSB7XG4gICAgICBpZiAobG9jYXRpb24uaGFzaC5jaGFyQXQoMCkgIT09ICcjJykgbG9jYXRpb24uaGFzaCA9ICcjJyArIGxvY2F0aW9uLmhhc2g7XG4gICAgfSBlbHNlIHtcbiAgICAgIGxvY2F0aW9uLmhhc2ggPSAnJztcbiAgICB9XG5cbiAgICBpZiAoc3RhdGUgIT09IHVuZGVmaW5lZCAmJiBsb2NhdGlvbi5zdGF0ZSA9PT0gdW5kZWZpbmVkKSBsb2NhdGlvbi5zdGF0ZSA9IHN0YXRlO1xuICB9XG5cbiAgdHJ5IHtcbiAgICBsb2NhdGlvbi5wYXRobmFtZSA9IGRlY29kZVVSSShsb2NhdGlvbi5wYXRobmFtZSk7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICBpZiAoZSBpbnN0YW5jZW9mIFVSSUVycm9yKSB7XG4gICAgICB0aHJvdyBuZXcgVVJJRXJyb3IoJ1BhdGhuYW1lIFwiJyArIGxvY2F0aW9uLnBhdGhuYW1lICsgJ1wiIGNvdWxkIG5vdCBiZSBkZWNvZGVkLiAnICsgJ1RoaXMgaXMgbGlrZWx5IGNhdXNlZCBieSBhbiBpbnZhbGlkIHBlcmNlbnQtZW5jb2RpbmcuJyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRocm93IGU7XG4gICAgfVxuICB9XG5cbiAgaWYgKGtleSkgbG9jYXRpb24ua2V5ID0ga2V5O1xuXG4gIGlmIChjdXJyZW50TG9jYXRpb24pIHtcbiAgICAvLyBSZXNvbHZlIGluY29tcGxldGUvcmVsYXRpdmUgcGF0aG5hbWUgcmVsYXRpdmUgdG8gY3VycmVudCBsb2NhdGlvbi5cbiAgICBpZiAoIWxvY2F0aW9uLnBhdGhuYW1lKSB7XG4gICAgICBsb2NhdGlvbi5wYXRobmFtZSA9IGN1cnJlbnRMb2NhdGlvbi5wYXRobmFtZTtcbiAgICB9IGVsc2UgaWYgKGxvY2F0aW9uLnBhdGhuYW1lLmNoYXJBdCgwKSAhPT0gJy8nKSB7XG4gICAgICBsb2NhdGlvbi5wYXRobmFtZSA9IHJlc29sdmVQYXRobmFtZShsb2NhdGlvbi5wYXRobmFtZSwgY3VycmVudExvY2F0aW9uLnBhdGhuYW1lKTtcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgLy8gV2hlbiB0aGVyZSBpcyBubyBwcmlvciBsb2NhdGlvbiBhbmQgcGF0aG5hbWUgaXMgZW1wdHksIHNldCBpdCB0byAvXG4gICAgaWYgKCFsb2NhdGlvbi5wYXRobmFtZSkge1xuICAgICAgbG9jYXRpb24ucGF0aG5hbWUgPSAnLyc7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGxvY2F0aW9uO1xufVxuZnVuY3Rpb24gbG9jYXRpb25zQXJlRXF1YWwoYSwgYikge1xuICByZXR1cm4gYS5wYXRobmFtZSA9PT0gYi5wYXRobmFtZSAmJiBhLnNlYXJjaCA9PT0gYi5zZWFyY2ggJiYgYS5oYXNoID09PSBiLmhhc2ggJiYgYS5rZXkgPT09IGIua2V5ICYmIHZhbHVlRXF1YWwoYS5zdGF0ZSwgYi5zdGF0ZSk7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyKCkge1xuICB2YXIgcHJvbXB0ID0gbnVsbDtcblxuICBmdW5jdGlvbiBzZXRQcm9tcHQobmV4dFByb21wdCkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcocHJvbXB0ID09IG51bGwsICdBIGhpc3Rvcnkgc3VwcG9ydHMgb25seSBvbmUgcHJvbXB0IGF0IGEgdGltZScpIDogdm9pZCAwO1xuICAgIHByb21wdCA9IG5leHRQcm9tcHQ7XG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIGlmIChwcm9tcHQgPT09IG5leHRQcm9tcHQpIHByb21wdCA9IG51bGw7XG4gICAgfTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgY2FsbGJhY2spIHtcbiAgICAvLyBUT0RPOiBJZiBhbm90aGVyIHRyYW5zaXRpb24gc3RhcnRzIHdoaWxlIHdlJ3JlIHN0aWxsIGNvbmZpcm1pbmdcbiAgICAvLyB0aGUgcHJldmlvdXMgb25lLCB3ZSBtYXkgZW5kIHVwIGluIGEgd2VpcmQgc3RhdGUuIEZpZ3VyZSBvdXQgdGhlXG4gICAgLy8gYmVzdCB3YXkgdG8gaGFuZGxlIHRoaXMuXG4gICAgaWYgKHByb21wdCAhPSBudWxsKSB7XG4gICAgICB2YXIgcmVzdWx0ID0gdHlwZW9mIHByb21wdCA9PT0gJ2Z1bmN0aW9uJyA/IHByb21wdChsb2NhdGlvbiwgYWN0aW9uKSA6IHByb21wdDtcblxuICAgICAgaWYgKHR5cGVvZiByZXN1bHQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIGlmICh0eXBlb2YgZ2V0VXNlckNvbmZpcm1hdGlvbiA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgIGdldFVzZXJDb25maXJtYXRpb24ocmVzdWx0LCBjYWxsYmFjayk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhmYWxzZSwgJ0EgaGlzdG9yeSBuZWVkcyBhIGdldFVzZXJDb25maXJtYXRpb24gZnVuY3Rpb24gaW4gb3JkZXIgdG8gdXNlIGEgcHJvbXB0IG1lc3NhZ2UnKSA6IHZvaWQgMDtcbiAgICAgICAgICBjYWxsYmFjayh0cnVlKTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gUmV0dXJuIGZhbHNlIGZyb20gYSB0cmFuc2l0aW9uIGhvb2sgdG8gY2FuY2VsIHRoZSB0cmFuc2l0aW9uLlxuICAgICAgICBjYWxsYmFjayhyZXN1bHQgIT09IGZhbHNlKTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgY2FsbGJhY2sodHJ1ZSk7XG4gICAgfVxuICB9XG5cbiAgdmFyIGxpc3RlbmVycyA9IFtdO1xuXG4gIGZ1bmN0aW9uIGFwcGVuZExpc3RlbmVyKGZuKSB7XG4gICAgdmFyIGlzQWN0aXZlID0gdHJ1ZTtcblxuICAgIGZ1bmN0aW9uIGxpc3RlbmVyKCkge1xuICAgICAgaWYgKGlzQWN0aXZlKSBmbi5hcHBseSh2b2lkIDAsIGFyZ3VtZW50cyk7XG4gICAgfVxuXG4gICAgbGlzdGVuZXJzLnB1c2gobGlzdGVuZXIpO1xuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICBpc0FjdGl2ZSA9IGZhbHNlO1xuICAgICAgbGlzdGVuZXJzID0gbGlzdGVuZXJzLmZpbHRlcihmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgICByZXR1cm4gaXRlbSAhPT0gbGlzdGVuZXI7XG4gICAgICB9KTtcbiAgICB9O1xuICB9XG5cbiAgZnVuY3Rpb24gbm90aWZ5TGlzdGVuZXJzKCkge1xuICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICB9XG5cbiAgICBsaXN0ZW5lcnMuZm9yRWFjaChmdW5jdGlvbiAobGlzdGVuZXIpIHtcbiAgICAgIHJldHVybiBsaXN0ZW5lci5hcHBseSh2b2lkIDAsIGFyZ3MpO1xuICAgIH0pO1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBzZXRQcm9tcHQ6IHNldFByb21wdCxcbiAgICBjb25maXJtVHJhbnNpdGlvblRvOiBjb25maXJtVHJhbnNpdGlvblRvLFxuICAgIGFwcGVuZExpc3RlbmVyOiBhcHBlbmRMaXN0ZW5lcixcbiAgICBub3RpZnlMaXN0ZW5lcnM6IG5vdGlmeUxpc3RlbmVyc1xuICB9O1xufVxuXG52YXIgY2FuVXNlRE9NID0gISEodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiYgd2luZG93LmRvY3VtZW50ICYmIHdpbmRvdy5kb2N1bWVudC5jcmVhdGVFbGVtZW50KTtcbmZ1bmN0aW9uIGdldENvbmZpcm1hdGlvbihtZXNzYWdlLCBjYWxsYmFjaykge1xuICBjYWxsYmFjayh3aW5kb3cuY29uZmlybShtZXNzYWdlKSk7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tYWxlcnRcbn1cbi8qKlxuICogUmV0dXJucyB0cnVlIGlmIHRoZSBIVE1MNSBoaXN0b3J5IEFQSSBpcyBzdXBwb3J0ZWQuIFRha2VuIGZyb20gTW9kZXJuaXpyLlxuICpcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9Nb2Rlcm5penIvTW9kZXJuaXpyL2Jsb2IvbWFzdGVyL0xJQ0VOU0VcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9Nb2Rlcm5penIvTW9kZXJuaXpyL2Jsb2IvbWFzdGVyL2ZlYXR1cmUtZGV0ZWN0cy9oaXN0b3J5LmpzXG4gKiBjaGFuZ2VkIHRvIGF2b2lkIGZhbHNlIG5lZ2F0aXZlcyBmb3IgV2luZG93cyBQaG9uZXM6IGh0dHBzOi8vZ2l0aHViLmNvbS9yZWFjdGpzL3JlYWN0LXJvdXRlci9pc3N1ZXMvNTg2XG4gKi9cblxuZnVuY3Rpb24gc3VwcG9ydHNIaXN0b3J5KCkge1xuICB2YXIgdWEgPSB3aW5kb3cubmF2aWdhdG9yLnVzZXJBZ2VudDtcbiAgaWYgKCh1YS5pbmRleE9mKCdBbmRyb2lkIDIuJykgIT09IC0xIHx8IHVhLmluZGV4T2YoJ0FuZHJvaWQgNC4wJykgIT09IC0xKSAmJiB1YS5pbmRleE9mKCdNb2JpbGUgU2FmYXJpJykgIT09IC0xICYmIHVhLmluZGV4T2YoJ0Nocm9tZScpID09PSAtMSAmJiB1YS5pbmRleE9mKCdXaW5kb3dzIFBob25lJykgPT09IC0xKSByZXR1cm4gZmFsc2U7XG4gIHJldHVybiB3aW5kb3cuaGlzdG9yeSAmJiAncHVzaFN0YXRlJyBpbiB3aW5kb3cuaGlzdG9yeTtcbn1cbi8qKlxuICogUmV0dXJucyB0cnVlIGlmIGJyb3dzZXIgZmlyZXMgcG9wc3RhdGUgb24gaGFzaCBjaGFuZ2UuXG4gKiBJRTEwIGFuZCBJRTExIGRvIG5vdC5cbiAqL1xuXG5mdW5jdGlvbiBzdXBwb3J0c1BvcFN0YXRlT25IYXNoQ2hhbmdlKCkge1xuICByZXR1cm4gd2luZG93Lm5hdmlnYXRvci51c2VyQWdlbnQuaW5kZXhPZignVHJpZGVudCcpID09PSAtMTtcbn1cbi8qKlxuICogUmV0dXJucyBmYWxzZSBpZiB1c2luZyBnbyhuKSB3aXRoIGhhc2ggaGlzdG9yeSBjYXVzZXMgYSBmdWxsIHBhZ2UgcmVsb2FkLlxuICovXG5cbmZ1bmN0aW9uIHN1cHBvcnRzR29XaXRob3V0UmVsb2FkVXNpbmdIYXNoKCkge1xuICByZXR1cm4gd2luZG93Lm5hdmlnYXRvci51c2VyQWdlbnQuaW5kZXhPZignRmlyZWZveCcpID09PSAtMTtcbn1cbi8qKlxuICogUmV0dXJucyB0cnVlIGlmIGEgZ2l2ZW4gcG9wc3RhdGUgZXZlbnQgaXMgYW4gZXh0cmFuZW91cyBXZWJLaXQgZXZlbnQuXG4gKiBBY2NvdW50cyBmb3IgdGhlIGZhY3QgdGhhdCBDaHJvbWUgb24gaU9TIGZpcmVzIHJlYWwgcG9wc3RhdGUgZXZlbnRzXG4gKiBjb250YWluaW5nIHVuZGVmaW5lZCBzdGF0ZSB3aGVuIHByZXNzaW5nIHRoZSBiYWNrIGJ1dHRvbi5cbiAqL1xuXG5mdW5jdGlvbiBpc0V4dHJhbmVvdXNQb3BzdGF0ZUV2ZW50KGV2ZW50KSB7XG4gIGV2ZW50LnN0YXRlID09PSB1bmRlZmluZWQgJiYgbmF2aWdhdG9yLnVzZXJBZ2VudC5pbmRleE9mKCdDcmlPUycpID09PSAtMTtcbn1cblxudmFyIFBvcFN0YXRlRXZlbnQgPSAncG9wc3RhdGUnO1xudmFyIEhhc2hDaGFuZ2VFdmVudCA9ICdoYXNoY2hhbmdlJztcblxuZnVuY3Rpb24gZ2V0SGlzdG9yeVN0YXRlKCkge1xuICB0cnkge1xuICAgIHJldHVybiB3aW5kb3cuaGlzdG9yeS5zdGF0ZSB8fCB7fTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIC8vIElFIDExIHNvbWV0aW1lcyB0aHJvd3Mgd2hlbiBhY2Nlc3Npbmcgd2luZG93Lmhpc3Rvcnkuc3RhdGVcbiAgICAvLyBTZWUgaHR0cHM6Ly9naXRodWIuY29tL1JlYWN0VHJhaW5pbmcvaGlzdG9yeS9wdWxsLzI4OVxuICAgIHJldHVybiB7fTtcbiAgfVxufVxuLyoqXG4gKiBDcmVhdGVzIGEgaGlzdG9yeSBvYmplY3QgdGhhdCB1c2VzIHRoZSBIVE1MNSBoaXN0b3J5IEFQSSBpbmNsdWRpbmdcbiAqIHB1c2hTdGF0ZSwgcmVwbGFjZVN0YXRlLCBhbmQgdGhlIHBvcHN0YXRlIGV2ZW50LlxuICovXG5cblxuZnVuY3Rpb24gY3JlYXRlQnJvd3Nlckhpc3RvcnkocHJvcHMpIHtcbiAgaWYgKHByb3BzID09PSB2b2lkIDApIHtcbiAgICBwcm9wcyA9IHt9O1xuICB9XG5cbiAgIWNhblVzZURPTSA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgJ0Jyb3dzZXIgaGlzdG9yeSBuZWVkcyBhIERPTScpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgdmFyIGdsb2JhbEhpc3RvcnkgPSB3aW5kb3cuaGlzdG9yeTtcbiAgdmFyIGNhblVzZUhpc3RvcnkgPSBzdXBwb3J0c0hpc3RvcnkoKTtcbiAgdmFyIG5lZWRzSGFzaENoYW5nZUxpc3RlbmVyID0gIXN1cHBvcnRzUG9wU3RhdGVPbkhhc2hDaGFuZ2UoKTtcbiAgdmFyIF9wcm9wcyA9IHByb3BzLFxuICAgICAgX3Byb3BzJGZvcmNlUmVmcmVzaCA9IF9wcm9wcy5mb3JjZVJlZnJlc2gsXG4gICAgICBmb3JjZVJlZnJlc2ggPSBfcHJvcHMkZm9yY2VSZWZyZXNoID09PSB2b2lkIDAgPyBmYWxzZSA6IF9wcm9wcyRmb3JjZVJlZnJlc2gsXG4gICAgICBfcHJvcHMkZ2V0VXNlckNvbmZpcm0gPSBfcHJvcHMuZ2V0VXNlckNvbmZpcm1hdGlvbixcbiAgICAgIGdldFVzZXJDb25maXJtYXRpb24gPSBfcHJvcHMkZ2V0VXNlckNvbmZpcm0gPT09IHZvaWQgMCA/IGdldENvbmZpcm1hdGlvbiA6IF9wcm9wcyRnZXRVc2VyQ29uZmlybSxcbiAgICAgIF9wcm9wcyRrZXlMZW5ndGggPSBfcHJvcHMua2V5TGVuZ3RoLFxuICAgICAga2V5TGVuZ3RoID0gX3Byb3BzJGtleUxlbmd0aCA9PT0gdm9pZCAwID8gNiA6IF9wcm9wcyRrZXlMZW5ndGg7XG4gIHZhciBiYXNlbmFtZSA9IHByb3BzLmJhc2VuYW1lID8gc3RyaXBUcmFpbGluZ1NsYXNoKGFkZExlYWRpbmdTbGFzaChwcm9wcy5iYXNlbmFtZSkpIDogJyc7XG5cbiAgZnVuY3Rpb24gZ2V0RE9NTG9jYXRpb24oaGlzdG9yeVN0YXRlKSB7XG4gICAgdmFyIF9yZWYgPSBoaXN0b3J5U3RhdGUgfHwge30sXG4gICAgICAgIGtleSA9IF9yZWYua2V5LFxuICAgICAgICBzdGF0ZSA9IF9yZWYuc3RhdGU7XG5cbiAgICB2YXIgX3dpbmRvdyRsb2NhdGlvbiA9IHdpbmRvdy5sb2NhdGlvbixcbiAgICAgICAgcGF0aG5hbWUgPSBfd2luZG93JGxvY2F0aW9uLnBhdGhuYW1lLFxuICAgICAgICBzZWFyY2ggPSBfd2luZG93JGxvY2F0aW9uLnNlYXJjaCxcbiAgICAgICAgaGFzaCA9IF93aW5kb3ckbG9jYXRpb24uaGFzaDtcbiAgICB2YXIgcGF0aCA9IHBhdGhuYW1lICsgc2VhcmNoICsgaGFzaDtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCFiYXNlbmFtZSB8fCBoYXNCYXNlbmFtZShwYXRoLCBiYXNlbmFtZSksICdZb3UgYXJlIGF0dGVtcHRpbmcgdG8gdXNlIGEgYmFzZW5hbWUgb24gYSBwYWdlIHdob3NlIFVSTCBwYXRoIGRvZXMgbm90IGJlZ2luICcgKyAnd2l0aCB0aGUgYmFzZW5hbWUuIEV4cGVjdGVkIHBhdGggXCInICsgcGF0aCArICdcIiB0byBiZWdpbiB3aXRoIFwiJyArIGJhc2VuYW1lICsgJ1wiLicpIDogdm9pZCAwO1xuICAgIGlmIChiYXNlbmFtZSkgcGF0aCA9IHN0cmlwQmFzZW5hbWUocGF0aCwgYmFzZW5hbWUpO1xuICAgIHJldHVybiBjcmVhdGVMb2NhdGlvbihwYXRoLCBzdGF0ZSwga2V5KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGNyZWF0ZUtleSgpIHtcbiAgICByZXR1cm4gTWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc3Vic3RyKDIsIGtleUxlbmd0aCk7XG4gIH1cblxuICB2YXIgdHJhbnNpdGlvbk1hbmFnZXIgPSBjcmVhdGVUcmFuc2l0aW9uTWFuYWdlcigpO1xuXG4gIGZ1bmN0aW9uIHNldFN0YXRlKG5leHRTdGF0ZSkge1xuICAgIF9leHRlbmRzKGhpc3RvcnksIG5leHRTdGF0ZSk7XG5cbiAgICBoaXN0b3J5Lmxlbmd0aCA9IGdsb2JhbEhpc3RvcnkubGVuZ3RoO1xuICAgIHRyYW5zaXRpb25NYW5hZ2VyLm5vdGlmeUxpc3RlbmVycyhoaXN0b3J5LmxvY2F0aW9uLCBoaXN0b3J5LmFjdGlvbik7XG4gIH1cblxuICBmdW5jdGlvbiBoYW5kbGVQb3BTdGF0ZShldmVudCkge1xuICAgIC8vIElnbm9yZSBleHRyYW5lb3VzIHBvcHN0YXRlIGV2ZW50cyBpbiBXZWJLaXQuXG4gICAgaWYgKGlzRXh0cmFuZW91c1BvcHN0YXRlRXZlbnQoZXZlbnQpKSByZXR1cm47XG4gICAgaGFuZGxlUG9wKGdldERPTUxvY2F0aW9uKGV2ZW50LnN0YXRlKSk7XG4gIH1cblxuICBmdW5jdGlvbiBoYW5kbGVIYXNoQ2hhbmdlKCkge1xuICAgIGhhbmRsZVBvcChnZXRET01Mb2NhdGlvbihnZXRIaXN0b3J5U3RhdGUoKSkpO1xuICB9XG5cbiAgdmFyIGZvcmNlTmV4dFBvcCA9IGZhbHNlO1xuXG4gIGZ1bmN0aW9uIGhhbmRsZVBvcChsb2NhdGlvbikge1xuICAgIGlmIChmb3JjZU5leHRQb3ApIHtcbiAgICAgIGZvcmNlTmV4dFBvcCA9IGZhbHNlO1xuICAgICAgc2V0U3RhdGUoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIGFjdGlvbiA9ICdQT1AnO1xuICAgICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgICAgaWYgKG9rKSB7XG4gICAgICAgICAgc2V0U3RhdGUoe1xuICAgICAgICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICAgICAgICBsb2NhdGlvbjogbG9jYXRpb25cbiAgICAgICAgICB9KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXZlcnRQb3AobG9jYXRpb24pO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiByZXZlcnRQb3AoZnJvbUxvY2F0aW9uKSB7XG4gICAgdmFyIHRvTG9jYXRpb24gPSBoaXN0b3J5LmxvY2F0aW9uOyAvLyBUT0RPOiBXZSBjb3VsZCBwcm9iYWJseSBtYWtlIHRoaXMgbW9yZSByZWxpYWJsZSBieVxuICAgIC8vIGtlZXBpbmcgYSBsaXN0IG9mIGtleXMgd2UndmUgc2VlbiBpbiBzZXNzaW9uU3RvcmFnZS5cbiAgICAvLyBJbnN0ZWFkLCB3ZSBqdXN0IGRlZmF1bHQgdG8gMCBmb3Iga2V5cyB3ZSBkb24ndCBrbm93LlxuXG4gICAgdmFyIHRvSW5kZXggPSBhbGxLZXlzLmluZGV4T2YodG9Mb2NhdGlvbi5rZXkpO1xuICAgIGlmICh0b0luZGV4ID09PSAtMSkgdG9JbmRleCA9IDA7XG4gICAgdmFyIGZyb21JbmRleCA9IGFsbEtleXMuaW5kZXhPZihmcm9tTG9jYXRpb24ua2V5KTtcbiAgICBpZiAoZnJvbUluZGV4ID09PSAtMSkgZnJvbUluZGV4ID0gMDtcbiAgICB2YXIgZGVsdGEgPSB0b0luZGV4IC0gZnJvbUluZGV4O1xuXG4gICAgaWYgKGRlbHRhKSB7XG4gICAgICBmb3JjZU5leHRQb3AgPSB0cnVlO1xuICAgICAgZ28oZGVsdGEpO1xuICAgIH1cbiAgfVxuXG4gIHZhciBpbml0aWFsTG9jYXRpb24gPSBnZXRET01Mb2NhdGlvbihnZXRIaXN0b3J5U3RhdGUoKSk7XG4gIHZhciBhbGxLZXlzID0gW2luaXRpYWxMb2NhdGlvbi5rZXldOyAvLyBQdWJsaWMgaW50ZXJmYWNlXG5cbiAgZnVuY3Rpb24gY3JlYXRlSHJlZihsb2NhdGlvbikge1xuICAgIHJldHVybiBiYXNlbmFtZSArIGNyZWF0ZVBhdGgobG9jYXRpb24pO1xuICB9XG5cbiAgZnVuY3Rpb24gcHVzaChwYXRoLCBzdGF0ZSkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISh0eXBlb2YgcGF0aCA9PT0gJ29iamVjdCcgJiYgcGF0aC5zdGF0ZSAhPT0gdW5kZWZpbmVkICYmIHN0YXRlICE9PSB1bmRlZmluZWQpLCAnWW91IHNob3VsZCBhdm9pZCBwcm92aWRpbmcgYSAybmQgc3RhdGUgYXJndW1lbnQgdG8gcHVzaCB3aGVuIHRoZSAxc3QgJyArICdhcmd1bWVudCBpcyBhIGxvY2F0aW9uLWxpa2Ugb2JqZWN0IHRoYXQgYWxyZWFkeSBoYXMgc3RhdGU7IGl0IGlzIGlnbm9yZWQnKSA6IHZvaWQgMDtcbiAgICB2YXIgYWN0aW9uID0gJ1BVU0gnO1xuICAgIHZhciBsb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHN0YXRlLCBjcmVhdGVLZXkoKSwgaGlzdG9yeS5sb2NhdGlvbik7XG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgIGlmICghb2spIHJldHVybjtcbiAgICAgIHZhciBocmVmID0gY3JlYXRlSHJlZihsb2NhdGlvbik7XG4gICAgICB2YXIga2V5ID0gbG9jYXRpb24ua2V5LFxuICAgICAgICAgIHN0YXRlID0gbG9jYXRpb24uc3RhdGU7XG5cbiAgICAgIGlmIChjYW5Vc2VIaXN0b3J5KSB7XG4gICAgICAgIGdsb2JhbEhpc3RvcnkucHVzaFN0YXRlKHtcbiAgICAgICAgICBrZXk6IGtleSxcbiAgICAgICAgICBzdGF0ZTogc3RhdGVcbiAgICAgICAgfSwgbnVsbCwgaHJlZik7XG5cbiAgICAgICAgaWYgKGZvcmNlUmVmcmVzaCkge1xuICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gaHJlZjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB2YXIgcHJldkluZGV4ID0gYWxsS2V5cy5pbmRleE9mKGhpc3RvcnkubG9jYXRpb24ua2V5KTtcbiAgICAgICAgICB2YXIgbmV4dEtleXMgPSBhbGxLZXlzLnNsaWNlKDAsIHByZXZJbmRleCA9PT0gLTEgPyAwIDogcHJldkluZGV4ICsgMSk7XG4gICAgICAgICAgbmV4dEtleXMucHVzaChsb2NhdGlvbi5rZXkpO1xuICAgICAgICAgIGFsbEtleXMgPSBuZXh0S2V5cztcbiAgICAgICAgICBzZXRTdGF0ZSh7XG4gICAgICAgICAgICBhY3Rpb246IGFjdGlvbixcbiAgICAgICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvblxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKHN0YXRlID09PSB1bmRlZmluZWQsICdCcm93c2VyIGhpc3RvcnkgY2Fubm90IHB1c2ggc3RhdGUgaW4gYnJvd3NlcnMgdGhhdCBkbyBub3Qgc3VwcG9ydCBIVE1MNSBoaXN0b3J5JykgOiB2b2lkIDA7XG4gICAgICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gaHJlZjtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHJlcGxhY2UocGF0aCwgc3RhdGUpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCEodHlwZW9mIHBhdGggPT09ICdvYmplY3QnICYmIHBhdGguc3RhdGUgIT09IHVuZGVmaW5lZCAmJiBzdGF0ZSAhPT0gdW5kZWZpbmVkKSwgJ1lvdSBzaG91bGQgYXZvaWQgcHJvdmlkaW5nIGEgMm5kIHN0YXRlIGFyZ3VtZW50IHRvIHJlcGxhY2Ugd2hlbiB0aGUgMXN0ICcgKyAnYXJndW1lbnQgaXMgYSBsb2NhdGlvbi1saWtlIG9iamVjdCB0aGF0IGFscmVhZHkgaGFzIHN0YXRlOyBpdCBpcyBpZ25vcmVkJykgOiB2b2lkIDA7XG4gICAgdmFyIGFjdGlvbiA9ICdSRVBMQUNFJztcbiAgICB2YXIgbG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihwYXRoLCBzdGF0ZSwgY3JlYXRlS2V5KCksIGhpc3RvcnkubG9jYXRpb24pO1xuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICBpZiAoIW9rKSByZXR1cm47XG4gICAgICB2YXIgaHJlZiA9IGNyZWF0ZUhyZWYobG9jYXRpb24pO1xuICAgICAgdmFyIGtleSA9IGxvY2F0aW9uLmtleSxcbiAgICAgICAgICBzdGF0ZSA9IGxvY2F0aW9uLnN0YXRlO1xuXG4gICAgICBpZiAoY2FuVXNlSGlzdG9yeSkge1xuICAgICAgICBnbG9iYWxIaXN0b3J5LnJlcGxhY2VTdGF0ZSh7XG4gICAgICAgICAga2V5OiBrZXksXG4gICAgICAgICAgc3RhdGU6IHN0YXRlXG4gICAgICAgIH0sIG51bGwsIGhyZWYpO1xuXG4gICAgICAgIGlmIChmb3JjZVJlZnJlc2gpIHtcbiAgICAgICAgICB3aW5kb3cubG9jYXRpb24ucmVwbGFjZShocmVmKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB2YXIgcHJldkluZGV4ID0gYWxsS2V5cy5pbmRleE9mKGhpc3RvcnkubG9jYXRpb24ua2V5KTtcbiAgICAgICAgICBpZiAocHJldkluZGV4ICE9PSAtMSkgYWxsS2V5c1twcmV2SW5kZXhdID0gbG9jYXRpb24ua2V5O1xuICAgICAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uXG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoc3RhdGUgPT09IHVuZGVmaW5lZCwgJ0Jyb3dzZXIgaGlzdG9yeSBjYW5ub3QgcmVwbGFjZSBzdGF0ZSBpbiBicm93c2VycyB0aGF0IGRvIG5vdCBzdXBwb3J0IEhUTUw1IGhpc3RvcnknKSA6IHZvaWQgMDtcbiAgICAgICAgd2luZG93LmxvY2F0aW9uLnJlcGxhY2UoaHJlZik7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiBnbyhuKSB7XG4gICAgZ2xvYmFsSGlzdG9yeS5nbyhuKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdvQmFjaygpIHtcbiAgICBnbygtMSk7XG4gIH1cblxuICBmdW5jdGlvbiBnb0ZvcndhcmQoKSB7XG4gICAgZ28oMSk7XG4gIH1cblxuICB2YXIgbGlzdGVuZXJDb3VudCA9IDA7XG5cbiAgZnVuY3Rpb24gY2hlY2tET01MaXN0ZW5lcnMoZGVsdGEpIHtcbiAgICBsaXN0ZW5lckNvdW50ICs9IGRlbHRhO1xuXG4gICAgaWYgKGxpc3RlbmVyQ291bnQgPT09IDEgJiYgZGVsdGEgPT09IDEpIHtcbiAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFBvcFN0YXRlRXZlbnQsIGhhbmRsZVBvcFN0YXRlKTtcbiAgICAgIGlmIChuZWVkc0hhc2hDaGFuZ2VMaXN0ZW5lcikgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoSGFzaENoYW5nZUV2ZW50LCBoYW5kbGVIYXNoQ2hhbmdlKTtcbiAgICB9IGVsc2UgaWYgKGxpc3RlbmVyQ291bnQgPT09IDApIHtcbiAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKFBvcFN0YXRlRXZlbnQsIGhhbmRsZVBvcFN0YXRlKTtcbiAgICAgIGlmIChuZWVkc0hhc2hDaGFuZ2VMaXN0ZW5lcikgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoSGFzaENoYW5nZUV2ZW50LCBoYW5kbGVIYXNoQ2hhbmdlKTtcbiAgICB9XG4gIH1cblxuICB2YXIgaXNCbG9ja2VkID0gZmFsc2U7XG5cbiAgZnVuY3Rpb24gYmxvY2socHJvbXB0KSB7XG4gICAgaWYgKHByb21wdCA9PT0gdm9pZCAwKSB7XG4gICAgICBwcm9tcHQgPSBmYWxzZTtcbiAgICB9XG5cbiAgICB2YXIgdW5ibG9jayA9IHRyYW5zaXRpb25NYW5hZ2VyLnNldFByb21wdChwcm9tcHQpO1xuXG4gICAgaWYgKCFpc0Jsb2NrZWQpIHtcbiAgICAgIGNoZWNrRE9NTGlzdGVuZXJzKDEpO1xuICAgICAgaXNCbG9ja2VkID0gdHJ1ZTtcbiAgICB9XG5cbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgaWYgKGlzQmxvY2tlZCkge1xuICAgICAgICBpc0Jsb2NrZWQgPSBmYWxzZTtcbiAgICAgICAgY2hlY2tET01MaXN0ZW5lcnMoLTEpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdW5ibG9jaygpO1xuICAgIH07XG4gIH1cblxuICBmdW5jdGlvbiBsaXN0ZW4obGlzdGVuZXIpIHtcbiAgICB2YXIgdW5saXN0ZW4gPSB0cmFuc2l0aW9uTWFuYWdlci5hcHBlbmRMaXN0ZW5lcihsaXN0ZW5lcik7XG4gICAgY2hlY2tET01MaXN0ZW5lcnMoMSk7XG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIGNoZWNrRE9NTGlzdGVuZXJzKC0xKTtcbiAgICAgIHVubGlzdGVuKCk7XG4gICAgfTtcbiAgfVxuXG4gIHZhciBoaXN0b3J5ID0ge1xuICAgIGxlbmd0aDogZ2xvYmFsSGlzdG9yeS5sZW5ndGgsXG4gICAgYWN0aW9uOiAnUE9QJyxcbiAgICBsb2NhdGlvbjogaW5pdGlhbExvY2F0aW9uLFxuICAgIGNyZWF0ZUhyZWY6IGNyZWF0ZUhyZWYsXG4gICAgcHVzaDogcHVzaCxcbiAgICByZXBsYWNlOiByZXBsYWNlLFxuICAgIGdvOiBnbyxcbiAgICBnb0JhY2s6IGdvQmFjayxcbiAgICBnb0ZvcndhcmQ6IGdvRm9yd2FyZCxcbiAgICBibG9jazogYmxvY2ssXG4gICAgbGlzdGVuOiBsaXN0ZW5cbiAgfTtcbiAgcmV0dXJuIGhpc3Rvcnk7XG59XG5cbnZhciBIYXNoQ2hhbmdlRXZlbnQkMSA9ICdoYXNoY2hhbmdlJztcbnZhciBIYXNoUGF0aENvZGVycyA9IHtcbiAgaGFzaGJhbmc6IHtcbiAgICBlbmNvZGVQYXRoOiBmdW5jdGlvbiBlbmNvZGVQYXRoKHBhdGgpIHtcbiAgICAgIHJldHVybiBwYXRoLmNoYXJBdCgwKSA9PT0gJyEnID8gcGF0aCA6ICchLycgKyBzdHJpcExlYWRpbmdTbGFzaChwYXRoKTtcbiAgICB9LFxuICAgIGRlY29kZVBhdGg6IGZ1bmN0aW9uIGRlY29kZVBhdGgocGF0aCkge1xuICAgICAgcmV0dXJuIHBhdGguY2hhckF0KDApID09PSAnIScgPyBwYXRoLnN1YnN0cigxKSA6IHBhdGg7XG4gICAgfVxuICB9LFxuICBub3NsYXNoOiB7XG4gICAgZW5jb2RlUGF0aDogc3RyaXBMZWFkaW5nU2xhc2gsXG4gICAgZGVjb2RlUGF0aDogYWRkTGVhZGluZ1NsYXNoXG4gIH0sXG4gIHNsYXNoOiB7XG4gICAgZW5jb2RlUGF0aDogYWRkTGVhZGluZ1NsYXNoLFxuICAgIGRlY29kZVBhdGg6IGFkZExlYWRpbmdTbGFzaFxuICB9XG59O1xuXG5mdW5jdGlvbiBnZXRIYXNoUGF0aCgpIHtcbiAgLy8gV2UgY2FuJ3QgdXNlIHdpbmRvdy5sb2NhdGlvbi5oYXNoIGhlcmUgYmVjYXVzZSBpdCdzIG5vdFxuICAvLyBjb25zaXN0ZW50IGFjcm9zcyBicm93c2VycyAtIEZpcmVmb3ggd2lsbCBwcmUtZGVjb2RlIGl0IVxuICB2YXIgaHJlZiA9IHdpbmRvdy5sb2NhdGlvbi5ocmVmO1xuICB2YXIgaGFzaEluZGV4ID0gaHJlZi5pbmRleE9mKCcjJyk7XG4gIHJldHVybiBoYXNoSW5kZXggPT09IC0xID8gJycgOiBocmVmLnN1YnN0cmluZyhoYXNoSW5kZXggKyAxKTtcbn1cblxuZnVuY3Rpb24gcHVzaEhhc2hQYXRoKHBhdGgpIHtcbiAgd2luZG93LmxvY2F0aW9uLmhhc2ggPSBwYXRoO1xufVxuXG5mdW5jdGlvbiByZXBsYWNlSGFzaFBhdGgocGF0aCkge1xuICB2YXIgaGFzaEluZGV4ID0gd2luZG93LmxvY2F0aW9uLmhyZWYuaW5kZXhPZignIycpO1xuICB3aW5kb3cubG9jYXRpb24ucmVwbGFjZSh3aW5kb3cubG9jYXRpb24uaHJlZi5zbGljZSgwLCBoYXNoSW5kZXggPj0gMCA/IGhhc2hJbmRleCA6IDApICsgJyMnICsgcGF0aCk7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUhhc2hIaXN0b3J5KHByb3BzKSB7XG4gIGlmIChwcm9wcyA9PT0gdm9pZCAwKSB7XG4gICAgcHJvcHMgPSB7fTtcbiAgfVxuXG4gICFjYW5Vc2VET00gPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsICdIYXNoIGhpc3RvcnkgbmVlZHMgYSBET00nKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gIHZhciBnbG9iYWxIaXN0b3J5ID0gd2luZG93Lmhpc3Rvcnk7XG4gIHZhciBjYW5Hb1dpdGhvdXRSZWxvYWQgPSBzdXBwb3J0c0dvV2l0aG91dFJlbG9hZFVzaW5nSGFzaCgpO1xuICB2YXIgX3Byb3BzID0gcHJvcHMsXG4gICAgICBfcHJvcHMkZ2V0VXNlckNvbmZpcm0gPSBfcHJvcHMuZ2V0VXNlckNvbmZpcm1hdGlvbixcbiAgICAgIGdldFVzZXJDb25maXJtYXRpb24gPSBfcHJvcHMkZ2V0VXNlckNvbmZpcm0gPT09IHZvaWQgMCA/IGdldENvbmZpcm1hdGlvbiA6IF9wcm9wcyRnZXRVc2VyQ29uZmlybSxcbiAgICAgIF9wcm9wcyRoYXNoVHlwZSA9IF9wcm9wcy5oYXNoVHlwZSxcbiAgICAgIGhhc2hUeXBlID0gX3Byb3BzJGhhc2hUeXBlID09PSB2b2lkIDAgPyAnc2xhc2gnIDogX3Byb3BzJGhhc2hUeXBlO1xuICB2YXIgYmFzZW5hbWUgPSBwcm9wcy5iYXNlbmFtZSA/IHN0cmlwVHJhaWxpbmdTbGFzaChhZGRMZWFkaW5nU2xhc2gocHJvcHMuYmFzZW5hbWUpKSA6ICcnO1xuICB2YXIgX0hhc2hQYXRoQ29kZXJzJGhhc2hUID0gSGFzaFBhdGhDb2RlcnNbaGFzaFR5cGVdLFxuICAgICAgZW5jb2RlUGF0aCA9IF9IYXNoUGF0aENvZGVycyRoYXNoVC5lbmNvZGVQYXRoLFxuICAgICAgZGVjb2RlUGF0aCA9IF9IYXNoUGF0aENvZGVycyRoYXNoVC5kZWNvZGVQYXRoO1xuXG4gIGZ1bmN0aW9uIGdldERPTUxvY2F0aW9uKCkge1xuICAgIHZhciBwYXRoID0gZGVjb2RlUGF0aChnZXRIYXNoUGF0aCgpKTtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCFiYXNlbmFtZSB8fCBoYXNCYXNlbmFtZShwYXRoLCBiYXNlbmFtZSksICdZb3UgYXJlIGF0dGVtcHRpbmcgdG8gdXNlIGEgYmFzZW5hbWUgb24gYSBwYWdlIHdob3NlIFVSTCBwYXRoIGRvZXMgbm90IGJlZ2luICcgKyAnd2l0aCB0aGUgYmFzZW5hbWUuIEV4cGVjdGVkIHBhdGggXCInICsgcGF0aCArICdcIiB0byBiZWdpbiB3aXRoIFwiJyArIGJhc2VuYW1lICsgJ1wiLicpIDogdm9pZCAwO1xuICAgIGlmIChiYXNlbmFtZSkgcGF0aCA9IHN0cmlwQmFzZW5hbWUocGF0aCwgYmFzZW5hbWUpO1xuICAgIHJldHVybiBjcmVhdGVMb2NhdGlvbihwYXRoKTtcbiAgfVxuXG4gIHZhciB0cmFuc2l0aW9uTWFuYWdlciA9IGNyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyKCk7XG5cbiAgZnVuY3Rpb24gc2V0U3RhdGUobmV4dFN0YXRlKSB7XG4gICAgX2V4dGVuZHMoaGlzdG9yeSwgbmV4dFN0YXRlKTtcblxuICAgIGhpc3RvcnkubGVuZ3RoID0gZ2xvYmFsSGlzdG9yeS5sZW5ndGg7XG4gICAgdHJhbnNpdGlvbk1hbmFnZXIubm90aWZ5TGlzdGVuZXJzKGhpc3RvcnkubG9jYXRpb24sIGhpc3RvcnkuYWN0aW9uKTtcbiAgfVxuXG4gIHZhciBmb3JjZU5leHRQb3AgPSBmYWxzZTtcbiAgdmFyIGlnbm9yZVBhdGggPSBudWxsO1xuXG4gIGZ1bmN0aW9uIGhhbmRsZUhhc2hDaGFuZ2UoKSB7XG4gICAgdmFyIHBhdGggPSBnZXRIYXNoUGF0aCgpO1xuICAgIHZhciBlbmNvZGVkUGF0aCA9IGVuY29kZVBhdGgocGF0aCk7XG5cbiAgICBpZiAocGF0aCAhPT0gZW5jb2RlZFBhdGgpIHtcbiAgICAgIC8vIEVuc3VyZSB3ZSBhbHdheXMgaGF2ZSBhIHByb3Blcmx5LWVuY29kZWQgaGFzaC5cbiAgICAgIHJlcGxhY2VIYXNoUGF0aChlbmNvZGVkUGF0aCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBsb2NhdGlvbiA9IGdldERPTUxvY2F0aW9uKCk7XG4gICAgICB2YXIgcHJldkxvY2F0aW9uID0gaGlzdG9yeS5sb2NhdGlvbjtcbiAgICAgIGlmICghZm9yY2VOZXh0UG9wICYmIGxvY2F0aW9uc0FyZUVxdWFsKHByZXZMb2NhdGlvbiwgbG9jYXRpb24pKSByZXR1cm47IC8vIEEgaGFzaGNoYW5nZSBkb2Vzbid0IGFsd2F5cyA9PSBsb2NhdGlvbiBjaGFuZ2UuXG5cbiAgICAgIGlmIChpZ25vcmVQYXRoID09PSBjcmVhdGVQYXRoKGxvY2F0aW9uKSkgcmV0dXJuOyAvLyBJZ25vcmUgdGhpcyBjaGFuZ2U7IHdlIGFscmVhZHkgc2V0U3RhdGUgaW4gcHVzaC9yZXBsYWNlLlxuXG4gICAgICBpZ25vcmVQYXRoID0gbnVsbDtcbiAgICAgIGhhbmRsZVBvcChsb2NhdGlvbik7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gaGFuZGxlUG9wKGxvY2F0aW9uKSB7XG4gICAgaWYgKGZvcmNlTmV4dFBvcCkge1xuICAgICAgZm9yY2VOZXh0UG9wID0gZmFsc2U7XG4gICAgICBzZXRTdGF0ZSgpO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgYWN0aW9uID0gJ1BPUCc7XG4gICAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgICBpZiAob2spIHtcbiAgICAgICAgICBzZXRTdGF0ZSh7XG4gICAgICAgICAgICBhY3Rpb246IGFjdGlvbixcbiAgICAgICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvblxuICAgICAgICAgIH0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJldmVydFBvcChsb2NhdGlvbik7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIHJldmVydFBvcChmcm9tTG9jYXRpb24pIHtcbiAgICB2YXIgdG9Mb2NhdGlvbiA9IGhpc3RvcnkubG9jYXRpb247IC8vIFRPRE86IFdlIGNvdWxkIHByb2JhYmx5IG1ha2UgdGhpcyBtb3JlIHJlbGlhYmxlIGJ5XG4gICAgLy8ga2VlcGluZyBhIGxpc3Qgb2YgcGF0aHMgd2UndmUgc2VlbiBpbiBzZXNzaW9uU3RvcmFnZS5cbiAgICAvLyBJbnN0ZWFkLCB3ZSBqdXN0IGRlZmF1bHQgdG8gMCBmb3IgcGF0aHMgd2UgZG9uJ3Qga25vdy5cblxuICAgIHZhciB0b0luZGV4ID0gYWxsUGF0aHMubGFzdEluZGV4T2YoY3JlYXRlUGF0aCh0b0xvY2F0aW9uKSk7XG4gICAgaWYgKHRvSW5kZXggPT09IC0xKSB0b0luZGV4ID0gMDtcbiAgICB2YXIgZnJvbUluZGV4ID0gYWxsUGF0aHMubGFzdEluZGV4T2YoY3JlYXRlUGF0aChmcm9tTG9jYXRpb24pKTtcbiAgICBpZiAoZnJvbUluZGV4ID09PSAtMSkgZnJvbUluZGV4ID0gMDtcbiAgICB2YXIgZGVsdGEgPSB0b0luZGV4IC0gZnJvbUluZGV4O1xuXG4gICAgaWYgKGRlbHRhKSB7XG4gICAgICBmb3JjZU5leHRQb3AgPSB0cnVlO1xuICAgICAgZ28oZGVsdGEpO1xuICAgIH1cbiAgfSAvLyBFbnN1cmUgdGhlIGhhc2ggaXMgZW5jb2RlZCBwcm9wZXJseSBiZWZvcmUgZG9pbmcgYW55dGhpbmcgZWxzZS5cblxuXG4gIHZhciBwYXRoID0gZ2V0SGFzaFBhdGgoKTtcbiAgdmFyIGVuY29kZWRQYXRoID0gZW5jb2RlUGF0aChwYXRoKTtcbiAgaWYgKHBhdGggIT09IGVuY29kZWRQYXRoKSByZXBsYWNlSGFzaFBhdGgoZW5jb2RlZFBhdGgpO1xuICB2YXIgaW5pdGlhbExvY2F0aW9uID0gZ2V0RE9NTG9jYXRpb24oKTtcbiAgdmFyIGFsbFBhdGhzID0gW2NyZWF0ZVBhdGgoaW5pdGlhbExvY2F0aW9uKV07IC8vIFB1YmxpYyBpbnRlcmZhY2VcblxuICBmdW5jdGlvbiBjcmVhdGVIcmVmKGxvY2F0aW9uKSB7XG4gICAgcmV0dXJuICcjJyArIGVuY29kZVBhdGgoYmFzZW5hbWUgKyBjcmVhdGVQYXRoKGxvY2F0aW9uKSk7XG4gIH1cblxuICBmdW5jdGlvbiBwdXNoKHBhdGgsIHN0YXRlKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhzdGF0ZSA9PT0gdW5kZWZpbmVkLCAnSGFzaCBoaXN0b3J5IGNhbm5vdCBwdXNoIHN0YXRlOyBpdCBpcyBpZ25vcmVkJykgOiB2b2lkIDA7XG4gICAgdmFyIGFjdGlvbiA9ICdQVVNIJztcbiAgICB2YXIgbG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihwYXRoLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgaGlzdG9yeS5sb2NhdGlvbik7XG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgIGlmICghb2spIHJldHVybjtcbiAgICAgIHZhciBwYXRoID0gY3JlYXRlUGF0aChsb2NhdGlvbik7XG4gICAgICB2YXIgZW5jb2RlZFBhdGggPSBlbmNvZGVQYXRoKGJhc2VuYW1lICsgcGF0aCk7XG4gICAgICB2YXIgaGFzaENoYW5nZWQgPSBnZXRIYXNoUGF0aCgpICE9PSBlbmNvZGVkUGF0aDtcblxuICAgICAgaWYgKGhhc2hDaGFuZ2VkKSB7XG4gICAgICAgIC8vIFdlIGNhbm5vdCB0ZWxsIGlmIGEgaGFzaGNoYW5nZSB3YXMgY2F1c2VkIGJ5IGEgUFVTSCwgc28gd2UnZFxuICAgICAgICAvLyByYXRoZXIgc2V0U3RhdGUgaGVyZSBhbmQgaWdub3JlIHRoZSBoYXNoY2hhbmdlLiBUaGUgY2F2ZWF0IGhlcmVcbiAgICAgICAgLy8gaXMgdGhhdCBvdGhlciBoYXNoIGhpc3RvcmllcyBpbiB0aGUgcGFnZSB3aWxsIGNvbnNpZGVyIGl0IGEgUE9QLlxuICAgICAgICBpZ25vcmVQYXRoID0gcGF0aDtcbiAgICAgICAgcHVzaEhhc2hQYXRoKGVuY29kZWRQYXRoKTtcbiAgICAgICAgdmFyIHByZXZJbmRleCA9IGFsbFBhdGhzLmxhc3RJbmRleE9mKGNyZWF0ZVBhdGgoaGlzdG9yeS5sb2NhdGlvbikpO1xuICAgICAgICB2YXIgbmV4dFBhdGhzID0gYWxsUGF0aHMuc2xpY2UoMCwgcHJldkluZGV4ID09PSAtMSA/IDAgOiBwcmV2SW5kZXggKyAxKTtcbiAgICAgICAgbmV4dFBhdGhzLnB1c2gocGF0aCk7XG4gICAgICAgIGFsbFBhdGhzID0gbmV4dFBhdGhzO1xuICAgICAgICBzZXRTdGF0ZSh7XG4gICAgICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uXG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhmYWxzZSwgJ0hhc2ggaGlzdG9yeSBjYW5ub3QgUFVTSCB0aGUgc2FtZSBwYXRoOyBhIG5ldyBlbnRyeSB3aWxsIG5vdCBiZSBhZGRlZCB0byB0aGUgaGlzdG9yeSBzdGFjaycpIDogdm9pZCAwO1xuICAgICAgICBzZXRTdGF0ZSgpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gcmVwbGFjZShwYXRoLCBzdGF0ZSkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoc3RhdGUgPT09IHVuZGVmaW5lZCwgJ0hhc2ggaGlzdG9yeSBjYW5ub3QgcmVwbGFjZSBzdGF0ZTsgaXQgaXMgaWdub3JlZCcpIDogdm9pZCAwO1xuICAgIHZhciBhY3Rpb24gPSAnUkVQTEFDRSc7XG4gICAgdmFyIGxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24ocGF0aCwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIGhpc3RvcnkubG9jYXRpb24pO1xuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICBpZiAoIW9rKSByZXR1cm47XG4gICAgICB2YXIgcGF0aCA9IGNyZWF0ZVBhdGgobG9jYXRpb24pO1xuICAgICAgdmFyIGVuY29kZWRQYXRoID0gZW5jb2RlUGF0aChiYXNlbmFtZSArIHBhdGgpO1xuICAgICAgdmFyIGhhc2hDaGFuZ2VkID0gZ2V0SGFzaFBhdGgoKSAhPT0gZW5jb2RlZFBhdGg7XG5cbiAgICAgIGlmIChoYXNoQ2hhbmdlZCkge1xuICAgICAgICAvLyBXZSBjYW5ub3QgdGVsbCBpZiBhIGhhc2hjaGFuZ2Ugd2FzIGNhdXNlZCBieSBhIFJFUExBQ0UsIHNvIHdlJ2RcbiAgICAgICAgLy8gcmF0aGVyIHNldFN0YXRlIGhlcmUgYW5kIGlnbm9yZSB0aGUgaGFzaGNoYW5nZS4gVGhlIGNhdmVhdCBoZXJlXG4gICAgICAgIC8vIGlzIHRoYXQgb3RoZXIgaGFzaCBoaXN0b3JpZXMgaW4gdGhlIHBhZ2Ugd2lsbCBjb25zaWRlciBpdCBhIFBPUC5cbiAgICAgICAgaWdub3JlUGF0aCA9IHBhdGg7XG4gICAgICAgIHJlcGxhY2VIYXNoUGF0aChlbmNvZGVkUGF0aCk7XG4gICAgICB9XG5cbiAgICAgIHZhciBwcmV2SW5kZXggPSBhbGxQYXRocy5pbmRleE9mKGNyZWF0ZVBhdGgoaGlzdG9yeS5sb2NhdGlvbikpO1xuICAgICAgaWYgKHByZXZJbmRleCAhPT0gLTEpIGFsbFBhdGhzW3ByZXZJbmRleF0gPSBwYXRoO1xuICAgICAgc2V0U3RhdGUoe1xuICAgICAgICBhY3Rpb246IGFjdGlvbixcbiAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uXG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdvKG4pIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKGNhbkdvV2l0aG91dFJlbG9hZCwgJ0hhc2ggaGlzdG9yeSBnbyhuKSBjYXVzZXMgYSBmdWxsIHBhZ2UgcmVsb2FkIGluIHRoaXMgYnJvd3NlcicpIDogdm9pZCAwO1xuICAgIGdsb2JhbEhpc3RvcnkuZ28obik7XG4gIH1cblxuICBmdW5jdGlvbiBnb0JhY2soKSB7XG4gICAgZ28oLTEpO1xuICB9XG5cbiAgZnVuY3Rpb24gZ29Gb3J3YXJkKCkge1xuICAgIGdvKDEpO1xuICB9XG5cbiAgdmFyIGxpc3RlbmVyQ291bnQgPSAwO1xuXG4gIGZ1bmN0aW9uIGNoZWNrRE9NTGlzdGVuZXJzKGRlbHRhKSB7XG4gICAgbGlzdGVuZXJDb3VudCArPSBkZWx0YTtcblxuICAgIGlmIChsaXN0ZW5lckNvdW50ID09PSAxICYmIGRlbHRhID09PSAxKSB7XG4gICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihIYXNoQ2hhbmdlRXZlbnQkMSwgaGFuZGxlSGFzaENoYW5nZSk7XG4gICAgfSBlbHNlIGlmIChsaXN0ZW5lckNvdW50ID09PSAwKSB7XG4gICAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihIYXNoQ2hhbmdlRXZlbnQkMSwgaGFuZGxlSGFzaENoYW5nZSk7XG4gICAgfVxuICB9XG5cbiAgdmFyIGlzQmxvY2tlZCA9IGZhbHNlO1xuXG4gIGZ1bmN0aW9uIGJsb2NrKHByb21wdCkge1xuICAgIGlmIChwcm9tcHQgPT09IHZvaWQgMCkge1xuICAgICAgcHJvbXB0ID0gZmFsc2U7XG4gICAgfVxuXG4gICAgdmFyIHVuYmxvY2sgPSB0cmFuc2l0aW9uTWFuYWdlci5zZXRQcm9tcHQocHJvbXB0KTtcblxuICAgIGlmICghaXNCbG9ja2VkKSB7XG4gICAgICBjaGVja0RPTUxpc3RlbmVycygxKTtcbiAgICAgIGlzQmxvY2tlZCA9IHRydWU7XG4gICAgfVxuXG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIGlmIChpc0Jsb2NrZWQpIHtcbiAgICAgICAgaXNCbG9ja2VkID0gZmFsc2U7XG4gICAgICAgIGNoZWNrRE9NTGlzdGVuZXJzKC0xKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHVuYmxvY2soKTtcbiAgICB9O1xuICB9XG5cbiAgZnVuY3Rpb24gbGlzdGVuKGxpc3RlbmVyKSB7XG4gICAgdmFyIHVubGlzdGVuID0gdHJhbnNpdGlvbk1hbmFnZXIuYXBwZW5kTGlzdGVuZXIobGlzdGVuZXIpO1xuICAgIGNoZWNrRE9NTGlzdGVuZXJzKDEpO1xuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICBjaGVja0RPTUxpc3RlbmVycygtMSk7XG4gICAgICB1bmxpc3RlbigpO1xuICAgIH07XG4gIH1cblxuICB2YXIgaGlzdG9yeSA9IHtcbiAgICBsZW5ndGg6IGdsb2JhbEhpc3RvcnkubGVuZ3RoLFxuICAgIGFjdGlvbjogJ1BPUCcsXG4gICAgbG9jYXRpb246IGluaXRpYWxMb2NhdGlvbixcbiAgICBjcmVhdGVIcmVmOiBjcmVhdGVIcmVmLFxuICAgIHB1c2g6IHB1c2gsXG4gICAgcmVwbGFjZTogcmVwbGFjZSxcbiAgICBnbzogZ28sXG4gICAgZ29CYWNrOiBnb0JhY2ssXG4gICAgZ29Gb3J3YXJkOiBnb0ZvcndhcmQsXG4gICAgYmxvY2s6IGJsb2NrLFxuICAgIGxpc3RlbjogbGlzdGVuXG4gIH07XG4gIHJldHVybiBoaXN0b3J5O1xufVxuXG5mdW5jdGlvbiBjbGFtcChuLCBsb3dlckJvdW5kLCB1cHBlckJvdW5kKSB7XG4gIHJldHVybiBNYXRoLm1pbihNYXRoLm1heChuLCBsb3dlckJvdW5kKSwgdXBwZXJCb3VuZCk7XG59XG4vKipcbiAqIENyZWF0ZXMgYSBoaXN0b3J5IG9iamVjdCB0aGF0IHN0b3JlcyBsb2NhdGlvbnMgaW4gbWVtb3J5LlxuICovXG5cblxuZnVuY3Rpb24gY3JlYXRlTWVtb3J5SGlzdG9yeShwcm9wcykge1xuICBpZiAocHJvcHMgPT09IHZvaWQgMCkge1xuICAgIHByb3BzID0ge307XG4gIH1cblxuICB2YXIgX3Byb3BzID0gcHJvcHMsXG4gICAgICBnZXRVc2VyQ29uZmlybWF0aW9uID0gX3Byb3BzLmdldFVzZXJDb25maXJtYXRpb24sXG4gICAgICBfcHJvcHMkaW5pdGlhbEVudHJpZXMgPSBfcHJvcHMuaW5pdGlhbEVudHJpZXMsXG4gICAgICBpbml0aWFsRW50cmllcyA9IF9wcm9wcyRpbml0aWFsRW50cmllcyA9PT0gdm9pZCAwID8gWycvJ10gOiBfcHJvcHMkaW5pdGlhbEVudHJpZXMsXG4gICAgICBfcHJvcHMkaW5pdGlhbEluZGV4ID0gX3Byb3BzLmluaXRpYWxJbmRleCxcbiAgICAgIGluaXRpYWxJbmRleCA9IF9wcm9wcyRpbml0aWFsSW5kZXggPT09IHZvaWQgMCA/IDAgOiBfcHJvcHMkaW5pdGlhbEluZGV4LFxuICAgICAgX3Byb3BzJGtleUxlbmd0aCA9IF9wcm9wcy5rZXlMZW5ndGgsXG4gICAgICBrZXlMZW5ndGggPSBfcHJvcHMka2V5TGVuZ3RoID09PSB2b2lkIDAgPyA2IDogX3Byb3BzJGtleUxlbmd0aDtcbiAgdmFyIHRyYW5zaXRpb25NYW5hZ2VyID0gY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXIoKTtcblxuICBmdW5jdGlvbiBzZXRTdGF0ZShuZXh0U3RhdGUpIHtcbiAgICBfZXh0ZW5kcyhoaXN0b3J5LCBuZXh0U3RhdGUpO1xuXG4gICAgaGlzdG9yeS5sZW5ndGggPSBoaXN0b3J5LmVudHJpZXMubGVuZ3RoO1xuICAgIHRyYW5zaXRpb25NYW5hZ2VyLm5vdGlmeUxpc3RlbmVycyhoaXN0b3J5LmxvY2F0aW9uLCBoaXN0b3J5LmFjdGlvbik7XG4gIH1cblxuICBmdW5jdGlvbiBjcmVhdGVLZXkoKSB7XG4gICAgcmV0dXJuIE1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnN1YnN0cigyLCBrZXlMZW5ndGgpO1xuICB9XG5cbiAgdmFyIGluZGV4ID0gY2xhbXAoaW5pdGlhbEluZGV4LCAwLCBpbml0aWFsRW50cmllcy5sZW5ndGggLSAxKTtcbiAgdmFyIGVudHJpZXMgPSBpbml0aWFsRW50cmllcy5tYXAoZnVuY3Rpb24gKGVudHJ5KSB7XG4gICAgcmV0dXJuIHR5cGVvZiBlbnRyeSA9PT0gJ3N0cmluZycgPyBjcmVhdGVMb2NhdGlvbihlbnRyeSwgdW5kZWZpbmVkLCBjcmVhdGVLZXkoKSkgOiBjcmVhdGVMb2NhdGlvbihlbnRyeSwgdW5kZWZpbmVkLCBlbnRyeS5rZXkgfHwgY3JlYXRlS2V5KCkpO1xuICB9KTsgLy8gUHVibGljIGludGVyZmFjZVxuXG4gIHZhciBjcmVhdGVIcmVmID0gY3JlYXRlUGF0aDtcblxuICBmdW5jdGlvbiBwdXNoKHBhdGgsIHN0YXRlKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKHR5cGVvZiBwYXRoID09PSAnb2JqZWN0JyAmJiBwYXRoLnN0YXRlICE9PSB1bmRlZmluZWQgJiYgc3RhdGUgIT09IHVuZGVmaW5lZCksICdZb3Ugc2hvdWxkIGF2b2lkIHByb3ZpZGluZyBhIDJuZCBzdGF0ZSBhcmd1bWVudCB0byBwdXNoIHdoZW4gdGhlIDFzdCAnICsgJ2FyZ3VtZW50IGlzIGEgbG9jYXRpb24tbGlrZSBvYmplY3QgdGhhdCBhbHJlYWR5IGhhcyBzdGF0ZTsgaXQgaXMgaWdub3JlZCcpIDogdm9pZCAwO1xuICAgIHZhciBhY3Rpb24gPSAnUFVTSCc7XG4gICAgdmFyIGxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24ocGF0aCwgc3RhdGUsIGNyZWF0ZUtleSgpLCBoaXN0b3J5LmxvY2F0aW9uKTtcbiAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgaWYgKCFvaykgcmV0dXJuO1xuICAgICAgdmFyIHByZXZJbmRleCA9IGhpc3RvcnkuaW5kZXg7XG4gICAgICB2YXIgbmV4dEluZGV4ID0gcHJldkluZGV4ICsgMTtcbiAgICAgIHZhciBuZXh0RW50cmllcyA9IGhpc3RvcnkuZW50cmllcy5zbGljZSgwKTtcblxuICAgICAgaWYgKG5leHRFbnRyaWVzLmxlbmd0aCA+IG5leHRJbmRleCkge1xuICAgICAgICBuZXh0RW50cmllcy5zcGxpY2UobmV4dEluZGV4LCBuZXh0RW50cmllcy5sZW5ndGggLSBuZXh0SW5kZXgsIGxvY2F0aW9uKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIG5leHRFbnRyaWVzLnB1c2gobG9jYXRpb24pO1xuICAgICAgfVxuXG4gICAgICBzZXRTdGF0ZSh7XG4gICAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgICBsb2NhdGlvbjogbG9jYXRpb24sXG4gICAgICAgIGluZGV4OiBuZXh0SW5kZXgsXG4gICAgICAgIGVudHJpZXM6IG5leHRFbnRyaWVzXG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHJlcGxhY2UocGF0aCwgc3RhdGUpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCEodHlwZW9mIHBhdGggPT09ICdvYmplY3QnICYmIHBhdGguc3RhdGUgIT09IHVuZGVmaW5lZCAmJiBzdGF0ZSAhPT0gdW5kZWZpbmVkKSwgJ1lvdSBzaG91bGQgYXZvaWQgcHJvdmlkaW5nIGEgMm5kIHN0YXRlIGFyZ3VtZW50IHRvIHJlcGxhY2Ugd2hlbiB0aGUgMXN0ICcgKyAnYXJndW1lbnQgaXMgYSBsb2NhdGlvbi1saWtlIG9iamVjdCB0aGF0IGFscmVhZHkgaGFzIHN0YXRlOyBpdCBpcyBpZ25vcmVkJykgOiB2b2lkIDA7XG4gICAgdmFyIGFjdGlvbiA9ICdSRVBMQUNFJztcbiAgICB2YXIgbG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihwYXRoLCBzdGF0ZSwgY3JlYXRlS2V5KCksIGhpc3RvcnkubG9jYXRpb24pO1xuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICBpZiAoIW9rKSByZXR1cm47XG4gICAgICBoaXN0b3J5LmVudHJpZXNbaGlzdG9yeS5pbmRleF0gPSBsb2NhdGlvbjtcbiAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvblxuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiBnbyhuKSB7XG4gICAgdmFyIG5leHRJbmRleCA9IGNsYW1wKGhpc3RvcnkuaW5kZXggKyBuLCAwLCBoaXN0b3J5LmVudHJpZXMubGVuZ3RoIC0gMSk7XG4gICAgdmFyIGFjdGlvbiA9ICdQT1AnO1xuICAgIHZhciBsb2NhdGlvbiA9IGhpc3RvcnkuZW50cmllc1tuZXh0SW5kZXhdO1xuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICBpZiAob2spIHtcbiAgICAgICAgc2V0U3RhdGUoe1xuICAgICAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvbixcbiAgICAgICAgICBpbmRleDogbmV4dEluZGV4XG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gTWltaWMgdGhlIGJlaGF2aW9yIG9mIERPTSBoaXN0b3JpZXMgYnlcbiAgICAgICAgLy8gY2F1c2luZyBhIHJlbmRlciBhZnRlciBhIGNhbmNlbGxlZCBQT1AuXG4gICAgICAgIHNldFN0YXRlKCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiBnb0JhY2soKSB7XG4gICAgZ28oLTEpO1xuICB9XG5cbiAgZnVuY3Rpb24gZ29Gb3J3YXJkKCkge1xuICAgIGdvKDEpO1xuICB9XG5cbiAgZnVuY3Rpb24gY2FuR28obikge1xuICAgIHZhciBuZXh0SW5kZXggPSBoaXN0b3J5LmluZGV4ICsgbjtcbiAgICByZXR1cm4gbmV4dEluZGV4ID49IDAgJiYgbmV4dEluZGV4IDwgaGlzdG9yeS5lbnRyaWVzLmxlbmd0aDtcbiAgfVxuXG4gIGZ1bmN0aW9uIGJsb2NrKHByb21wdCkge1xuICAgIGlmIChwcm9tcHQgPT09IHZvaWQgMCkge1xuICAgICAgcHJvbXB0ID0gZmFsc2U7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRyYW5zaXRpb25NYW5hZ2VyLnNldFByb21wdChwcm9tcHQpO1xuICB9XG5cbiAgZnVuY3Rpb24gbGlzdGVuKGxpc3RlbmVyKSB7XG4gICAgcmV0dXJuIHRyYW5zaXRpb25NYW5hZ2VyLmFwcGVuZExpc3RlbmVyKGxpc3RlbmVyKTtcbiAgfVxuXG4gIHZhciBoaXN0b3J5ID0ge1xuICAgIGxlbmd0aDogZW50cmllcy5sZW5ndGgsXG4gICAgYWN0aW9uOiAnUE9QJyxcbiAgICBsb2NhdGlvbjogZW50cmllc1tpbmRleF0sXG4gICAgaW5kZXg6IGluZGV4LFxuICAgIGVudHJpZXM6IGVudHJpZXMsXG4gICAgY3JlYXRlSHJlZjogY3JlYXRlSHJlZixcbiAgICBwdXNoOiBwdXNoLFxuICAgIHJlcGxhY2U6IHJlcGxhY2UsXG4gICAgZ286IGdvLFxuICAgIGdvQmFjazogZ29CYWNrLFxuICAgIGdvRm9yd2FyZDogZ29Gb3J3YXJkLFxuICAgIGNhbkdvOiBjYW5HbyxcbiAgICBibG9jazogYmxvY2ssXG4gICAgbGlzdGVuOiBsaXN0ZW5cbiAgfTtcbiAgcmV0dXJuIGhpc3Rvcnk7XG59XG5cbmV4cG9ydCB7IGNyZWF0ZUJyb3dzZXJIaXN0b3J5LCBjcmVhdGVIYXNoSGlzdG9yeSwgY3JlYXRlTWVtb3J5SGlzdG9yeSwgY3JlYXRlTG9jYXRpb24sIGxvY2F0aW9uc0FyZUVxdWFsLCBwYXJzZVBhdGgsIGNyZWF0ZVBhdGggfTtcbiIsInZhciBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldOyBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7IGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gfSB9IHJldHVybiB0YXJnZXQ7IH07XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxuaW1wb3J0IHdhcm5pbmcgZnJvbSBcIndhcm5pbmdcIjtcbmltcG9ydCBpbnZhcmlhbnQgZnJvbSBcImludmFyaWFudFwiO1xuaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tIFwicHJvcC10eXBlc1wiO1xuXG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciBwdXR0aW5nIGhpc3Rvcnkgb24gY29udGV4dC5cbiAqL1xuXG52YXIgUm91dGVyID0gZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzKFJvdXRlciwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gUm91dGVyKCkge1xuICAgIHZhciBfdGVtcCwgX3RoaXMsIF9yZXQ7XG5cbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgUm91dGVyKTtcblxuICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICAgIH1cblxuICAgIHJldHVybiBfcmV0ID0gKF90ZW1wID0gKF90aGlzID0gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgX1JlYWN0JENvbXBvbmVudC5jYWxsLmFwcGx5KF9SZWFjdCRDb21wb25lbnQsIFt0aGlzXS5jb25jYXQoYXJncykpKSwgX3RoaXMpLCBfdGhpcy5zdGF0ZSA9IHtcbiAgICAgIG1hdGNoOiBfdGhpcy5jb21wdXRlTWF0Y2goX3RoaXMucHJvcHMuaGlzdG9yeS5sb2NhdGlvbi5wYXRobmFtZSlcbiAgICB9LCBfdGVtcCksIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKF90aGlzLCBfcmV0KTtcbiAgfVxuXG4gIFJvdXRlci5wcm90b3R5cGUuZ2V0Q2hpbGRDb250ZXh0ID0gZnVuY3Rpb24gZ2V0Q2hpbGRDb250ZXh0KCkge1xuICAgIHJldHVybiB7XG4gICAgICByb3V0ZXI6IF9leHRlbmRzKHt9LCB0aGlzLmNvbnRleHQucm91dGVyLCB7XG4gICAgICAgIGhpc3Rvcnk6IHRoaXMucHJvcHMuaGlzdG9yeSxcbiAgICAgICAgcm91dGU6IHtcbiAgICAgICAgICBsb2NhdGlvbjogdGhpcy5wcm9wcy5oaXN0b3J5LmxvY2F0aW9uLFxuICAgICAgICAgIG1hdGNoOiB0aGlzLnN0YXRlLm1hdGNoXG4gICAgICAgIH1cbiAgICAgIH0pXG4gICAgfTtcbiAgfTtcblxuICBSb3V0ZXIucHJvdG90eXBlLmNvbXB1dGVNYXRjaCA9IGZ1bmN0aW9uIGNvbXB1dGVNYXRjaChwYXRobmFtZSkge1xuICAgIHJldHVybiB7XG4gICAgICBwYXRoOiBcIi9cIixcbiAgICAgIHVybDogXCIvXCIsXG4gICAgICBwYXJhbXM6IHt9LFxuICAgICAgaXNFeGFjdDogcGF0aG5hbWUgPT09IFwiL1wiXG4gICAgfTtcbiAgfTtcblxuICBSb3V0ZXIucHJvdG90eXBlLmNvbXBvbmVudFdpbGxNb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxNb3VudCgpIHtcbiAgICB2YXIgX3RoaXMyID0gdGhpcztcblxuICAgIHZhciBfcHJvcHMgPSB0aGlzLnByb3BzLFxuICAgICAgICBjaGlsZHJlbiA9IF9wcm9wcy5jaGlsZHJlbixcbiAgICAgICAgaGlzdG9yeSA9IF9wcm9wcy5oaXN0b3J5O1xuXG5cbiAgICBpbnZhcmlhbnQoY2hpbGRyZW4gPT0gbnVsbCB8fCBSZWFjdC5DaGlsZHJlbi5jb3VudChjaGlsZHJlbikgPT09IDEsIFwiQSA8Um91dGVyPiBtYXkgaGF2ZSBvbmx5IG9uZSBjaGlsZCBlbGVtZW50XCIpO1xuXG4gICAgLy8gRG8gdGhpcyBoZXJlIHNvIHdlIGNhbiBzZXRTdGF0ZSB3aGVuIGEgPFJlZGlyZWN0PiBjaGFuZ2VzIHRoZVxuICAgIC8vIGxvY2F0aW9uIGluIGNvbXBvbmVudFdpbGxNb3VudC4gVGhpcyBoYXBwZW5zIGUuZy4gd2hlbiBkb2luZ1xuICAgIC8vIHNlcnZlciByZW5kZXJpbmcgdXNpbmcgYSA8U3RhdGljUm91dGVyPi5cbiAgICB0aGlzLnVubGlzdGVuID0gaGlzdG9yeS5saXN0ZW4oZnVuY3Rpb24gKCkge1xuICAgICAgX3RoaXMyLnNldFN0YXRlKHtcbiAgICAgICAgbWF0Y2g6IF90aGlzMi5jb21wdXRlTWF0Y2goaGlzdG9yeS5sb2NhdGlvbi5wYXRobmFtZSlcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9O1xuXG4gIFJvdXRlci5wcm90b3R5cGUuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMobmV4dFByb3BzKSB7XG4gICAgd2FybmluZyh0aGlzLnByb3BzLmhpc3RvcnkgPT09IG5leHRQcm9wcy5oaXN0b3J5LCBcIllvdSBjYW5ub3QgY2hhbmdlIDxSb3V0ZXIgaGlzdG9yeT5cIik7XG4gIH07XG5cbiAgUm91dGVyLnByb3RvdHlwZS5jb21wb25lbnRXaWxsVW5tb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xuICAgIHRoaXMudW5saXN0ZW4oKTtcbiAgfTtcblxuICBSb3V0ZXIucHJvdG90eXBlLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICB2YXIgY2hpbGRyZW4gPSB0aGlzLnByb3BzLmNoaWxkcmVuO1xuXG4gICAgcmV0dXJuIGNoaWxkcmVuID8gUmVhY3QuQ2hpbGRyZW4ub25seShjaGlsZHJlbikgOiBudWxsO1xuICB9O1xuXG4gIHJldHVybiBSb3V0ZXI7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cblJvdXRlci5wcm9wVHlwZXMgPSB7XG4gIGhpc3Rvcnk6IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZCxcbiAgY2hpbGRyZW46IFByb3BUeXBlcy5ub2RlXG59O1xuUm91dGVyLmNvbnRleHRUeXBlcyA9IHtcbiAgcm91dGVyOiBQcm9wVHlwZXMub2JqZWN0XG59O1xuUm91dGVyLmNoaWxkQ29udGV4dFR5cGVzID0ge1xuICByb3V0ZXI6IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZFxufTtcblxuXG5leHBvcnQgZGVmYXVsdCBSb3V0ZXI7IiwiLy8gV3JpdHRlbiBpbiB0aGlzIHJvdW5kIGFib3V0IHdheSBmb3IgYmFiZWwtdHJhbnNmb3JtLWltcG9ydHNcbmltcG9ydCBSb3V0ZXIgZnJvbSBcInJlYWN0LXJvdXRlci9lcy9Sb3V0ZXJcIjtcblxuZXhwb3J0IGRlZmF1bHQgUm91dGVyOyIsImZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxuaW1wb3J0IHdhcm5pbmcgZnJvbSBcIndhcm5pbmdcIjtcbmltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSBcInByb3AtdHlwZXNcIjtcbmltcG9ydCB7IGNyZWF0ZUJyb3dzZXJIaXN0b3J5IGFzIGNyZWF0ZUhpc3RvcnkgfSBmcm9tIFwiaGlzdG9yeVwiO1xuaW1wb3J0IFJvdXRlciBmcm9tIFwiLi9Sb3V0ZXJcIjtcblxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgYSA8Um91dGVyPiB0aGF0IHVzZXMgSFRNTDUgaGlzdG9yeS5cbiAqL1xuXG52YXIgQnJvd3NlclJvdXRlciA9IGZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0cyhCcm93c2VyUm91dGVyLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBCcm93c2VyUm91dGVyKCkge1xuICAgIHZhciBfdGVtcCwgX3RoaXMsIF9yZXQ7XG5cbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgQnJvd3NlclJvdXRlcik7XG5cbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICB9XG5cbiAgICByZXR1cm4gX3JldCA9IChfdGVtcCA9IChfdGhpcyA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIF9SZWFjdCRDb21wb25lbnQuY2FsbC5hcHBseShfUmVhY3QkQ29tcG9uZW50LCBbdGhpc10uY29uY2F0KGFyZ3MpKSksIF90aGlzKSwgX3RoaXMuaGlzdG9yeSA9IGNyZWF0ZUhpc3RvcnkoX3RoaXMucHJvcHMpLCBfdGVtcCksIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKF90aGlzLCBfcmV0KTtcbiAgfVxuXG4gIEJyb3dzZXJSb3V0ZXIucHJvdG90eXBlLmNvbXBvbmVudFdpbGxNb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxNb3VudCgpIHtcbiAgICB3YXJuaW5nKCF0aGlzLnByb3BzLmhpc3RvcnksIFwiPEJyb3dzZXJSb3V0ZXI+IGlnbm9yZXMgdGhlIGhpc3RvcnkgcHJvcC4gVG8gdXNlIGEgY3VzdG9tIGhpc3RvcnksIFwiICsgXCJ1c2UgYGltcG9ydCB7IFJvdXRlciB9YCBpbnN0ZWFkIG9mIGBpbXBvcnQgeyBCcm93c2VyUm91dGVyIGFzIFJvdXRlciB9YC5cIik7XG4gIH07XG5cbiAgQnJvd3NlclJvdXRlci5wcm90b3R5cGUucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFJvdXRlciwgeyBoaXN0b3J5OiB0aGlzLmhpc3RvcnksIGNoaWxkcmVuOiB0aGlzLnByb3BzLmNoaWxkcmVuIH0pO1xuICB9O1xuXG4gIHJldHVybiBCcm93c2VyUm91dGVyO1xufShSZWFjdC5Db21wb25lbnQpO1xuXG5Ccm93c2VyUm91dGVyLnByb3BUeXBlcyA9IHtcbiAgYmFzZW5hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gIGZvcmNlUmVmcmVzaDogUHJvcFR5cGVzLmJvb2wsXG4gIGdldFVzZXJDb25maXJtYXRpb246IFByb3BUeXBlcy5mdW5jLFxuICBrZXlMZW5ndGg6IFByb3BUeXBlcy5udW1iZXIsXG4gIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZVxufTtcblxuXG5leHBvcnQgZGVmYXVsdCBCcm93c2VyUm91dGVyOyIsImltcG9ydCBwYXRoVG9SZWdleHAgZnJvbSBcInBhdGgtdG8tcmVnZXhwXCI7XG5cbnZhciBwYXR0ZXJuQ2FjaGUgPSB7fTtcbnZhciBjYWNoZUxpbWl0ID0gMTAwMDA7XG52YXIgY2FjaGVDb3VudCA9IDA7XG5cbnZhciBjb21waWxlUGF0aCA9IGZ1bmN0aW9uIGNvbXBpbGVQYXRoKHBhdHRlcm4sIG9wdGlvbnMpIHtcbiAgdmFyIGNhY2hlS2V5ID0gXCJcIiArIG9wdGlvbnMuZW5kICsgb3B0aW9ucy5zdHJpY3QgKyBvcHRpb25zLnNlbnNpdGl2ZTtcbiAgdmFyIGNhY2hlID0gcGF0dGVybkNhY2hlW2NhY2hlS2V5XSB8fCAocGF0dGVybkNhY2hlW2NhY2hlS2V5XSA9IHt9KTtcblxuICBpZiAoY2FjaGVbcGF0dGVybl0pIHJldHVybiBjYWNoZVtwYXR0ZXJuXTtcblxuICB2YXIga2V5cyA9IFtdO1xuICB2YXIgcmUgPSBwYXRoVG9SZWdleHAocGF0dGVybiwga2V5cywgb3B0aW9ucyk7XG4gIHZhciBjb21waWxlZFBhdHRlcm4gPSB7IHJlOiByZSwga2V5czoga2V5cyB9O1xuXG4gIGlmIChjYWNoZUNvdW50IDwgY2FjaGVMaW1pdCkge1xuICAgIGNhY2hlW3BhdHRlcm5dID0gY29tcGlsZWRQYXR0ZXJuO1xuICAgIGNhY2hlQ291bnQrKztcbiAgfVxuXG4gIHJldHVybiBjb21waWxlZFBhdHRlcm47XG59O1xuXG4vKipcbiAqIFB1YmxpYyBBUEkgZm9yIG1hdGNoaW5nIGEgVVJMIHBhdGhuYW1lIHRvIGEgcGF0aCBwYXR0ZXJuLlxuICovXG52YXIgbWF0Y2hQYXRoID0gZnVuY3Rpb24gbWF0Y2hQYXRoKHBhdGhuYW1lKSB7XG4gIHZhciBvcHRpb25zID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiB7fTtcbiAgdmFyIHBhcmVudCA9IGFyZ3VtZW50c1syXTtcblxuICBpZiAodHlwZW9mIG9wdGlvbnMgPT09IFwic3RyaW5nXCIpIG9wdGlvbnMgPSB7IHBhdGg6IG9wdGlvbnMgfTtcblxuICB2YXIgX29wdGlvbnMgPSBvcHRpb25zLFxuICAgICAgcGF0aCA9IF9vcHRpb25zLnBhdGgsXG4gICAgICBfb3B0aW9ucyRleGFjdCA9IF9vcHRpb25zLmV4YWN0LFxuICAgICAgZXhhY3QgPSBfb3B0aW9ucyRleGFjdCA9PT0gdW5kZWZpbmVkID8gZmFsc2UgOiBfb3B0aW9ucyRleGFjdCxcbiAgICAgIF9vcHRpb25zJHN0cmljdCA9IF9vcHRpb25zLnN0cmljdCxcbiAgICAgIHN0cmljdCA9IF9vcHRpb25zJHN0cmljdCA9PT0gdW5kZWZpbmVkID8gZmFsc2UgOiBfb3B0aW9ucyRzdHJpY3QsXG4gICAgICBfb3B0aW9ucyRzZW5zaXRpdmUgPSBfb3B0aW9ucy5zZW5zaXRpdmUsXG4gICAgICBzZW5zaXRpdmUgPSBfb3B0aW9ucyRzZW5zaXRpdmUgPT09IHVuZGVmaW5lZCA/IGZhbHNlIDogX29wdGlvbnMkc2Vuc2l0aXZlO1xuXG5cbiAgaWYgKHBhdGggPT0gbnVsbCkgcmV0dXJuIHBhcmVudDtcblxuICB2YXIgX2NvbXBpbGVQYXRoID0gY29tcGlsZVBhdGgocGF0aCwgeyBlbmQ6IGV4YWN0LCBzdHJpY3Q6IHN0cmljdCwgc2Vuc2l0aXZlOiBzZW5zaXRpdmUgfSksXG4gICAgICByZSA9IF9jb21waWxlUGF0aC5yZSxcbiAgICAgIGtleXMgPSBfY29tcGlsZVBhdGgua2V5cztcblxuICB2YXIgbWF0Y2ggPSByZS5leGVjKHBhdGhuYW1lKTtcblxuICBpZiAoIW1hdGNoKSByZXR1cm4gbnVsbDtcblxuICB2YXIgdXJsID0gbWF0Y2hbMF0sXG4gICAgICB2YWx1ZXMgPSBtYXRjaC5zbGljZSgxKTtcblxuICB2YXIgaXNFeGFjdCA9IHBhdGhuYW1lID09PSB1cmw7XG5cbiAgaWYgKGV4YWN0ICYmICFpc0V4YWN0KSByZXR1cm4gbnVsbDtcblxuICByZXR1cm4ge1xuICAgIHBhdGg6IHBhdGgsIC8vIHRoZSBwYXRoIHBhdHRlcm4gdXNlZCB0byBtYXRjaFxuICAgIHVybDogcGF0aCA9PT0gXCIvXCIgJiYgdXJsID09PSBcIlwiID8gXCIvXCIgOiB1cmwsIC8vIHRoZSBtYXRjaGVkIHBvcnRpb24gb2YgdGhlIFVSTFxuICAgIGlzRXhhY3Q6IGlzRXhhY3QsIC8vIHdoZXRoZXIgb3Igbm90IHdlIG1hdGNoZWQgZXhhY3RseVxuICAgIHBhcmFtczoga2V5cy5yZWR1Y2UoZnVuY3Rpb24gKG1lbW8sIGtleSwgaW5kZXgpIHtcbiAgICAgIG1lbW9ba2V5Lm5hbWVdID0gdmFsdWVzW2luZGV4XTtcbiAgICAgIHJldHVybiBtZW1vO1xuICAgIH0sIHt9KVxuICB9O1xufTtcblxuZXhwb3J0IGRlZmF1bHQgbWF0Y2hQYXRoOyIsImZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxuaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tIFwicHJvcC10eXBlc1wiO1xuaW1wb3J0IHdhcm5pbmcgZnJvbSBcIndhcm5pbmdcIjtcbmltcG9ydCBpbnZhcmlhbnQgZnJvbSBcImludmFyaWFudFwiO1xuaW1wb3J0IG1hdGNoUGF0aCBmcm9tIFwiLi9tYXRjaFBhdGhcIjtcblxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgcmVuZGVyaW5nIHRoZSBmaXJzdCA8Um91dGU+IHRoYXQgbWF0Y2hlcy5cbiAqL1xuXG52YXIgU3dpdGNoID0gZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzKFN3aXRjaCwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gU3dpdGNoKCkge1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBTd2l0Y2gpO1xuXG4gICAgcmV0dXJuIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIF9SZWFjdCRDb21wb25lbnQuYXBwbHkodGhpcywgYXJndW1lbnRzKSk7XG4gIH1cblxuICBTd2l0Y2gucHJvdG90eXBlLmNvbXBvbmVudFdpbGxNb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxNb3VudCgpIHtcbiAgICBpbnZhcmlhbnQodGhpcy5jb250ZXh0LnJvdXRlciwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPFN3aXRjaD4gb3V0c2lkZSBhIDxSb3V0ZXI+XCIpO1xuICB9O1xuXG4gIFN3aXRjaC5wcm90b3R5cGUuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMobmV4dFByb3BzKSB7XG4gICAgd2FybmluZyghKG5leHRQcm9wcy5sb2NhdGlvbiAmJiAhdGhpcy5wcm9wcy5sb2NhdGlvbiksICc8U3dpdGNoPiBlbGVtZW50cyBzaG91bGQgbm90IGNoYW5nZSBmcm9tIHVuY29udHJvbGxlZCB0byBjb250cm9sbGVkIChvciB2aWNlIHZlcnNhKS4gWW91IGluaXRpYWxseSB1c2VkIG5vIFwibG9jYXRpb25cIiBwcm9wIGFuZCB0aGVuIHByb3ZpZGVkIG9uZSBvbiBhIHN1YnNlcXVlbnQgcmVuZGVyLicpO1xuXG4gICAgd2FybmluZyghKCFuZXh0UHJvcHMubG9jYXRpb24gJiYgdGhpcy5wcm9wcy5sb2NhdGlvbiksICc8U3dpdGNoPiBlbGVtZW50cyBzaG91bGQgbm90IGNoYW5nZSBmcm9tIGNvbnRyb2xsZWQgdG8gdW5jb250cm9sbGVkIChvciB2aWNlIHZlcnNhKS4gWW91IHByb3ZpZGVkIGEgXCJsb2NhdGlvblwiIHByb3AgaW5pdGlhbGx5IGJ1dCBvbWl0dGVkIGl0IG9uIGEgc3Vic2VxdWVudCByZW5kZXIuJyk7XG4gIH07XG5cbiAgU3dpdGNoLnByb3RvdHlwZS5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgdmFyIHJvdXRlID0gdGhpcy5jb250ZXh0LnJvdXRlci5yb3V0ZTtcbiAgICB2YXIgY2hpbGRyZW4gPSB0aGlzLnByb3BzLmNoaWxkcmVuO1xuXG4gICAgdmFyIGxvY2F0aW9uID0gdGhpcy5wcm9wcy5sb2NhdGlvbiB8fCByb3V0ZS5sb2NhdGlvbjtcblxuICAgIHZhciBtYXRjaCA9IHZvaWQgMCxcbiAgICAgICAgY2hpbGQgPSB2b2lkIDA7XG4gICAgUmVhY3QuQ2hpbGRyZW4uZm9yRWFjaChjaGlsZHJlbiwgZnVuY3Rpb24gKGVsZW1lbnQpIHtcbiAgICAgIGlmIChtYXRjaCA9PSBudWxsICYmIFJlYWN0LmlzVmFsaWRFbGVtZW50KGVsZW1lbnQpKSB7XG4gICAgICAgIHZhciBfZWxlbWVudCRwcm9wcyA9IGVsZW1lbnQucHJvcHMsXG4gICAgICAgICAgICBwYXRoUHJvcCA9IF9lbGVtZW50JHByb3BzLnBhdGgsXG4gICAgICAgICAgICBleGFjdCA9IF9lbGVtZW50JHByb3BzLmV4YWN0LFxuICAgICAgICAgICAgc3RyaWN0ID0gX2VsZW1lbnQkcHJvcHMuc3RyaWN0LFxuICAgICAgICAgICAgc2Vuc2l0aXZlID0gX2VsZW1lbnQkcHJvcHMuc2Vuc2l0aXZlLFxuICAgICAgICAgICAgZnJvbSA9IF9lbGVtZW50JHByb3BzLmZyb207XG5cbiAgICAgICAgdmFyIHBhdGggPSBwYXRoUHJvcCB8fCBmcm9tO1xuXG4gICAgICAgIGNoaWxkID0gZWxlbWVudDtcbiAgICAgICAgbWF0Y2ggPSBtYXRjaFBhdGgobG9jYXRpb24ucGF0aG5hbWUsIHsgcGF0aDogcGF0aCwgZXhhY3Q6IGV4YWN0LCBzdHJpY3Q6IHN0cmljdCwgc2Vuc2l0aXZlOiBzZW5zaXRpdmUgfSwgcm91dGUubWF0Y2gpO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgcmV0dXJuIG1hdGNoID8gUmVhY3QuY2xvbmVFbGVtZW50KGNoaWxkLCB7IGxvY2F0aW9uOiBsb2NhdGlvbiwgY29tcHV0ZWRNYXRjaDogbWF0Y2ggfSkgOiBudWxsO1xuICB9O1xuXG4gIHJldHVybiBTd2l0Y2g7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cblN3aXRjaC5jb250ZXh0VHlwZXMgPSB7XG4gIHJvdXRlcjogUHJvcFR5cGVzLnNoYXBlKHtcbiAgICByb3V0ZTogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkXG4gIH0pLmlzUmVxdWlyZWRcbn07XG5Td2l0Y2gucHJvcFR5cGVzID0ge1xuICBjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGUsXG4gIGxvY2F0aW9uOiBQcm9wVHlwZXMub2JqZWN0XG59O1xuXG5cbmV4cG9ydCBkZWZhdWx0IFN3aXRjaDsiLCIvLyBXcml0dGVuIGluIHRoaXMgcm91bmQgYWJvdXQgd2F5IGZvciBiYWJlbC10cmFuc2Zvcm0taW1wb3J0c1xuaW1wb3J0IFN3aXRjaCBmcm9tIFwicmVhY3Qtcm91dGVyL2VzL1N3aXRjaFwiO1xuXG5leHBvcnQgZGVmYXVsdCBTd2l0Y2g7IiwidmFyIF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07IGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSB9IH0gcmV0dXJuIHRhcmdldDsgfTtcblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoIXNlbGYpIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiICsgdHlwZW9mIHN1cGVyQ2xhc3MpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxuXG5pbXBvcnQgd2FybmluZyBmcm9tIFwid2FybmluZ1wiO1xuaW1wb3J0IGludmFyaWFudCBmcm9tIFwiaW52YXJpYW50XCI7XG5pbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gXCJwcm9wLXR5cGVzXCI7XG5pbXBvcnQgbWF0Y2hQYXRoIGZyb20gXCIuL21hdGNoUGF0aFwiO1xuXG52YXIgaXNFbXB0eUNoaWxkcmVuID0gZnVuY3Rpb24gaXNFbXB0eUNoaWxkcmVuKGNoaWxkcmVuKSB7XG4gIHJldHVybiBSZWFjdC5DaGlsZHJlbi5jb3VudChjaGlsZHJlbikgPT09IDA7XG59O1xuXG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciBtYXRjaGluZyBhIHNpbmdsZSBwYXRoIGFuZCByZW5kZXJpbmcuXG4gKi9cblxudmFyIFJvdXRlID0gZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzKFJvdXRlLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBSb3V0ZSgpIHtcbiAgICB2YXIgX3RlbXAsIF90aGlzLCBfcmV0O1xuXG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFJvdXRlKTtcblxuICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICAgIH1cblxuICAgIHJldHVybiBfcmV0ID0gKF90ZW1wID0gKF90aGlzID0gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgX1JlYWN0JENvbXBvbmVudC5jYWxsLmFwcGx5KF9SZWFjdCRDb21wb25lbnQsIFt0aGlzXS5jb25jYXQoYXJncykpKSwgX3RoaXMpLCBfdGhpcy5zdGF0ZSA9IHtcbiAgICAgIG1hdGNoOiBfdGhpcy5jb21wdXRlTWF0Y2goX3RoaXMucHJvcHMsIF90aGlzLmNvbnRleHQucm91dGVyKVxuICAgIH0sIF90ZW1wKSwgX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oX3RoaXMsIF9yZXQpO1xuICB9XG5cbiAgUm91dGUucHJvdG90eXBlLmdldENoaWxkQ29udGV4dCA9IGZ1bmN0aW9uIGdldENoaWxkQ29udGV4dCgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgcm91dGVyOiBfZXh0ZW5kcyh7fSwgdGhpcy5jb250ZXh0LnJvdXRlciwge1xuICAgICAgICByb3V0ZToge1xuICAgICAgICAgIGxvY2F0aW9uOiB0aGlzLnByb3BzLmxvY2F0aW9uIHx8IHRoaXMuY29udGV4dC5yb3V0ZXIucm91dGUubG9jYXRpb24sXG4gICAgICAgICAgbWF0Y2g6IHRoaXMuc3RhdGUubWF0Y2hcbiAgICAgICAgfVxuICAgICAgfSlcbiAgICB9O1xuICB9O1xuXG4gIFJvdXRlLnByb3RvdHlwZS5jb21wdXRlTWF0Y2ggPSBmdW5jdGlvbiBjb21wdXRlTWF0Y2goX3JlZiwgcm91dGVyKSB7XG4gICAgdmFyIGNvbXB1dGVkTWF0Y2ggPSBfcmVmLmNvbXB1dGVkTWF0Y2gsXG4gICAgICAgIGxvY2F0aW9uID0gX3JlZi5sb2NhdGlvbixcbiAgICAgICAgcGF0aCA9IF9yZWYucGF0aCxcbiAgICAgICAgc3RyaWN0ID0gX3JlZi5zdHJpY3QsXG4gICAgICAgIGV4YWN0ID0gX3JlZi5leGFjdCxcbiAgICAgICAgc2Vuc2l0aXZlID0gX3JlZi5zZW5zaXRpdmU7XG5cbiAgICBpZiAoY29tcHV0ZWRNYXRjaCkgcmV0dXJuIGNvbXB1dGVkTWF0Y2g7IC8vIDxTd2l0Y2g+IGFscmVhZHkgY29tcHV0ZWQgdGhlIG1hdGNoIGZvciB1c1xuXG4gICAgaW52YXJpYW50KHJvdXRlciwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPFJvdXRlPiBvciB3aXRoUm91dGVyKCkgb3V0c2lkZSBhIDxSb3V0ZXI+XCIpO1xuXG4gICAgdmFyIHJvdXRlID0gcm91dGVyLnJvdXRlO1xuXG4gICAgdmFyIHBhdGhuYW1lID0gKGxvY2F0aW9uIHx8IHJvdXRlLmxvY2F0aW9uKS5wYXRobmFtZTtcblxuICAgIHJldHVybiBtYXRjaFBhdGgocGF0aG5hbWUsIHsgcGF0aDogcGF0aCwgc3RyaWN0OiBzdHJpY3QsIGV4YWN0OiBleGFjdCwgc2Vuc2l0aXZlOiBzZW5zaXRpdmUgfSwgcm91dGUubWF0Y2gpO1xuICB9O1xuXG4gIFJvdXRlLnByb3RvdHlwZS5jb21wb25lbnRXaWxsTW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsTW91bnQoKSB7XG4gICAgd2FybmluZyghKHRoaXMucHJvcHMuY29tcG9uZW50ICYmIHRoaXMucHJvcHMucmVuZGVyKSwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPFJvdXRlIGNvbXBvbmVudD4gYW5kIDxSb3V0ZSByZW5kZXI+IGluIHRoZSBzYW1lIHJvdXRlOyA8Um91dGUgcmVuZGVyPiB3aWxsIGJlIGlnbm9yZWRcIik7XG5cbiAgICB3YXJuaW5nKCEodGhpcy5wcm9wcy5jb21wb25lbnQgJiYgdGhpcy5wcm9wcy5jaGlsZHJlbiAmJiAhaXNFbXB0eUNoaWxkcmVuKHRoaXMucHJvcHMuY2hpbGRyZW4pKSwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPFJvdXRlIGNvbXBvbmVudD4gYW5kIDxSb3V0ZSBjaGlsZHJlbj4gaW4gdGhlIHNhbWUgcm91dGU7IDxSb3V0ZSBjaGlsZHJlbj4gd2lsbCBiZSBpZ25vcmVkXCIpO1xuXG4gICAgd2FybmluZyghKHRoaXMucHJvcHMucmVuZGVyICYmIHRoaXMucHJvcHMuY2hpbGRyZW4gJiYgIWlzRW1wdHlDaGlsZHJlbih0aGlzLnByb3BzLmNoaWxkcmVuKSksIFwiWW91IHNob3VsZCBub3QgdXNlIDxSb3V0ZSByZW5kZXI+IGFuZCA8Um91dGUgY2hpbGRyZW4+IGluIHRoZSBzYW1lIHJvdXRlOyA8Um91dGUgY2hpbGRyZW4+IHdpbGwgYmUgaWdub3JlZFwiKTtcbiAgfTtcblxuICBSb3V0ZS5wcm90b3R5cGUuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMobmV4dFByb3BzLCBuZXh0Q29udGV4dCkge1xuICAgIHdhcm5pbmcoIShuZXh0UHJvcHMubG9jYXRpb24gJiYgIXRoaXMucHJvcHMubG9jYXRpb24pLCAnPFJvdXRlPiBlbGVtZW50cyBzaG91bGQgbm90IGNoYW5nZSBmcm9tIHVuY29udHJvbGxlZCB0byBjb250cm9sbGVkIChvciB2aWNlIHZlcnNhKS4gWW91IGluaXRpYWxseSB1c2VkIG5vIFwibG9jYXRpb25cIiBwcm9wIGFuZCB0aGVuIHByb3ZpZGVkIG9uZSBvbiBhIHN1YnNlcXVlbnQgcmVuZGVyLicpO1xuXG4gICAgd2FybmluZyghKCFuZXh0UHJvcHMubG9jYXRpb24gJiYgdGhpcy5wcm9wcy5sb2NhdGlvbiksICc8Um91dGU+IGVsZW1lbnRzIHNob3VsZCBub3QgY2hhbmdlIGZyb20gY29udHJvbGxlZCB0byB1bmNvbnRyb2xsZWQgKG9yIHZpY2UgdmVyc2EpLiBZb3UgcHJvdmlkZWQgYSBcImxvY2F0aW9uXCIgcHJvcCBpbml0aWFsbHkgYnV0IG9taXR0ZWQgaXQgb24gYSBzdWJzZXF1ZW50IHJlbmRlci4nKTtcblxuICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgbWF0Y2g6IHRoaXMuY29tcHV0ZU1hdGNoKG5leHRQcm9wcywgbmV4dENvbnRleHQucm91dGVyKVxuICAgIH0pO1xuICB9O1xuXG4gIFJvdXRlLnByb3RvdHlwZS5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgdmFyIG1hdGNoID0gdGhpcy5zdGF0ZS5tYXRjaDtcbiAgICB2YXIgX3Byb3BzID0gdGhpcy5wcm9wcyxcbiAgICAgICAgY2hpbGRyZW4gPSBfcHJvcHMuY2hpbGRyZW4sXG4gICAgICAgIGNvbXBvbmVudCA9IF9wcm9wcy5jb21wb25lbnQsXG4gICAgICAgIHJlbmRlciA9IF9wcm9wcy5yZW5kZXI7XG4gICAgdmFyIF9jb250ZXh0JHJvdXRlciA9IHRoaXMuY29udGV4dC5yb3V0ZXIsXG4gICAgICAgIGhpc3RvcnkgPSBfY29udGV4dCRyb3V0ZXIuaGlzdG9yeSxcbiAgICAgICAgcm91dGUgPSBfY29udGV4dCRyb3V0ZXIucm91dGUsXG4gICAgICAgIHN0YXRpY0NvbnRleHQgPSBfY29udGV4dCRyb3V0ZXIuc3RhdGljQ29udGV4dDtcblxuICAgIHZhciBsb2NhdGlvbiA9IHRoaXMucHJvcHMubG9jYXRpb24gfHwgcm91dGUubG9jYXRpb247XG4gICAgdmFyIHByb3BzID0geyBtYXRjaDogbWF0Y2gsIGxvY2F0aW9uOiBsb2NhdGlvbiwgaGlzdG9yeTogaGlzdG9yeSwgc3RhdGljQ29udGV4dDogc3RhdGljQ29udGV4dCB9O1xuXG4gICAgaWYgKGNvbXBvbmVudCkgcmV0dXJuIG1hdGNoID8gUmVhY3QuY3JlYXRlRWxlbWVudChjb21wb25lbnQsIHByb3BzKSA6IG51bGw7XG5cbiAgICBpZiAocmVuZGVyKSByZXR1cm4gbWF0Y2ggPyByZW5kZXIocHJvcHMpIDogbnVsbDtcblxuICAgIGlmICh0eXBlb2YgY2hpbGRyZW4gPT09IFwiZnVuY3Rpb25cIikgcmV0dXJuIGNoaWxkcmVuKHByb3BzKTtcblxuICAgIGlmIChjaGlsZHJlbiAmJiAhaXNFbXB0eUNoaWxkcmVuKGNoaWxkcmVuKSkgcmV0dXJuIFJlYWN0LkNoaWxkcmVuLm9ubHkoY2hpbGRyZW4pO1xuXG4gICAgcmV0dXJuIG51bGw7XG4gIH07XG5cbiAgcmV0dXJuIFJvdXRlO1xufShSZWFjdC5Db21wb25lbnQpO1xuXG5Sb3V0ZS5wcm9wVHlwZXMgPSB7XG4gIGNvbXB1dGVkTWF0Y2g6IFByb3BUeXBlcy5vYmplY3QsIC8vIHByaXZhdGUsIGZyb20gPFN3aXRjaD5cbiAgcGF0aDogUHJvcFR5cGVzLnN0cmluZyxcbiAgZXhhY3Q6IFByb3BUeXBlcy5ib29sLFxuICBzdHJpY3Q6IFByb3BUeXBlcy5ib29sLFxuICBzZW5zaXRpdmU6IFByb3BUeXBlcy5ib29sLFxuICBjb21wb25lbnQ6IFByb3BUeXBlcy5mdW5jLFxuICByZW5kZXI6IFByb3BUeXBlcy5mdW5jLFxuICBjaGlsZHJlbjogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLmZ1bmMsIFByb3BUeXBlcy5ub2RlXSksXG4gIGxvY2F0aW9uOiBQcm9wVHlwZXMub2JqZWN0XG59O1xuUm91dGUuY29udGV4dFR5cGVzID0ge1xuICByb3V0ZXI6IFByb3BUeXBlcy5zaGFwZSh7XG4gICAgaGlzdG9yeTogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkLFxuICAgIHJvdXRlOiBQcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWQsXG4gICAgc3RhdGljQ29udGV4dDogUHJvcFR5cGVzLm9iamVjdFxuICB9KVxufTtcblJvdXRlLmNoaWxkQ29udGV4dFR5cGVzID0ge1xuICByb3V0ZXI6IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZFxufTtcblxuXG5leHBvcnQgZGVmYXVsdCBSb3V0ZTsiLCIvLyBXcml0dGVuIGluIHRoaXMgcm91bmQgYWJvdXQgd2F5IGZvciBiYWJlbC10cmFuc2Zvcm0taW1wb3J0c1xuaW1wb3J0IFJvdXRlIGZyb20gXCJyZWFjdC1yb3V0ZXIvZXMvUm91dGVcIjtcblxuZXhwb3J0IGRlZmF1bHQgUm91dGU7IiwiaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gXCJyZWFjdFwiO1xuXG5jbGFzcyBVc2VyIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICBzdXBlcihwcm9wcyk7XG4gICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgIHVzZXI6IHtcbiAgICAgICAgbmFtZTogXCJcIlxuICAgICAgfVxuICAgIH07XG4gICAgdGhpcy5mZXRjaFVzZXJzID0gdGhpcy5mZXRjaFVzZXJzLmJpbmQodGhpcyk7XG4gIH1cblxuICBmZXRjaFVzZXJzKCkge1xuICAgIGZldGNoKFwiL3VzZXJzL2dldFVzZXJzXCIpXG4gICAgICAudGhlbihyZXNwb25zZSA9PiB7XG4gICAgICAgIHJldHVybiByZXNwb25zZS5qc29uKCk7XG4gICAgICB9KVxuICAgICAgLnRoZW4oanNvbiA9PiB7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgIHVzZXI6IGpzb25cbiAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgfVxuXG4gIGNvbXBvbmVudFdpbGxNb3VudCgpIHtcbiAgICB0aGlzLmZldGNoVXNlcnMoKTtcbiAgfVxuXG4gIHJlbmRlcigpIHtcbiAgICByZXR1cm4gKFxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJ1c2VyXCI+XG4gICAgICAgIDxoMT5IZWxsbyB7dGhpcy5zdGF0ZS51c2VyLm5hbWV9PC9oMT5cbiAgICAgICAgPGEgaHJlZj1cIi91c2Vycy9wb3N0VXNlclwiPkNyZWF0ZSBOb2RlPC9hPlxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBVc2VyO1xuIiwiaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gXCJyZWFjdFwiO1xuXG5jbGFzcyBVc2VyIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICBzdXBlcihwcm9wcyk7XG4gICAgdGhpcy5zdGF0ZSA9IHt9O1xuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIHJldHVybiAoXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cIm5hdmlnYXRpb25cIj5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJtZW51XCI+XG4gICAgICAgICAgPHVsPlxuICAgICAgICAgICAgPGxpPlxuICAgICAgICAgICAgICA8YSBocmVmPVwiL1wiPkhvbWU8L2E+XG4gICAgICAgICAgICA8L2xpPlxuICAgICAgICAgICAgPGxpPlxuICAgICAgICAgICAgICA8YSBocmVmPVwiL3VzZXJzXCI+VXNlcnM8L2E+XG4gICAgICAgICAgICA8L2xpPlxuICAgICAgICAgIDwvdWw+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBVc2VyO1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgcmVuZGVyIH0gZnJvbSBcInJlYWN0LWRvbVwiO1xuXG5pbXBvcnQgVXNlciBmcm9tIFwiLi4vY29tcG9uZW50cy9Vc2VyLmpzeFwiO1xuaW1wb3J0IE1lbnUgZnJvbSBcIi4uL2NvbXBvbmVudHMvTWVudS5qc3hcIjtcblxuY2xhc3MgSG9tZSBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gIHJlbmRlcigpIHtcbiAgICByZXR1cm4gKFxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJwYWdlXCI+XG4gICAgICAgIDxNZW51IC8+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiaG9tZVwiPlxuICAgICAgICAgIDxVc2VyIC8+XG4gICAgICAgICAgPHA+V2VsY29tZSB0byB0aGUgUmVhY3RKUyBhbmQgRXhwcmVzc0pTIGdlbmVyYXRvcjwvcD5cbiAgICAgICAgICA8cD5cbiAgICAgICAgICAgIENoZWNrIG91dCB0aGV7XCIgXCJ9XG4gICAgICAgICAgICA8YSBocmVmPVwiaHR0cHM6Ly9naXRodWIuY29tL2tldmluLXd5bm4vcmVhY3Rqcy1leHByZXNzLWdlbmVyYXRvci93aWtpXCI+XG4gICAgICAgICAgICAgIGRvY3VtZW50YXRpb25cbiAgICAgICAgICAgIDwvYT57XCIgXCJ9XG4gICAgICAgICAgICB0byBnZXQgc3RhcnRlZC5cbiAgICAgICAgICA8L3A+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBIb21lO1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgcmVuZGVyIH0gZnJvbSBcInJlYWN0LWRvbVwiO1xuXG5pbXBvcnQgVXNlciBmcm9tIFwiLi4vY29tcG9uZW50cy9Vc2VyLmpzeFwiO1xuaW1wb3J0IE1lbnUgZnJvbSBcIi4uL2NvbXBvbmVudHMvTWVudS5qc3hcIjtcblxuY2xhc3MgSG9tZSBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gIHJlbmRlcigpIHtcbiAgICByZXR1cm4gKFxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJwYWdlXCI+XG4gICAgICAgIDxNZW51IC8+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidXNlcnNcIj5cbiAgICAgICAgICA8aDE+VXNlcnMgUGFnZTwvaDE+XG4gICAgICAgICAgPFVzZXIgLz5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICApO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IEhvbWU7XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyByZW5kZXIgfSBmcm9tIFwicmVhY3QtZG9tXCI7XG5pbXBvcnQgeyBCcm93c2VyUm91dGVyIGFzIFJvdXRlciwgUm91dGUsIFN3aXRjaCB9IGZyb20gXCJyZWFjdC1yb3V0ZXItZG9tXCI7XG5cbmltcG9ydCBcIi4vLi4vc2Nzcy9tYWluLnNjc3NcIjtcblxuaW1wb3J0IEhvbWUgZnJvbSBcIi4vcGFnZXMvSG9tZS5qc3hcIjtcbmltcG9ydCBVc2VycyBmcm9tIFwiLi9wYWdlcy9Vc2Vycy5qc3hcIjtcblxucmVuZGVyKFxuICA8Um91dGVyPlxuICAgIDxTd2l0Y2g+XG4gICAgICA8Um91dGUgZXhhY3QgcGF0aD1cIi9cIiBjb21wb25lbnQ9e0hvbWV9IC8+XG4gICAgICA8Um91dGUgZXhhY3QgcGF0aD1cIi91c2Vyc1wiIGNvbXBvbmVudD17VXNlcnN9IC8+XG4gICAgPC9Td2l0Y2g+XG4gIDwvUm91dGVyPixcbiAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJhcHBcIilcbik7XG4iXSwic291cmNlUm9vdCI6IiJ9